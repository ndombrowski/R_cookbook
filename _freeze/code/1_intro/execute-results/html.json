{
  "hash": "a8b256cbd500d08b246e5696aecaded4",
  "result": {
    "markdown": "---\nexecute:\n    eval: true\n\ndf-print: paged\n---\n\n\n# Introduction into R\n\nR is a statistical programming language and environment and free, open source and in active development. \nThis tutorial will introduce into the basic concepts of R.\n\nThis tutorial will work with example data for two datasets:\n\n**1. Growth data**\n\nWe have two data files that work with a similar experimental setup:\n\n1.1. **Growth_Data.txt**\n\nDuring this experiments, we are doing plant growth experiments and treated our plants with different microbes wondering if any microbe affects plant growth in a positive way.\n\nThis file contains measurements of root length and shoot fresh weight for plants grown under control treatments (=MgCL) or when treating with 4 different bacteria. For simplicity only 1 biological experiment with 7-10 individual measurements per treatment were included.\n\n1.2. **Timecourse.txt** \n\nWe found positive effects for some of the strains tested above and now we want to know how long it takes for this effect to appear. To answer this, we measured root length of our plants when adding our microbe and compared it to control treatments at 5 different time points. \nSomething unique with this dataframe is that we have empty cells (=NAs) and we need to deal with them as some R functions don't like empty cells.\n\n\n## The example data\n\nLet's have a look at the data structure for our first dataframe:\n\n\n::: {.cell}\n\n```\n## list()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThe timecourse data looks similar, we just have an extra column for the different timepoints and we only have measurements for the root length.\n\n\n**2. Annotation data**\n\nThis file is specific to the output of the [Spang_team annotation pipeline](https://github.com/ndombrowski/Annotation_workflow) but this workflow can be used for any type of categorical data one wants to summarize.\n\nUsing this workflow, we generated the file **UAP2_Annotation_table_u.txt**, which includes annotations for a set of 46 DPANN genomes. This includes annotations across several databases (arCOG, KO, PFAM, ...) for each individual protein found across all these 46 genomes. \n\nSpecifically, we want to learn how to:\n\n- Make a count table for each genome\n- Make  a count table for clusters of interest \n- Make a heatmap for genes of interest\n- Merge our results with some pre-sorted tables\n\nFor this to work we have some additional files to make our job easier:\n\n- **mapping.txt** =  a list that defines to what cluster (i.e. grouping based on a phylogenetic tree) or bins belong to\n- **Genes_of_interest** = a list of genes we are interested in and that we want to plot in a heatmap\n- **ar14_arCOGdef19.txt** = metadata for the arCOG annotations\n- **Metabolism_Table_KO_Apr2020.txt** = metadata for KOs and sorted by pathways\n\nThe annotation table looks like this:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|accession                      |BinID           |TaxString |NewContigID |OldContigId         |ContigIdMerge            | ContigNewLength|    GC|ProteinID      | ProteinGC| ProteinLength|Prokka                                                 |arcogs     |arcogs_geneID |arcogs_Description                                        |Pathway |arcogs_evalue |KO_hmm |e_value   |bit_score |bit_score_cutoff |Definition                                                                |confidence |PFAM_hmm |PFAM_description                        |Pfam_Evalue |TIRGR     |TIGR_description                                 |EC       |TIGR_Evalue |CAZy |CAZy_evalue |Description |TDBD_ID |TPDB_evalue |HydDB |Description.1 |HydDB_evalue |PFAM                                                                        |PFAMdescription                                                                                                                                                                                   |IPR              |IPRdescription                          |TopHit                                                                                        |E_value  |PecID |TaxID   |TaxString.1                                                                                                                     |\n|:------------------------------|:---------------|:---------|:-----------|:-------------------|:------------------------|---------------:|-----:|:--------------|---------:|-------------:|:------------------------------------------------------|:----------|:-------------|:---------------------------------------------------------|:-------|:-------------|:------|:---------|:---------|:----------------|:-------------------------------------------------------------------------|:----------|:--------|:---------------------------------------|:-----------|:---------|:------------------------------------------------|:--------|:-----------|:----|:-----------|:-----------|:-------|:-----------|:-----|:-------------|:------------|:---------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------|:---------------------------------------|:---------------------------------------------------------------------------------------------|:--------|:-----|:-------|:-------------------------------------------------------------------------------------------------------------------------------|\n|NIOZ119_mb_b5_2-PJFDGLDN_00010 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_1  |NIOZ119_sc1610046_1 |NIOZ119_mb_b5_2_contig_1 |            2539| 0.432|PJFDGLDN_00010 |     0.094|           350|Digeranylgeranylglycerophospholipid reductase          |arCOG00570 |-             |\"Geranylgeranyl_reductase,_flavoprotein\"                  |I       |2.80E-75      |K17830 |2.10E-69  |243.3     |246.87           |digeranylgeranylglycerophospholipid_reductase_[EC:1.3.1.101_1.3.7.11]     |-          |PF01494  |FAD_binding_domain                      |5.90E-09    |TIGR02032 |geranylgeranyl_reductase_family                  |1.3.1.-  |1.40E-49    |-    |-           |-           |-       |-           |-     |-             |-            |IPR036188;_IPR002938                                                        |FAD/NAD(P)-binding_domain_superfamily;_FAD-binding_domain                                                                                                                                         |PF01494          |FAD_binding_domain                      |KYK22416.1_hypothetical_protein_AYK24_02275_[Thermoplasmatales_archaeon_SG8-52-4]             |2.80E-58 |36.5  |1803819 |\"Archaea,Euryarchaeota,Thermoplasmata,Thermoplasmatales,none,none,Thermoplasmatales_archaeon_SG8-52-4\"                          |\n|NIOZ119_mb_b5_2-PJFDGLDN_00020 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_1  |NIOZ119_sc1610046_1 |NIOZ119_mb_b5_2_contig_1 |            2539| 0.432|PJFDGLDN_00020 |     0.057|           105|hypothetical protein                                   |-          |-             |-                                                         |-       |-             |-      |-         |-         |-                |-                                                                         |-          |-        |-                                       |-           |-         |-                                                |-        |-           |-    |-           |-           |-       |-           |-     |-             |-            |-                                                                           |-                                                                                                                                                                                                 |-                |-                                       |-                                                                                             |-        |-     |-       |-                                                                                                                               |\n|NIOZ119_mb_b5_2-PJFDGLDN_00030 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_1  |NIOZ119_sc1610046_1 |NIOZ119_mb_b5_2_contig_1 |            2539| 0.432|PJFDGLDN_00030 |     0.092|           304|tRNA-2-methylthio-N(6)-dimethylallyladenosine synthase |arCOG01358 |MiaB          |2-methylthioadenine_synthetase                            |J       |5.80E-90      |K15865 |1.20E-109 |375.8     |343.7            |threonylcarbamoyladenosine_tRNA_methylthiotransferase_CDKAL1_[EC:2.8.4.5] |high_score |PF04055  |Radical_SAM_superfamily                 |2.60E-21    |TIGR01578 |\"MiaB-like_tRNA_modifying_enzyme,_archaeal-type\" |-        |1.70E-104   |-    |-           |-           |-       |-           |-     |-             |-            |IPR005839;_IPR002792;_IPR006466;_IPR006638;_IPR007197;_IPR020612;_IPR023404 |\"Methylthiotransferase;_TRAM_domain;_MiaB-like_tRNA_modifying_enzyme,_archaeal-type;_Elp3/MiaB/NifB;_Radical_SAM;_Methylthiotransferase,_conserved_site;_Radical_SAM,_alpha/beta_horseshoe\"       |PF01938;_PF04055 |TRAM_domain;_Radical_SAM_superfamily    |OIO63284.1_hypothetical_protein_AUJ83_01460_[Candidatus_Woesearchaeota_archaeon_CG1_02_33_12] |8.20E-91 |55.6  |1805422 |\"Archaea,Candidatus_Woesearchaeota,none,none,none,none,Candidatus_Woesearchaeota_archaeon_CG1_02_33_12\"                         |\n|NIOZ119_mb_b5_2-PJFDGLDN_00040 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_2  |NIOZ119_sc560284_1  |NIOZ119_mb_b5_2_contig_2 |            4191| 0.456|PJFDGLDN_00040 |     0.065|            92|Enolase                                                |arCOG01169 |Eno           |Enolase                                                   |G       |4.00E-26      |K01689 |5.10E-20  |81        |48.73            |enolase_[EC:4.2.1.11]                                                     |high_score |PF00113  |\"Enolase,_C-terminal_TIM_barrel_domain\" |1.20E-20    |TIGR01060 |phosphopyruvate_hydratase                        |4.2.1.11 |1.10E-25    |-    |-           |-           |-       |-           |-     |-             |-            |IPR020810;_IPR036849;_IPR000941;_IPR020809                                  |\"Enolase,_C-terminal_TIM_barrel_domain;_Enolase-like,_C-terminal_domain_superfamily;_Enolase;_Enolase,_conserved_site\"                                                                            |PF00113          |\"Enolase,_C-terminal_TIM_barrel_domain\" |BAW30993.1_2-phosphoglycerate_dehydratase_[Methanothermobacter_sp._MT-2]                      |3.80E-23 |70.7  |1898379 |\"Archaea,Euryarchaeota,Methanobacteria,Methanobacteriales,Methanobacteriaceae,Methanothermobacter,Methanothermobacter_sp._MT-2\" |\n|NIOZ119_mb_b5_2-PJFDGLDN_00050 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_2  |NIOZ119_sc560284_1  |NIOZ119_mb_b5_2_contig_2 |            4191| 0.456|PJFDGLDN_00050 |     0.059|           218|30S ribosomal protein S2                               |arCOG04245 |RpsB          |Ribosomal_protein_S2                                      |J       |8.90E-64      |K02998 |1.60E-46  |167.8     |210.97           |small_subunit_ribosomal_protein_SAe                                       |-          |PF00318  |Ribosomal_protein_S2                    |7.00E-24    |TIGR01012 |ribosomal_protein_uS2                            |-        |1.00E-72    |-    |-           |-           |-       |-           |-     |-             |-            |IPR005707;_IPR023454;_IPR023591;_IPR018130;_IPR001865                       |\"Ribosomal_protein_S2,_eukaryotic/archaeal;_Ribosomal_protein_S2,_archaeal;_Ribosomal_protein_S2,_flavodoxin-like_domain_superfamily;_Ribosomal_protein_S2,_conserved_site;_Ribosomal_protein_S2\" |PF00318          |Ribosomal_protein_S2                    |A0B6E5.1_RecName:_Full=30S_ribosomal_protein_S2                                               |1.20E-56 |52.8  |349307  |\"Archaea,Euryarchaeota,Methanomicrobia,Methanosarcinales,Methanotrichaceae,Methanothrix,Methanothrix_thermoacetophila\"          |\n|NIOZ119_mb_b5_2-PJFDGLDN_00060 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_2  |NIOZ119_sc560284_1  |NIOZ119_mb_b5_2_contig_2 |            4191| 0.456|PJFDGLDN_00060 |     0.100|           280|hypothetical protein                                   |arCOG01728 |Mho1          |\"Predicted_class_III_extradiol_dioxygenase,_MEMO1_family\" |R       |8.80E-74      |K06990 |1.40E-72  |253.3     |47               |MEMO1_family_protein                                                      |high_score |PF01875  |Memo-like_protein                       |4.50E-77    |TIGR04336 |AmmeMemoRadiSam_system_protein_B                 |-        |5.30E-91    |-    |-           |-           |-       |-           |-     |-             |-            |IPR002737                                                                   |MEMO1_family                                                                                                                                                                                      |PF01875          |Memo-like_protein                       |OYT50994.1_AmmeMemoRadiSam_system_protein_B_[Candidatus_Bathyarchaeota_archaeon_ex4484_135]   |1.30E-66 |47    |2012509 |\"Archaea,Candidatus_Bathyarchaeota,none,none,none,none,Candidatus_Bathyarchaeota_archaeon_ex4484_135\"                           |\n:::\n:::\n\n\n\n## RStudio (everything in one place):\n\nR is command-line only while RStudio is a GUI ((graphical user interface)) version of R. \n\nRStudio includes the following:\n\n* Script separate from command-line (left-hand screen)\n* Lists your variables (upper, right-hand corner)\n* Manual and an extensive help function\n* Easy install of new packages\n* Plots are shown within RStudio\n\n<p align=\"left\">\n  <img height=\"400\" src=\"../images/RStudio.png\">\n</p>\n\n\n## Opening R via the terminal\n\nIf you work with linux or want to start R from the terminal then open your terminal, \nchange your directory to the R_exercises folder and then just type ``R``. \n\nThen, you should see something like this:\n\n<p align=\"left\">\n  <img height=\"300\" src=\"../images/R.png\">\n</p>\n\nTo check your R version, start and quit R you can do the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Ask what R version we have\nR.version\n\n#start R\nR\n\n#exit R\nq()\n```\n:::\n\n\n\n## Documenting code via markdown\n\n### Software\n\n#### Rmarkdown\n\nOne nice way to commend code is combine R-code with informative text in R markdown format (rmd).   \n\nR Markdown supports dozens of static and dynamic output formats including:\nHTML, PDF, MS Word, Beamer, HTML5 slides, Tufte-style handouts, books, dashboards, shiny applications, scientific articles, websites, and more.\n\nThe R markdown file specifies code chunks which will be executed in R (or python or bash) and plain text which will be written to the report as is. A report is created by rendering the file in R, then the R-code is executed and the results are merged in a pdf or html output.\n\nHow you create a Rmarkdown document in R:\n\n- Open RStudio\n- press `File/new File/R markdown`\n\nThis will create an R markdown file that already contains some R code and text. \nYou can also open this document (the rmd file) in RStudio and see how the code looks.\n\nYou can also open a new file in any text editor and save it with the .rmd extension. \n\n\n#### Quarto \n\n[Quarto<c2><ae>](https://quarto.org) is the predecessor of RMarkdown and is an open-source scientific and technical publishing system built on Pandoc and allows to:\n\n- Create dynamic content with Python, R, Julia, and Observable.\n- Author documents as plain text markdown or Jupyter notebooks.\n- Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.\n- Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.\n\nIf you installed the newest version of RStudio, Quarto is already installed and we can create a quarto document with\n\n- Open RStudio\n- press `File/New File/Quarto document`\n\nSame as with RMarkdown, we document with Markdown (and HTML if we want), so knowing some basics is very useful.\n\n\n### R code in Markdown\n\n* The R-code is embedded in between the  \n` ```{r}` and  ` ``` ` symbols.   \n\nIn Rstudio, on the top-right position of such a section you will find three symbols. \nPressing the middle one will run all code chunks above, while the right symbol will run the current R-chunk.\n\n<p align=\"left\">\n  <img width=800 src=\"../images/R2.png\">\n</p>\n\nAn important menu-button is the **Knit** or **Render** button at the top, left-hand corner of RStudio. \nPressing this button will create the final, rendered document (i.e. a HTML or PDF)\n\n\n### Text in markdown\n\n* Headings are defined with '#', or '##', or '###' for first, second and third level.\n* Lists are created by using '*' for (bullets) and '1', <e2><80><a6> for numbered lists.\n* A lot of other options are possible, more information on these can be found in the following documents.\n    - The Rmarkdown website: **https://rmarkdown.rstudio.com** \n    - You can find more R cheat sheets on **https://rstudio.com/resources/cheatsheets/**\n    - Another info sheet with info how to modify code: **https://www.rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf**\n\n\n### Execution options\n\nThere are a wide variety of options available for customizing output from executed code\n\n* include = FALSE --- prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.\n* echo = FALSE --- prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.\n* message = FALSE --- prevents messages that are generated by code from appearing in the finished file.\n* warning = FALSE --- prevents warnings that are generated by code from appearing in the finished.\n* fig.cap = \"...\" --- adds a caption to graphical results.\n\nFor setting these options inside a quarto document, see more [here](https://quarto.org/docs/computations/execution-options.html).\n\n\n\n### Using languages other than R\n\nR Markdown/Quarto support several languages, such as bash and python, and you can call them in the same way as R code. \n\nThis is useful if you for example modify a dataframe in bash but then want continue to work on the data R. \nWith proper documenting you can document the code in the same file. \n\nBelow is just an example, we see that we only need to \"tell\" R to use bash instead of R\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#run echo to print something to the screen\necho 'hello world'\n\n#run echo and follow with a sed to modify text\necho 'a b c' | sed 's/ /\\|/g'\n\n#list qmd files we have in our directory\nls -l *qmd\n\n#show whats in our data\nhead ../data/Growth_Data.txt \n## hello world\n## a|b|c\n## -rw-r--r--@ 1 ninadombrowski  staff  118003 Oct  5 12:26 1_intro.qmd\n## -rw-r--r--@ 1 ninadombrowski  staff     239 Sep 29 15:31 2_misc.qmd\n## -rw-r--r--@ 1 ninadombrowski  staff    4015 Oct  5 10:20 test.qmd\n## SampleID\tNutrient\tCondition\tFW_shoot_mg \tRootlength\n## noP\tnoP\tMgCl\t10.26\t5.931015152\n## noP\tnoP\tMgCl\t6.52\t5.74344697\n## noP\tnoP\tMgCl\t12.17\t6.834719697\n## noP\tnoP\tMgCl\t11.37\t6.742734848\n## noP\tnoP\tMgCl\t9.8\t6.736886364\n## noP\tnoP\tMgCl\t3.75\t4.236348485\n## noP\tnoP\tMgCl\t5.38\t4.753484848\n## noP\tnoP\tMgCl\t4.53\t5.532333333\n## noP\tnoP\tMgCl\t7.75\t5.484363636\n```\n:::\n\n\nA general introduction into bash and awk is provided in two separate tutorials that are also available on github.\n\n\n\n## Good practices for coding\n\nThese practices are useful regardless of the computational language you use.\n\n* Record what program versions you used\n* For each project, document who wrote the code, when you did it and why\n* Put dependencies in the beginning (ie packages)\n* Record the working directory (wdir)\n* Document ALL your code and comment it (using the # symbol)\n* Comment code in detail, so that you can still understand it after 5 years\n* Break code into smaller pieces for better readability\n* Test each line of code and build in control steps\n* If you work with random numbers, report the seed\n* Use sessionInfo() at the end of the script, which documents all the packages used within R for the current project\n* For larger files: save objects not workspaces (for space reasons)\n* Have descriptive names for objects, short and simple but easy enough to understand what they mean\n\n\n\n\n## General introduction into R\n\n### Getting help\n\n1. Some good places to check for things online are:\n\n* www.r-project.org\n*stack overflow\n*many more\n\n2. Inside of R, we can get help on functions and other things with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelp(mean)\n?mean\n```\n:::\n\n\n\n### What is a workspace?\n\nThe workspace is your current R working environment and includes any user-defined objects (i.e. vectors, matrices, data frames, lists, functions). \n\nAt the end of an R session, the user can save an image of the current workspace that is automatically reloaded the next time R is started. \n\n- From now on the code is shown in the grey area.\n- If you see a line symbol, such as ``[1]`` then this shows the result of running our code. \n- For example, first we run the code ``getwd()`` and the second box shows us the results.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#print the current working directory\ngetwd() \n## [1] \"/Users/ninadombrowski/Desktop/WorkingDir/Notebooks/Code_snippets/R/code\"\n\n#list the objects in the current workspace\nls()   \n## [1] \"annotation_data\" \"growth_data\"\n```\n:::\n\n\n\n### Setting your working directory (wdir)\n\nThe directory from which you work is usually first set from where you start R. But it can be re-set to find your data more easily. Ideally, you make one wdir per project and define the path in the script (see later below). It is recommended to have a similar format for these project folders, i.e. consider to create subfolders for input and output files. From the wdir you set you can load files using absolute and relative paths.\n\nAn example would be something with a structure like this:\n\n<p align=\"left\">\n  <img height=\"200\" src=\"../images/FolderStructure.png\">\n</p>\n\nIn this example you see that we have 4 projects, and in each folder we have the R_script and folders for the required input and required output files. Also useful to have is a text file with the session info and if you plan to share this with others it is also good to have a README file that provides some background on the analysis done.\n\nOptions to see the working dir and set the working directory in R are:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#print your wdir\ngetwd()\n\n#setting your wdir\nsetwd(getwd())\n```\n:::\n\n\n\n### Packages\n\nPackages are a collection of functions and tools that can be added to R that are often contributed by the community.\nCareful: there might be incompatibilities and packages are updated frequently but updating can break dependencies. \n\nYou need to install packages and load them EVERY TIME you want to use them. Therefore, ideally add them at the beginning of your scripts.\n\n\n#### Installing packages\n\nWe have two ways to install packages:\n\n1. Via the console by typing:\n\n``install.packages(\"package-name\")``\n\nThis will download a package from one of the CRAN mirrors assuming that a binary is available for your operating system. If you have not set a preferred CRAN mirror in your options(), then a menu will pop up asking you to choose a location.\n\nUse ``old.packages()`` to list all your locally installed packages that are now out of date. \n``update.packages()`` will update all packages in the known libraries interactively. This can take a while if you haven<e2><80><99>t done it recently. To update everything without any user intervention, use the ask = FALSE argument.\n\n2. Using R studio:\n\nGo to the lower right hand-side window and click on packages and then install. Find the packages your are interested in.\n\nNotice: If libraries come with their own data (i.e. example tables), then the data needs to be loaded separately. I.e. via ``data(cars)`` to load the cars data from the cars package.\n\n\n#### Loading packages into your current R session\n\nR will not remember what libraries you have loaded after you closed R. Therefore, you need to load necessary libraries every time. Here, we will load some libraries that are usually quite helpful and it is recommended to make the libraries you load part of each of your scripts. For example like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#some example packages needed for Rmarkdown\nlibrary(knitr)\nlibrary(kableExtra)\n```\n:::\n\n\n\n### The assignment operator ``<-``\n\nThe ``<-`` symbol assigns a value to a variable,\n\nGeneral rules for the syntax R uses:\n\n* R is case sensitive\n* If a variable exists, it will overwrite it with a new variable without asking\n* If you work with characters, i.e. words like 'hello', then this need to written with quotes around it: \"hello\" (this will become clearer below)\n* ls() shows all the variables that are known by the system at the moment\n* you can remove individual objects with ``rm()`` and remove all objects ``rm(list=ls())``\n\nWe can store more or less everything in a variable and use it later. \nFor example, we can store numbers and do some math with them:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#store some numbers\nx <- 1\ny <-4\n\n#do some simple math with the numbers we have stored\nx+y\n## [1] 5\n```\n:::\n\n\n\n### Use build in functions\n\nFunctions are build in code that we can use to make our life easier, i.e. we can calculate lengths of vectors, do math or do statistical analyses. \n\nBase R already knows many useful functions but loading new packages greatly increases our repertoire.\n\nA list of most used functions can be found [here](**http://www.statmethods.net/management/functions.html)\n\nA function consists of:\n\n1. Function name\n2. Arguments (optional, some might be set with a default) = control how exactly the function behaves\n3. Body of the function = defines what the function does\n\nAs an example lets test some simple functions: print and log:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#use the print function\nprint(3+5)\n## [1] 8\n\n#use the log function\nlog(10)\n## [1] 2.302585\n```\n:::\n\n\n\n#### Call the default values of a function\n\nEvery function comes with a set of arguments that you can set but that usually also have some default values. In R Studio you can easily access all those details with the help function.\n\n- ``?`` allows us to first of all check exactly what a function is doing. If you scroll down to the bottom of the help page you also get some examples on how to use a function.\n- More specifically the help function also allows us to get details on the arguments of a function.\n- For example, if we check the help page of **read.table** we see that by default this function does not read in a header and if we want to provide a header we have to change that argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#let's check what **log** is doing\n?log\n\n#lets check the default arguments of a function\n?read.table\n```\n:::\n\n\nOther useful functions:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|Name            |Function                                       |\n|:---------------|:----------------------------------------------|\n|ls()            |List objects in your current workspace         |\n|rm(object)      |Remove object from your current workspace      |\n|rm(list = ls()) |Remove all objects from your current workspace |\n:::\n:::\n\n\n\n\n## Read data into R\n\nTo work with any kind of data we need to first read the data into R to be able to work with it. \n\nFor tables, there are some things to be aware of:\n\n- It matters what separator our table uses to specify individual columns. I.e. some programs store data using commas while others use tab as default delimiter. By default R assume we use a tab, but we can change this behavior when we read in the table.\n- Do not have any hash symbols (#) in your table. R will read this as a commented cell and not read the table from that point onward\n- Avoid empty cells, as these sometimes can mess up your data.\n\nFor now, let's read in the table with our growth data and store it under the variable name **growth_data**. To read in this file we need to direct it to the correct path as we do not have the file in the working directory but in a subdirectory namd `data`.\n\nOptions that are good to keep in mind when reading in a table:\n\n- ``sep`` = define that our field separator is a tab. A tab is written like this ``/t``. If your data is using a space or comma, you can change that here.\n- ``header`` = tell R that our data comes with a custom header (the first row in your dataframe)\n- ``quote`` = deals with some annoying issue with data formatting in excel files\n\nGeneral notice:\n\n- To view data, the ``head()`` command is extremely practical, use it always when you modify data to check if everything went alright\n- ``dim()`` is another useful function that displays the dimensions of a table, i.e. how many rows and columns we have. Again, this is useful to verify our data after we have transformed it to check if everything went alright.\n- ``colnames()`` allows to only we the column names\n- ``rownames()`` allows to only we the row names. Usually these are numbers, but we can also add anything else into the rows.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read in data\ntimecourse <- read.table(\"../data/Timecourse.txt\", sep=\"\\t\", header=T,  quote = \"\")\ngrowth_data <- read.table(\"../data/Growth_Data.txt\", sep=\"\\t\", header=T,  quote = \"\")\n\n#check the first few lines of our data\nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check the dimensions of our data\ndim(growth_data)\n## [1] 105   5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check the column names\ncolnames(growth_data)\n## [1] \"SampleID\"    \"Nutrient\"    \"Condition\"   \"FW_shoot_mg\" \"Rootlength\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check the row names\nrownames(growth_data)\n##   [1] \"1\"   \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\"  \"11\"  \"12\" \n##  [13] \"13\"  \"14\"  \"15\"  \"16\"  \"17\"  \"18\"  \"19\"  \"20\"  \"21\"  \"22\"  \"23\"  \"24\" \n##  [25] \"25\"  \"26\"  \"27\"  \"28\"  \"29\"  \"30\"  \"31\"  \"32\"  \"33\"  \"34\"  \"35\"  \"36\" \n##  [37] \"37\"  \"38\"  \"39\"  \"40\"  \"41\"  \"42\"  \"43\"  \"44\"  \"45\"  \"46\"  \"47\"  \"48\" \n##  [49] \"49\"  \"50\"  \"51\"  \"52\"  \"53\"  \"54\"  \"55\"  \"56\"  \"57\"  \"58\"  \"59\"  \"60\" \n##  [61] \"61\"  \"62\"  \"63\"  \"64\"  \"65\"  \"66\"  \"67\"  \"68\"  \"69\"  \"70\"  \"71\"  \"72\" \n##  [73] \"73\"  \"74\"  \"75\"  \"76\"  \"77\"  \"78\"  \"79\"  \"80\"  \"81\"  \"82\"  \"83\"  \"84\" \n##  [85] \"85\"  \"86\"  \"87\"  \"88\"  \"89\"  \"90\"  \"91\"  \"92\"  \"93\"  \"94\"  \"95\"  \"96\" \n##  [97] \"97\"  \"98\"  \"99\"  \"100\" \"101\" \"102\" \"103\" \"104\" \"105\"\n```\n:::\n\n\nUseful comments: \n\nSometimes we have to deal with really large data that take long to load with read.table. \nThe function ``fread()`` from the data.table package is a very nice alternative. Below, we will explain how to read in R libraries to use additional functions.\n\n**This script always uses kable for plotting, which is just to make it visually attractive in html. Whenever you see a function using kable simply replace it with the ``head()`` function, i.e. write `head(growth_data)`**\n\n\n\n## Store data from R on your computer as a text file\n\nNow, if we would have modified the table we might want to store it on your computer. We can do this using ``write.table()`` and below we use a different output directory. \nNotice, we always start from the location we set as working directory. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.table(growth_data, \"../output_examples/growth_data_changed.txt\",  sep = \"\\t\", row.names = T, quote =F)\n```\n:::\n\n\nArguments:\n\n- `sep` --> we define what delimiter we want to use\n- `row.names` = T --> we want to include whatever is in the rownames\n- `quote` = F --> we do not want R to add any quotes around our columns.\n\n\n\n\n## What are objects?\n\nIn R, all types of data are treated as objects. \nAs such objects are units that we work with, i.e. data and functions. \n\nRoughly we distinguish between:\n\n* Data types = For example: numeric, characters, factors, ... You can identify your data type with the function `typeof()`\n* Data structures = For example: vector, matrix, list. You can identify the structure with `class()` or `is()`\n* `str()` = defines what the indiv. components of your data are\n\nEverything that exists is an **object**.\nEverything that happens is a **function call**.\n\nBelow, we introduce all these different types of objects.\n\n\n\n## Data classes\n\nWhen programming, data,values,etc. are stored in different ways: \n\nR has 6 atomic classes. Below you can find each class with an example\n\n- character = \"hello\"\n- numeric (real or decimal) = 3, 14, ....\n- logical = TRUE\n- complex = 1+4i\n- integer = 2 (Must add a L at end to denote integer)\n- double = a number class, like the integer but with double precision floating points\n\nHere, is a quick example, how we can find out some things about our objects using:\n\n- - ``c()``= a function that will create a vector (a one dimensional array) and in our case store 3 numbers. We need to use this every time we deal with more than one number, character, etc....\n- ``class()`` = what class is our data?\n- ``length()`` = how long is our data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create some objects\ncharacter_object <- \"dataset\"\nnumber_object <- c(1,4,5)\n\n#asking with what type we work\nclass(character_object)\n## [1] \"character\"\nclass(number_object)\n## [1] \"numeric\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#ask how long our objects are\nlength(character_object)\n## [1] 1\nlength(number_object)\n## [1] 3\n```\n:::\n\n\n\n\n## Data structures\n\nThere are many types of data structures, the most frequently used ones being:\n\n* Vectors\n* Factors\n* Matrices\n* Lists\n* Data frames\n\nCertain operations only work on certain kind of structures, therefore, it is important to know what kind of data we are working with.\n\nIn R, you do not need to specify the type of data a variable will receive beforehand. \nYou simply do the assignment, R will create a so called R-Object and assign a data type automatically. \n\n\n### Vectors\n\nA vector is a collection of items of the same type (i.e characters, numbers). You can read in numbers and characters into the same vector, however, the number will be then seen as a character if you mix different classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets create a random vector\na_vector <- c(2, 3, 5, 7, 1) \n\n#show the vector we just created\na_vector\n## [1] 2 3 5 7 1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#asking how long your vector is\nlength(a_vector)\n## [1] 5\n```\n:::\n\n\n\n#### Vector indexing\n\nIf we want to only retrieve part of the data stored in a vector we can create a subset using the index as shown below.\n\n- square brackets [] = allow us to retrieve certain elements of a vector, i.e. [3] retrieves the 3rd element\n- we can combine ``c()`` and [] if we want to retrieve several elements of a vector.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#retrieve the third element stored in a vector\na_vector[3]\n## [1] 5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#retrieve the 1st and 3rd element by combining ``c()`` and []\na_vector[c(1,3)]\n## [1] 2 5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#retrieve the 1-3rd element\na_vector[c(1:3)]\n## [1] 2 3 5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can also add vectors of the same length together\nx <- c(1,2,3,4)\ny <- c(1,2,3,4)\n\n#and now we can combine our vectors\nx + y\n## [1] 2 4 6 8\n```\n:::\n\n\nBeware: If we add two vectors of different length, the shorter vector is duplicated. This only works if the shorter vector is proportional to the longer one\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#adding vectors of different lengths\nx <- c(1,2)\ny <- c(1,2,3,4)\n\n#and now we can combine our vectors\nx + y\n## [1] 2 4 4 6\n```\n:::\n\n\nAnother way to extend vectors is:\n\n- ``append()`` --> Add elements to a vector.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#add another datapoint to our vector\na_vector <- append(a_vector, 13)\na_vector\n## [1]  2  3  5  7  1 13\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#add +1 to all our four numbers\na_vector <- a_vector + 1\na_vector\n## [1]  3  4  6  8  2 14\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#remove the first element of our vector\na_vector <- a_vector[-1]\na_vector\n## [1]  4  6  8  2 14\n```\n:::\n\n\nWe not only can extract the nth element but if we have header names then we can also use these to retrieve data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create a vector and give it names (i.e. for counts from some microbes)\nx <- c(300, 410, 531)\nnames(x) <- c(\"Ecoli\",\"Archaeoglobus\",\"Ignicoccus\")\n\n#check how our data looks\nx\n##         Ecoli Archaeoglobus    Ignicoccus \n##           300           410           531\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#now we can retrieve part of the vector using the names\nx[c(\"Ecoli\",\"Ignicoccus\")]\n##      Ecoli Ignicoccus \n##        300        531\n```\n:::\n\n\n\n#### Changing vectors\n\nWe can also change elements in our vector:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create a vector\nx <- 1:10\n\n#change the second last positions to 5 and 9\nx[9:10] <- c(5,9)\n\n#check if this worked\nx\n##  [1] 1 2 3 4 5 6 7 8 5 9\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can not only add things, we can also remove this using the minus/**-** symbol\nx[-3]\n## [1] 1 2 4 5 6 7 8 5 9\n\n#if we want to remove more than one thing we can use the **c()**\nx[-(4:10)]\n## [1] 1 2 3\n```\n:::\n\n\n\n### Matrix\n\nMatrices are the R objects in which the elements are arranged in a two-dimensional rectangular layout. They contain elements of the same type. Although you can construct matrices with characters or logicals, matrices are generally used to store numeric data. \n\nThe basic syntax for creating a matrix is:\n\n**matrix(data, nrow, ncol, byrow, dimnames)**\n\n- data: input vector whose components become the data elements from the matrix.\n- dnrow: number of rows to be created.\n- dncol: number of columns to be created.\n- dbyrow: logical. If FALSE,(the default) the matrix is filled by columns, otherwise the matrix is filled by rows.\n- ddimnames: A <e2><80><98>dimnames<e2><80><99> attribute for the matrix: NULL or a list of length 2 giving the row and column names respectively.\n\nIn contrast in a data frame (see below) the columns contain different types of data, while in a matrix all the elements are the same type of data. A matrix in R is like a mathematical matrix, containing all the same type of thing (usually numbers). R often but not always can use dataframes and a matrix used interchangably.\n\n* Individual elements in a matrix can be printed using **[row,column]**. For example **[2,3]** would pull out the value in the 2nd ROW and third COLUMN.\n\n- ```dim()``` is extremely useful to control whether our data was transformed correctly during different operations. For example, after we merge two files we would like to know that they still have the same number of rows as when we started the analysis. Same if we remove for example 10 samples, then we want to make sure that this is indeed what happened.\n- ``head()`` is another useful function to check the first rows of a larger matrix (or dataframe)\n- ``tail()`` same as head but showing the last rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define our row and column names\nrow.names = c(\"row1\", \"row2\", \"row3\", \"row4\")\ncol.names = c(\"col1\", \"col2\", \"col3\")\n\n#create our matrix (check the help function to see what is happening)\nmatrix_A <- matrix(c(3:14), nrow = 4, byrow = T, dimnames = list(row.names,col.names))\n\n#check how our matrix looks like\nmatrix_A\n##      col1 col2 col3\n## row1    3    4    5\n## row2    6    7    8\n## row3    9   10   11\n## row4   12   13   14\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#print the value in the 2row and 3rd column\nmatrix_A[2,3]\n## [1] 8\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#print the values in the 3rd column\nmatrix_A[,3]\n## row1 row2 row3 row4 \n##    5    8   11   14\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#print everything except the 1st row\nmatrix_A[-1,]\n##      col1 col2 col3\n## row2    6    7    8\n## row3    9   10   11\n## row4   12   13   14\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#print everything except the 2nd column\nmatrix_A[,-2]\n##      col1 col3\n## row1    3    5\n## row2    6    8\n## row3    9   11\n## row4   12   14\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#see the dimensions of matrix, i.e. the nr of rows and columns\ndim(matrix_A)\n## [1] 4 3\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check the first rows of our matrix, since our data is small, everything is shown\nhead(matrix_A)\n##      col1 col2 col3\n## row1    3    4    5\n## row2    6    7    8\n## row3    9   10   11\n## row4   12   13   14\n```\n:::\n\n\n\n\n### Lists\n\nSometimes you need to store data of different types. For example, if you are collecting cell counts, you might want to have cell counts (numeric), the microbes investigated (character), their status (logical, with TRUE for alive and FALSE for dead, .... This kind of data can be stored in lists. Lists are the R objects which contain elements of different types (numeric, strings, vectors, even another list, or a matrix).\n\nA list is created using the list() function.\n\nFor example, the following variable x is a list containing copies of three vectors n, s, b.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define our vectors\nn = c(20, 30, 50) \ns = c(\"Ecoli\", \"Archaeoglobus\", \"Bacillus\") \nb = c(TRUE, FALSE, TRUE) \n\n#combine the vectors in a list\nour_list = list(counts=n, strain=s, status=b) \n\n#show our list\nour_list\n## $counts\n## [1] 20 30 50\n## \n## $strain\n## [1] \"Ecoli\"         \"Archaeoglobus\" \"Bacillus\"     \n## \n## $status\n## [1]  TRUE FALSE  TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#sublist the second element in a list\nour_list[2]\n## $strain\n## [1] \"Ecoli\"         \"Archaeoglobus\" \"Bacillus\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#retrieve the 2nd and 3rd member of our list\nour_list[c(2, 3)] \n## $strain\n## [1] \"Ecoli\"         \"Archaeoglobus\" \"Bacillus\"     \n## \n## $status\n## [1]  TRUE FALSE  TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can also retrieve elements of a list if we know the name using two different ways:\nour_list$strain\n## [1] \"Ecoli\"         \"Archaeoglobus\" \"Bacillus\"\nour_list[[\"strain\"]]\n## [1] \"Ecoli\"         \"Archaeoglobus\" \"Bacillus\"\n```\n:::\n\n\nIn the last example we use the ``$`` dollar symbol to extract data, i.e. to extract variables in a dataset (a matrix, list, dataframe). I.e. above the data we want to access is 'our_list' and the variable we want to extract is the strain.\n\n\n### Dataframes\n\nDataframes are tables in which each column contains values of one variable type and each row contains one set of values from each column. \nYou can think of a data frame as a list of vectors of equal length.\nMost of our data very likely will be stored as dataframes.\n\nA Dataframe usually follows these rules:\n\n- The top line of the table, called the header, contains the column names. \n- Column names (i.e. the header of our data) should be non-empty (if they are, R provides the object with default values).\n- Row names should be unique\n- Each column should contain the same number of data items\n- Each horizontal line after the header is a data row, which begins with the name of the row, and then followed by the actual data. \n- Each data member of a row is called a cell.\n\nImportantly, most of the things we have learned before, i.e. how to subset data, apply here too.\n\nThe growth data that we have read into R will be used to explain how dataframes work.\n\n\n#### Viewing data Dataframes\n\n- We can use the brackets as before to extract certain rows or columns.\n- We can use the dollar sign to again extract information as long as we know the column names. I.e. now we want to access the shoot fresh weight (FW_shoot_mg) in our 'growth_data' dataframe.\n- ``colnames()`` allows us to access the column names, i.e. the headers\n- ``rownames()`` allows us to access the rownames of our data (usually these are numbered if not specified otherwise while reading the table)\n- ``dim()`` allows us to check the dimensions (i.e. the number of rows and columns). This is useful to regullary check, especially if we modified our data somehow. \n- ``head()`` shows the first rows of our dataframe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#view our table\nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check how many rows and columns our data has\ndim(growth_data)\n## [1] 105   5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#extract the data from the 2nd row\ngrowth_data[2,]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"_rn_\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#extract the first three columns\nhead(growth_data[,1:3])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#extract a column of our data using the column name\nhead(growth_data$Condition)\n## [1] \"MgCl\" \"MgCl\" \"MgCl\" \"MgCl\" \"MgCl\" \"MgCl\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#print our headers\ncolnames(growth_data)\n## [1] \"SampleID\"    \"Nutrient\"    \"Condition\"   \"FW_shoot_mg\" \"Rootlength\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#get the dimensions\ndim(growth_data)\n## [1] 105   5\n```\n:::\n\n\nWhen we print the rownames, we see that we have numbers from 1-105. When reading in a table into R it is the default behaviour how rownames are generated. As a general rule, if you want o have other rownames, these must be unique.\n\n\n#### Adding new columns to Dataframes\n\nBelow is a very basic way to add a new column (we name it newColumn) and fill all rows with the word `comment`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#expand a dataframe, functions data.frame or cbind (or see below)\ngrowth_data$newColumn <- \"comment\"\n\n#check if that worked\nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"6\":\"comment\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"6\":\"comment\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"6\":\"comment\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"6\":\"comment\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"6\":\"comment\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"6\":\"comment\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThere are more sophisticated ways to add columns based on conditions or even merge dataframes. Some of these we will discuss later.\n\n\n## How can we check what kind of structure our data has?\n\nIf we read in our own data, we should check as what type of class our table is stored. We have several ways to do this:\n\n- ``class()`` = determines as what kind of object is stored\n- ``str()`` = display the internal structure of an R object. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check what kind of data we have:\nclass(growth_data)\n## [1] \"data.frame\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check how are different parts of our data stored?\nstr(growth_data)\n## 'data.frame':\t105 obs. of  6 variables:\n##  $ SampleID   : chr  \"noP\" \"noP\" \"noP\" \"noP\" ...\n##  $ Nutrient   : chr  \"noP\" \"noP\" \"noP\" \"noP\" ...\n##  $ Condition  : chr  \"MgCl\" \"MgCl\" \"MgCl\" \"MgCl\" ...\n##  $ FW_shoot_mg: num  10.26 6.52 12.17 11.37 9.8 ...\n##  $ Rootlength : num  5.93 5.74 6.83 6.74 6.74 ...\n##  $ newColumn  : chr  \"comment\" \"comment\" \"comment\" \"comment\" ...\n```\n:::\n\n\nWe see that\n\n- our data is stored in a dataframe\n- that the data stored in different formats, i.e. numeric and characters\n- the first 3 columns are stored in something we call a factor.\n\n\n\n## Factors\n\nFactors are data objects that are used to represent categorical data and store it in its different levels. \nThey are an important class for statistical analysis and for plotting.\nFactors are stored as integers, and have labels associated with these unique integers. \nOnce created, factors can only contain a pre-defined set values, known as levels. By default, R always sorts levels in alphabetical order. \n\n- ``factor()`` allows us to create our own factor\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets make a vector\nNutrients <- c(\"P\", \"P\", \"noP\", \"noP\")\n\n#lets make our own simple factor\nNutrients_factor <- factor(c(\"P\", \"P\", \"noP\", \"noP\"))\n\n#lets compare the vector and factor we generated\nNutrients\n## [1] \"P\"   \"P\"   \"noP\" \"noP\"\nNutrients_factor\n## [1] P   P   noP noP\n## Levels: P noP\n```\n:::\n\n\nWhen we check our factor, we see that R assigns one level to ``P`` and another level to ``noP``. \nWe can also see, that R sorts the levels in an alphabetical way, even though in the initial code we first had P before noP.\n\n\n### Checking the behaviour of factors\n\nNow, lets check how factors behave.\n\n- ``levels()`` = only prints the levels of a given factor. We can also run this on any column of our dataframe.\n- ``nlevels()`` = check how many levels we have.\n- While factors look (and often behave) like character vectors, they are actually integers under the hood, and you need to be careful when treating them like strings. We can test this by looking at what type of object we generated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#only print the levels\nlevels(Nutrients_factor)\n## [1] \"P\"   \"noP\"\nlevels(growth_data$Condition)\n## NULL\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check how many levels we have\nnlevels(Nutrients_factor)\n## [1] 2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#what class do we have\nclass(Nutrients_factor)\n## [1] \"factor\"\ntypeof(Nutrients_factor)\n## [1] \"integer\"\n```\n:::\n\n\n### Ordering factor levels\n\nFor some things, the order of things might matter and then we need to order the factors ourselves.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check our levels\nlevels(Nutrients_factor)\n## [1] \"P\"   \"noP\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#reorder levels\nNutrients_factor_reordered <- factor(Nutrients_factor, levels = c(\"P\", \"noP\"))\n\n#check our levels\nlevels(Nutrients_factor_reordered)\n## [1] \"P\"   \"noP\"\n```\n:::\n\n\n\n### Converting factors\n\nSometimes you need to explicitly convert factors to either text or numbers. Or numbers to characters, etc.\nTo do this, you use the functions ``as.character()`` or ``as.numeric()``.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#convert our factor to a character\nNutrients_characters <- as.character(Nutrients_factor)\nNutrients_characters\n## [1] \"P\"   \"P\"   \"noP\" \"noP\"\n```\n:::\n\n\n\n## Dealing with NAs in our data\n\n### Removing NAs\n\nNAs are generated when our data contains a missing value. This can become problematic for certain programs and we can decide to remove all NAs.\n\nThe function to do this is ``is.na``. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create a vector that includes an NA\ny <- c(1,2,3,NA,5)\n\n#check whether we have NAs\nis.na(y)\n## [1] FALSE FALSE FALSE  TRUE FALSE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#remove NAs from our data\ny[!is.na(y)]\n## [1] 1 2 3 5\n```\n:::\n\n\n- Exclamation marks in R --> `!=` is \"not equal to.\"\n- The function is.na(z)gives a logical vector of the same size as z with value TRUE if and only if the corre-sponding element in z is NA.\n- I.e. in this example we have FALSE FALSE FALSE  TRUE FALSE\n- When using y[!is.na(y)], retain the columns were is.na is False\n\n\n#### Replacing NAs with something else\n\nAnother option might be to replace a NA with a 0 (or whatever else makes sense in a given context)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create a vector that includes an NA\nx <- c(1,2,3,NA,5)\n\n#check whether we have NAs\nis.na(x)\n## [1] FALSE FALSE FALSE  TRUE FALSE\n\n#remove NAs from our data\nx[is.na(x)] <- 0\n\n#check data\nx\n## [1] 1 2 3 0 5\n```\n:::\n\n\nNotice, that here we use a similar syntax compared to before. Now we do\n\n- Find the NAs (I.e. in this example we have FALSE FALSE FALSE  TRUE FALSE)\n- If NA is TRUE then replace it with a 0\n\n### Replacing NAs in our dataframe\n\nRemember, in the beginning we said that their are NAs in our timecourse data. Let's have a look at this data, i.e. row 30, we will see that we have NAs.\n\nNext, we want to remove all rows that have no values. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check in which rows we have NAs inside the root length measurements\nwhich(is.na(timecourse$Rootlength)) \n##   [1]  29  30 233 234 235 236 237 238 239 240 268 269 270 330 360 374 375 376\n##  [19] 377 378 379 380 381 382 383 384 385 386 387 388 389 390 402 403 404 405\n##  [37] 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 444 445 446\n##  [55] 447 448 449 450 475 476 477 478 479 480 492 493 494 495 496 497 498 499\n##  [73] 500 515 516 517 518 519 520 533 534 535 536 537 538 539 540 550 551 552\n##  [91] 553 554 555 556 557 558 559 560 574 575 605\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#check a column\ntimecourse[29,]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Timepoint\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"NA\",\"_rn_\":\"29\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#remove rows that contain NAs\ntimecourse_noNA <- timecourse[!is.na(timecourse$Rootlength), ]\n\n#check if that worked\ntimecourse_noNA[29,]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Timepoint\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP_MgCl_t0\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.448\",\"_rn_\":\"31\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n\n## Important code snippets\n\n\n### Print the session info:\n\nThis prints our session info (used R version, packages, etc) and is very important to store to reproduce our code for others\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nsessionInfo()\n## R version 4.2.1 (2022-06-23)\n## Platform: x86_64-apple-darwin17.0 (64-bit)\n## Running under: macOS Catalina 10.15.7\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\n## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n## \n## locale:\n## [1] C\n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] kableExtra_1.3.4 knitr_1.40      \n## \n## loaded via a namespace (and not attached):\n##  [1] rstudioapi_0.14   xml2_1.3.3        magrittr_2.0.3    rvest_1.0.3      \n##  [5] munsell_0.5.0     viridisLite_0.4.1 colorspace_2.0-3  R6_2.5.1         \n##  [9] rlang_1.0.5       fastmap_1.1.0     highr_0.9         stringr_1.4.1    \n## [13] httr_1.4.4        tools_4.2.1       webshot_0.5.3     xfun_0.33        \n## [17] cli_3.4.0         htmltools_0.5.3   systemfonts_1.0.4 yaml_2.3.5       \n## [21] digest_0.6.29     lifecycle_1.0.2   vctrs_0.4.1       htmlwidgets_1.5.4\n## [25] glue_1.6.2        evaluate_0.16     rmarkdown_2.16    stringi_1.7.8    \n## [29] compiler_4.2.1    scales_1.2.1      jsonlite_1.8.0    svglite_2.1.0\n```\n:::\n\n\n\n\n### Clean-up the working environment\n\nNotice: At the moment, we do not want to clean up the working directory, therefore, in our documentation we put a ``#`` in front of it. If you want to run the code just remove the ``#``\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rm(list = ls()) \n```\n:::\n\n\n\n\n\n\n\n\n## Basic operations\n\n- R can work as a calculator and knows all basic operations\n- In expressions and assignments, R does not care about spaces\n- Another important character is the semicolon. R evaluates code line by line. A line break tells R that a statement has to be evaluated. Instead, you can use a semicolon to tell R where a statement ends\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#add\n3+2 \n## [1] 5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#multiply\n3.5*3\n## [1] 10.5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#divide\n2.1/3\n## [1] 0.7\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#exponentials\n2^10\n## [1] 1024\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#more complex functions also work\n3*(5+2^1)\n## [1] 21\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#combining two operations into one using a semicolon\n5+9 ; 4+5\n## [1] 14\n## [1] 9\n```\n:::\n\n\n\n\n## Logical operators\n\nOne important features of R (and of any programming language) are logical operators. \n\nWhen R evaluates an expression containing logical operators, it will return either TRUE or FALSE. It follows a list of them:\n\n\n::: {.cell warnings='false'}\n::: {.cell-output-display}\n|Operator |Meaning                  |Operator |Meaning   |\n|:--------|:------------------------|:--------|:---------|\n|<        |less than                |==       |equal     |\n|>        |greater than             |!=       |not equal |\n|<=       |less than or equal to    |&        |and       |\n|>=       |greater than or equal to |&#124;   |or        |\n:::\n:::\n\n\n\n## Examples for using operators:\n\n### Basic operators\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#basic operators\n1==1\n## [1] TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n2>1\n## [1] TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n1==1 & 1>2\n## [1] FALSE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(1==1& 1>2) | 5<6\n## [1] TRUE\n```\n:::\n\n\n### Using operators to subset dataframes\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#only print data for the normal P conditions\nP_data <- growth_data[growth_data$Nutrient == \"P\", ]\n\n#test that all went ok\ndim(growth_data)\n## [1] 105   6\ndim(P_data)\n## [1] 53  6\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can also subset our data by numbers, i.e. only keep rows were roots are longer than 5cm\ngrowth_data_10cm <- growth_data[growth_data$Rootlength > 5, ]\ndim(growth_data_10cm)\n## [1] 101   6\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#instead of keeping rows with roots longer than 5cm we can also remove them using *!*\ngrowth_data_no10cm <- growth_data[!growth_data$Rootlength > 5, ]\ndim(growth_data_no10cm)\n## [1] 4 6\n```\n:::\n\n\n**Above you see a good example why dim() can very useful as it allows us to quickly check that what we do actually works. Always check afterwards that your function did what you expect you to do since as long as R is able to do something it will do it regardless if that might be different that you want R to do.**\n\n\n\n## Useful base functions in R\n\nApart from the elementary operations, all of the common arithmetic functions are available: \nlog, exp, sin, cos, tan, sqrt, etc. Other useful functions one can use on vectors are:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|Name   |Function                     |\n|:------|:----------------------------|\n|max    |select smallest element      |\n|min    |select largest element       |\n|length |gives the number of elements |\n|sum    |sums all elements            |\n|mean   |obtains the mean value       |\n|var    |unbiased sample variance     |\n|sort   |see exercise 2c              |\n:::\n:::\n\n\n\n## Subsetting our data\n\nWe already have seen important ways to subset data:\n\n1. Use of the index by using the square brackets\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#subsetting rows and columns using the index\ngrowth_data[1:3,2:4]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"10.26\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"6.52\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"12.17\",\"_rn_\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Use of operators\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#subset using operators (only print rows if the Nutrient column equals P)\nP_data <- growth_data[growth_data$Nutrient == \"P\", ]\nhead(P_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"32.42\",\"5\":\"11.286793\",\"6\":\"comment\",\"_rn_\":\"53\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.03\",\"5\":\"10.456630\",\"6\":\"comment\",\"_rn_\":\"54\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"18.35\",\"5\":\"11.106341\",\"6\":\"comment\",\"_rn_\":\"55\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.04\",\"5\":\"10.816896\",\"6\":\"comment\",\"_rn_\":\"56\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"16.61\",\"5\":\"10.608252\",\"6\":\"comment\",\"_rn_\":\"57\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"25.79\",\"5\":\"7.121587\",\"6\":\"comment\",\"_rn_\":\"58\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nNow we want to look at some other examples:\n\n### grep and grepl\n\nOftentimes you may need to filter a data set based on a partial character string that is beyond the scope of comparison operators.\n\nR provides such functions (grep and grepl) that match character patterns in specified vector.  While both of these functions find patterns, they return different output types based on those patterns.  \n\n- grep returns numeric values that correspond to the indexed locations of the patterns\n- grepl returns a logical vector in which 'TRUE' represents a pattern match.\n\nIn our growth data, we only want to print measurements of our strains.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#grep return the index value of each matched pattern\ngrep(\"MgCl\", growth_data$Condition)\n##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 53 54 55 56 57 58 59 60 61 62 63 64\n## [26] 65 66 67\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#grepl returns a logical output for each indices in the original vector \n#with \"TRUE\" representing matched patterns\ngrepl(\"Strain\", growth_data$Condition)\n##   [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n##  [13] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n##  [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n##  [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n##  [49]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n##  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n##  [73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n##  [85]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n##  [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n```\n:::\n\n\nNow lets use this to actually filter our data table for a pattern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_for_value <-timecourse_noNA[grepl(\"MgC\", timecourse_noNA$Condition),]\n\nhead(filter_for_value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Timepoint\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.542\",\"_rn_\":\"1\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.849\",\"_rn_\":\"2\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.209\",\"_rn_\":\"3\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.834\",\"_rn_\":\"4\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.586\",\"_rn_\":\"5\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.683\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#filter data set based on values that do not match the specified pattern (by using the minus symbol)\nfilter_for_not_a_value <- timecourse_noNA[-grepl(\"MgC\", timecourse_noNA$Condition),]\n\nhead(filter_for_not_a_value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Timepoint\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.849\",\"_rn_\":\"2\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.209\",\"_rn_\":\"3\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.834\",\"_rn_\":\"4\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.586\",\"_rn_\":\"5\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.683\",\"_rn_\":\"6\"},{\"1\":\"P_MgCl_t0\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"t0\",\"5\":\"1.608\",\"_rn_\":\"7\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nOther comments:\n\n- Using regular expressions (programming symbol pattern) will increase their functionality\n- Specified patterns are case sensitive ('t' does not equal 'T')\n- Any matching pattern will be returned despite the context in which that pattern is located (i.e., grep('the', data) with return matches for 'the', 'theme', 'heather', 'breathe', and so on<e2><80><93>this is where regular expressions are useful for specifying where in a string the pattern should appear.\n\nRegular expressions are explained in the AWK and General notebook. But just to give an example lets just grep Strains that have a 3 letter number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_3letters <- growth_data[grepl(\"[0-9][0-9][0-9]\", growth_data$Condition),]\n\n#check the structure of our data\nhead(filter_3letters)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"10.49\",\"5\":\"7.143667\",\"6\":\"comment\",\"_rn_\":\"14\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"8.91\",\"5\":\"7.669841\",\"6\":\"comment\",\"_rn_\":\"15\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"9.32\",\"5\":\"7.807710\",\"6\":\"comment\",\"_rn_\":\"16\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"6.76\",\"5\":\"7.508370\",\"6\":\"comment\",\"_rn_\":\"17\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"5.99\",\"5\":\"6.607630\",\"6\":\"comment\",\"_rn_\":\"18\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"8.26\",\"5\":\"7.269267\",\"6\":\"comment\",\"_rn_\":\"19\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nHere, ``[0-9]`` searches for every number from 0-9 and we look for three numbers.  One important thing with subsetting is that the levels are still kept. So with the command above we remove every row that is not Strain101 and Strain230. However, the levels are still kept. Let's check this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(filter_3letters$Condition)\n## NULL\n```\n:::\n\n\nSo we see that MgCl and Strain28 are still in the levels even if they do not occur in our table itself. Sometimes when working with subsetted dataframes, i.e. when doing stats or plotting, this can interfere with our analysis. Here, it is useful to drop empty levels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_3letters_clean <- droplevels(filter_3letters)\nlevels(filter_3letters_clean$Condition)\n## NULL\n```\n:::\n\n\n## The unique command\n\n``unique()`` allows to determine duplicate rows and allows us to subset our data for certain categories.\nFor example, for very large dataframes we often can simplify things.\n\nHere, if we have a lot of treatments and did the experiment a long time ago, we might want to ask for a table that lists the treatments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make unique contig list that still contains info of our bin ID\nmapping_file <- unique(growth_data[,c(\"SampleID\", \"Nutrient\", \"Condition\")])\n\n#view data\nhead(mapping_file)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"_rn_\":\"1\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"_rn_\":\"14\"},{\"1\":\"noP_230\",\"2\":\"noP\",\"3\":\"Strain230\",\"_rn_\":\"27\"},{\"1\":\"noP_28\",\"2\":\"noP\",\"3\":\"Strain28\",\"_rn_\":\"38\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"_rn_\":\"53\"},{\"1\":\"P_101\",\"2\":\"P\",\"3\":\"Strain101\",\"_rn_\":\"68\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n## The merge command\n\nWe can also add additional metadata to our growth data. \n\nOne way to do this is the **cbind()**  or **rbind()** functions. \nHowever, these functions require the two dataframes to have the exact number of columns or rows, which we do not have. \n\nHere, the ``merge()`` function of the data.table package is very useful to merge data with different dimensions as long as they have a common pattern (i.e. the SampleID).\n\nFirst lets build an artificial mapping file that incldues the number of days we grew our plants:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make mapping that contains our basic sample info\nmapping_file <- unique(growth_data[,c(\"SampleID\", \"Nutrient\", \"Condition\")])\n\n#add a new column, where we list our experiment ID\nmapping_file$Comment <- \"FirstExperiment\"\n\n#view data\nhead(mapping_file)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Comment\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"FirstExperiment\",\"_rn_\":\"1\"},{\"1\":\"noP_101\",\"2\":\"noP\",\"3\":\"Strain101\",\"4\":\"FirstExperiment\",\"_rn_\":\"14\"},{\"1\":\"noP_230\",\"2\":\"noP\",\"3\":\"Strain230\",\"4\":\"FirstExperiment\",\"_rn_\":\"27\"},{\"1\":\"noP_28\",\"2\":\"noP\",\"3\":\"Strain28\",\"4\":\"FirstExperiment\",\"_rn_\":\"38\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"FirstExperiment\",\"_rn_\":\"53\"},{\"1\":\"P_101\",\"2\":\"P\",\"3\":\"Strain101\",\"4\":\"FirstExperiment\",\"_rn_\":\"68\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nNow we can use this mapping file and merge it with our growth data as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load our package\nlibrary(plyr)\n\n#merge our mapping file with our growth data\nnew_data_frame <- merge(growth_data, mapping_file, by = \"SampleID\")\n\n#view data\nhead(new_data_frame)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient.x\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition.x\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient.y\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition.y\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Comment\"],\"name\":[9],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"32.42\",\"5\":\"11.286793\",\"6\":\"comment\",\"7\":\"P\",\"8\":\"MgCl\",\"9\":\"FirstExperiment\",\"_rn_\":\"1\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.03\",\"5\":\"10.456630\",\"6\":\"comment\",\"7\":\"P\",\"8\":\"MgCl\",\"9\":\"FirstExperiment\",\"_rn_\":\"2\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"18.35\",\"5\":\"11.106341\",\"6\":\"comment\",\"7\":\"P\",\"8\":\"MgCl\",\"9\":\"FirstExperiment\",\"_rn_\":\"3\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.04\",\"5\":\"10.816896\",\"6\":\"comment\",\"7\":\"P\",\"8\":\"MgCl\",\"9\":\"FirstExperiment\",\"_rn_\":\"4\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"16.61\",\"5\":\"10.608252\",\"6\":\"comment\",\"7\":\"P\",\"8\":\"MgCl\",\"9\":\"FirstExperiment\",\"_rn_\":\"5\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"25.79\",\"5\":\"7.121587\",\"6\":\"comment\",\"7\":\"P\",\"8\":\"MgCl\",\"9\":\"FirstExperiment\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThis now is a good example to check that all went fine and that the new dataframes has the same number of rows (=measurements) compared to the original dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#control that all went fine\ndim(growth_data)\n## [1] 105   6\ndim(new_data_frame)\n## [1] 105   9\n\n#if there is no match between dataframe 1 and dataframe 2 columns will by default be deleted. If you want to keep all columns do:\n#new_data_frame <- merge(growth_data, mapping_file, by = \"SampleID\". all.x = T)\n```\n:::\n\n\nWith dim we see that we still have 105 rows (i.e. measurements) and that we now added 3 new columns. \n\n\n## Combine commands into one line\n\nWhile this gets more difficult to read, sometimes it might be useful to combine several commands into one go to condense code \nGenerally, it is easier to just write line by line especially if you read your code months later. \n\nWhat we want to do:\n  - in the example above we duplicate the columns for Nutrient and Condition and before merging we might first subset the mapping file to only include the info we want to merge.\n  - so our two steps are: a) trim the mapping file and b) merge\n\nTo do this, we use these two lines of code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make mapping file more simple\nmapping_reduced <- mapping_file[,c(\"SampleID\", \"Comment\")]\n\n#merge\nnew_data_frame <- merge(growth_data, mapping_reduced, by = \"SampleID\")\nhead(new_data_frame)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Comment\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"32.42\",\"5\":\"11.286793\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"1\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.03\",\"5\":\"10.456630\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"2\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"18.35\",\"5\":\"11.106341\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"3\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.04\",\"5\":\"10.816896\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"4\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"16.61\",\"5\":\"10.608252\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"5\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"25.79\",\"5\":\"7.121587\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nNow, this worked fine but requires a bit more code and we need to create one more object. \n\nWe could also combine these two kines of code into one line by subsetting our mapping file INSIDE the merge function as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_data_frame <- merge(growth_data, mapping_file[,c(\"SampleID\", \"Comment\")], by = \"SampleID\")\nhead(new_data_frame)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Comment\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"32.42\",\"5\":\"11.286793\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"1\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.03\",\"5\":\"10.456630\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"2\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"18.35\",\"5\":\"11.106341\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"3\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"21.04\",\"5\":\"10.816896\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"4\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"16.61\",\"5\":\"10.608252\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"5\"},{\"1\":\"P\",\"2\":\"P\",\"3\":\"MgCl\",\"4\":\"25.79\",\"5\":\"7.121587\",\"6\":\"comment\",\"7\":\"FirstExperiment\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n## Add new columns to our data and combining values in different columns\n\nWe can also add new columns into original table, i.e. if we want to not show the fresh weight in mg but in g.\n\nBelow you can see that if we have numerical data in a column, we can use normal math operators (like +,-,/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#convert mg to g\ngrowth_data$FW_shoot_g <- growth_data$FW_shoot_mg/10\nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_g\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"6\":\"comment\",\"7\":\"1.026\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"6\":\"comment\",\"7\":\"0.652\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"6\":\"comment\",\"7\":\"1.217\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"6\":\"comment\",\"7\":\"1.137\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"6\":\"comment\",\"7\":\"0.980\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"6\":\"comment\",\"7\":\"0.375\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can also round our data\ngrowth_data$FW_shoot_g <- round(growth_data$FW_shoot_mg/10, digits = 2)\nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_g\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"6\":\"comment\",\"7\":\"1.03\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"6\":\"comment\",\"7\":\"0.65\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"6\":\"comment\",\"7\":\"1.22\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"6\":\"comment\",\"7\":\"1.14\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"6\":\"comment\",\"7\":\"0.98\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"6\":\"comment\",\"7\":\"0.38\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWe can also add (or substract, etc ...) values from different columns. I.e. here we could calculate the ratios.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can also do math with the values in two columns, i.e. if we want to calculate the ration between root length and fresh weight\ngrowth_data$ratio <- growth_data$Rootlength/growth_data$FW_shoot_mg\nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"newColumn\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_g\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"ratio\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"6\":\"comment\",\"7\":\"1.03\",\"8\":\"0.5780717\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"6\":\"comment\",\"7\":\"0.65\",\"8\":\"0.8808968\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"6\":\"comment\",\"7\":\"1.22\",\"8\":\"0.5616039\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"6\":\"comment\",\"7\":\"1.14\",\"8\":\"0.5930286\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"6\":\"comment\",\"7\":\"0.98\",\"8\":\"0.6874374\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"6\":\"comment\",\"7\":\"0.38\",\"8\":\"1.1296929\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n## STATS\n\nA lot of helpful information that that was used here was inspired by a more detailed site that can be found [here](http://www.learnbymarketing.com/tutorials/linear-regression-in-r/)\n.\nAnd please take note, that the writer of this tutorial is no statistician and if you spot issues feel free to let me know!\n\n\n### Summary stats\n\nTo do some basic stats we use the nutrient growth data set, which you find in the R_exercises folder. \n\n- ``means()`` = print the mean of a certain column\n- ``summary()``= print the mean, median, max, min, ... of a certain column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#get the menas of our root length\nmean(growth_data$Rootlength)\n## [1] 9.046117\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#return summary stats for the root length\nsummary(growth_data$Rootlength)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   4.236   6.721   8.099   9.046  11.793  14.716\n```\n:::\n\n\nWe can also summarize data of several columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#return summary stats for the root length\nsummary(growth_data[,c(\"Rootlength\", \"FW_shoot_mg\")])\n##    Rootlength      FW_shoot_mg   \n##  Min.   : 4.236   Min.   : 3.75  \n##  1st Qu.: 6.721   1st Qu.: 7.69  \n##  Median : 8.099   Median :11.62  \n##  Mean   : 9.046   Mean   :15.23  \n##  3rd Qu.:11.793   3rd Qu.:22.05  \n##  Max.   :14.716   Max.   :39.39\n```\n:::\n\n\n\nWe can also run ``summary()`` on our complete dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#run summary on all our data\nsummary(growth_data)\n##    SampleID           Nutrient          Condition          FW_shoot_mg   \n##  Length:105         Length:105         Length:105         Min.   : 3.75  \n##  Class :character   Class :character   Class :character   1st Qu.: 7.69  \n##  Mode  :character   Mode  :character   Mode  :character   Median :11.62  \n##                                                           Mean   :15.23  \n##                                                           3rd Qu.:22.05  \n##                                                           Max.   :39.39  \n##    Rootlength      newColumn           FW_shoot_g        ratio       \n##  Min.   : 4.236   Length:105         Min.   :0.380   Min.   :0.2761  \n##  1st Qu.: 6.721   Class :character   1st Qu.:0.770   1st Qu.:0.5141  \n##  Median : 8.099   Mode  :character   Median :1.160   Median :0.6874  \n##  Mean   : 9.046                      Mean   :1.523   Mean   :0.7381  \n##  3rd Qu.:11.793                      3rd Qu.:2.200   3rd Qu.:0.8801  \n##  Max.   :14.716                      Max.   :3.940   Max.   :1.6901\n```\n:::\n\n\nThis way we do not only get summary stats for our values, but also we get some counts on how many measurements we have for different conditions.\n\n\n### The table command\n\nThe function table builds a contingency table of the counts at each factor level, or combinations of factor levels. This is quite useful to count the number of data points with certain metadata associated. So for example for our genome data we can ask how many measurements we made for each condition.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#summarize how many measurements we have for each treatment\ntable(growth_data$SampleID)\n## \n##       P   P_101   P_230    P_28     noP noP_101 noP_230  noP_28 \n##      15      12      13      13      13      13      11      15\n```\n:::\n\n\nHere, we see that we have a slightly different number of measurements for each condition and timepoint. \nFor this tutorial we can ignore them, but this might be relevant if we have huge differences for some statistical analyses.\nThis approach allows you to for larger datasets to easily check for samples that might be outliers in terms of measurements per sample.\n\n\n### The ddply command\n\nThe table command can get rather slow and there are some useful packages to speed up things and run more complicated mathematical operations. One example is the ``ddply()`` function of the plyr package. A useful feature of ddply is that this tool stores the output as a dataframe instead of a table.\n\nBelow we see examples were we summarize the data for the root length across different nutrient conditions. \nI.e. we do not want to have the mean for all root lengths but we want to see if roots have different lengths under low and high P conditions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load our package\nlibrary(plyr)\n\n#calculate the mean root length across our Sample IDs\ngrowth_data_summarized <- ddply(growth_data, .(Nutrient), summarize, Mean_RootLength = mean(Rootlength))\n\n#view data\nhead(growth_data_summarized)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Mean_RootLength\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P\",\"2\":\"11.513931\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"6.530845\",\"_rn_\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThe structure of the command is as follows:\n\n**ddply(Input_Data, .(Colum_we_want_to_sum_arcoss), summarize, New_Column_name = mean(Column_we_want_to_calc_the_mean_for))**\n\nWe can also summarize the data combining different conditions (i.e. nutrient and condition).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Summarize our data across Nutrients and Conditions\ngrowth_data_summarized <- ddply(growth_data, .(Nutrient, Condition), summarize, Mean_RootLength = mean(Rootlength))\n\n#view data\nhead(growth_data_summarized)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Mean_RootLength\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P\",\"2\":\"MgCl\",\"3\":\"9.853457\",\"_rn_\":\"1\"},{\"1\":\"P\",\"2\":\"Strain101\",\"3\":\"12.729133\",\"_rn_\":\"2\"},{\"1\":\"P\",\"2\":\"Strain230\",\"3\":\"11.814678\",\"_rn_\":\"3\"},{\"1\":\"P\",\"2\":\"Strain28\",\"3\":\"12.007390\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"5.805198\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"Strain101\",\"3\":\"7.094616\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWe can also calculate the mean, sd and se in one line of code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#and we can use even fancier functions (i.e. get the se and sd), check the plyr package for more details\ngrowth_data_summarized <- ddply(growth_data, .(Nutrient, Condition), summarize, RootLength = mean(Rootlength), sd = sd (Rootlength), se = sd(Rootlength) / sqrt((length(Rootlength))))\n\n#view data\nhead(growth_data_summarized)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"RootLength\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"se\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P\",\"2\":\"MgCl\",\"3\":\"9.853457\",\"4\":\"1.2981376\",\"5\":\"0.3351777\",\"_rn_\":\"1\"},{\"1\":\"P\",\"2\":\"Strain101\",\"3\":\"12.729133\",\"4\":\"0.9813173\",\"5\":\"0.2832819\",\"_rn_\":\"2\"},{\"1\":\"P\",\"2\":\"Strain230\",\"3\":\"11.814678\",\"4\":\"0.9128499\",\"5\":\"0.2531790\",\"_rn_\":\"3\"},{\"1\":\"P\",\"2\":\"Strain28\",\"3\":\"12.007390\",\"4\":\"0.5812310\",\"5\":\"0.1612045\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"5.805198\",\"4\":\"0.7738124\",\"5\":\"0.2146170\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"Strain101\",\"3\":\"7.094616\",\"4\":\"0.5939804\",\"5\":\"0.1647405\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n### tidyr\n\nTydir is another package to summarize data but also to transform data. \nFor now we will just discuss the basics to summarize data but we will try to add an extended section on this package later.\n\nYou notice here that the syntax is a bit unusual and we use the `` %>%`` symbol (a so-called forward pipe operator).\nThis symbol is commonly used in the **dplyr** and **tidyr** packages.\nThis function passes the left hand side of the operator to the first argument of the right hand side of the operator. \n\nIn the following example, the a subset of the growth_data data (only 3 columns, not the whole dataframe) gets passed to ``count()``\n\nNew functions:\n\n- ``count()`` = A function of the dplyr package. Here, we count the unique protein IDs grouped by BinID and gene (i.e. roughly equivalent to the columns we want to keep)\n- ``summarize()`` creates new data frame into one (or more) rows for each combination of grouping variables; if there are no grouping variables, the output will have a single row summarising all observations in the input. It will contain one column for each grouping variable and one column for each of the summary statistics that you have specified.\n- ``mean()`` = calculate the  arithmetic mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# | warning: false\n    \n#read in package\nlibrary(tidyverse)\n## -- Attaching packages --------------------------------------- tidyverse 1.3.2 --\n## v ggplot2 3.3.6      v purrr   0.3.4 \n## v tibble  3.1.8      v dplyr   1.0.10\n## v tidyr   1.2.1      v stringr 1.4.1 \n## v readr   2.1.2      v forcats 0.5.2 \n## -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n## x dplyr::arrange()    masks plyr::arrange()\n## x purrr::compact()    masks plyr::compact()\n## x dplyr::count()      masks plyr::count()\n## x dplyr::failwith()   masks plyr::failwith()\n## x dplyr::filter()     masks stats::filter()\n## x dplyr::group_rows() masks kableExtra::group_rows()\n## x dplyr::id()         masks plyr::id()\n## x dplyr::lag()        masks stats::lag()\n## x dplyr::mutate()     masks plyr::mutate()\n## x dplyr::rename()     masks plyr::rename()\n## x dplyr::summarise()  masks plyr::summarise()\n## x dplyr::summarize()  masks plyr::summarize()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#count how many measurements we have per conditions\ngrowth_data %>% count(Condition, sort = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Condition\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"MgCl\",\"2\":\"28\"},{\"1\":\"Strain101\",\"2\":\"25\"},{\"1\":\"Strain230\",\"2\":\"24\"},{\"1\":\"Strain28\",\"2\":\"28\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#count how many measurements we have per nutrient and conditions\ngrowth_data %>% count(Nutrient, Condition, sort = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P\",\"2\":\"MgCl\",\"3\":\"15\"},{\"1\":\"P\",\"2\":\"Strain101\",\"3\":\"12\"},{\"1\":\"P\",\"2\":\"Strain230\",\"3\":\"13\"},{\"1\":\"P\",\"2\":\"Strain28\",\"3\":\"13\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"13\"},{\"1\":\"noP\",\"2\":\"Strain101\",\"3\":\"13\"},{\"1\":\"noP\",\"2\":\"Strain230\",\"3\":\"11\"},{\"1\":\"noP\",\"2\":\"Strain28\",\"3\":\"15\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#get more comprehensive data stats and summarize for the whole dataset\ngrowth_data %>% summarise(\n          count = n(),\n          mean_root = mean(Rootlength, na.rm = TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"count\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"mean_root\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"105\",\"2\":\"9.046117\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nGood things about tydir are:\n\n- it is extremely fast, so is important for dealing with larger datasets\n- we can combine several compands by using the pipe\n\nI.e. below we can see that we first group the input data and then summarized the group data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#get more comprehensive data stats and summarize and grouping for the different conditions\ngrowth_data %>% \n    group_by(Nutrient, Condition) %>%  \n    summarise(\n          count = n(),\n          mean_root = mean(Rootlength, na.rm = TRUE) ,.groups = 'drop')\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"mean_root\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P\",\"2\":\"MgCl\",\"3\":\"15\",\"4\":\"9.853457\"},{\"1\":\"P\",\"2\":\"Strain101\",\"3\":\"12\",\"4\":\"12.729133\"},{\"1\":\"P\",\"2\":\"Strain230\",\"3\":\"13\",\"4\":\"11.814678\"},{\"1\":\"P\",\"2\":\"Strain28\",\"3\":\"13\",\"4\":\"12.007390\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"13\",\"4\":\"5.805198\"},{\"1\":\"noP\",\"2\":\"Strain101\",\"3\":\"13\",\"4\":\"7.094616\"},{\"1\":\"noP\",\"2\":\"Strain230\",\"3\":\"11\",\"4\":\"7.172883\"},{\"1\":\"noP\",\"2\":\"Strain28\",\"3\":\"15\",\"4\":\"6.200309\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWe can also do other stats than just calculating the mean: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#get more comprehensive data stats and summarize and grouping for the different conditions\ngrowth_data %>% \n    group_by(Nutrient, Condition) %>%  \n    summarise(\n          count = n(),\n          mean_root = mean(Rootlength, na.rm = TRUE),\n          sd_root = sd(Rootlength),.groups = 'drop')\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Nutrient\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"mean_root\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd_root\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"P\",\"2\":\"MgCl\",\"3\":\"15\",\"4\":\"9.853457\",\"5\":\"1.2981376\"},{\"1\":\"P\",\"2\":\"Strain101\",\"3\":\"12\",\"4\":\"12.729133\",\"5\":\"0.9813173\"},{\"1\":\"P\",\"2\":\"Strain230\",\"3\":\"13\",\"4\":\"11.814678\",\"5\":\"0.9128499\"},{\"1\":\"P\",\"2\":\"Strain28\",\"3\":\"13\",\"4\":\"12.007390\",\"5\":\"0.5812310\"},{\"1\":\"noP\",\"2\":\"MgCl\",\"3\":\"13\",\"4\":\"5.805198\",\"5\":\"0.7738124\"},{\"1\":\"noP\",\"2\":\"Strain101\",\"3\":\"13\",\"4\":\"7.094616\",\"5\":\"0.5939804\"},{\"1\":\"noP\",\"2\":\"Strain230\",\"3\":\"11\",\"4\":\"7.172883\",\"5\":\"0.6117203\"},{\"1\":\"noP\",\"2\":\"Strain28\",\"3\":\"15\",\"4\":\"6.200309\",\"5\":\"0.9988989\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nOther useful summary functions:\n\n- `mean(x)`: sum of x divided by the length\n- `median(x)`: 50% of x is above and 50% is below\n\n- `sd(x)`: standard deviation\n- `IQR(x)`: interquartile range (robust equivalent of sd when outliers are present in the data)\n- `mad(x)`: median absolute deviation (robust equivalent of sd when outliers are present in the data)\n\n- `min(x)`: minimum value of x\n- `max(x)`: maximum value of x\n- `quantile(x, 0.25)`: 25% of x is below this value\n\n- `first(x)`: equivalent to x[1]\n- `nth(x, 2)`: equivalent to n<-2; x[n]\n- `last(x)`: equivalent to x[length(x)]\n\n- `n(x)`: the number of elements in x\n- `sum(!is.na(x))`: count non-missing values\n- `n_distinct(x)`: count the number of unique value\n\n- `sum(x > 10)`: count the number of elements where x > 10\n- `mean(y == 0)`: proportion of elements where y = 0\n\n\n\n### More stats: tapply\n\nTapply is a base R function and allows to apply a function to each cell of a ragged array, that is to each (non-empty) group of values given by a unique combination of the levels of certain factors. It can be used as an alternative to ddply.\n\nSuppose now we want to estimate the mean root length for each growth condition. Notice, how we can vary the index?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#index = factors we want to select\ntapply(X = growth_data$Rootlength, INDEX = growth_data$Nutrient, FUN = mean,na.rm = TRUE)\n##         P       noP \n## 11.513931  6.530845\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#same but for two-way tables (this is not so useful here, but might be handy when you have different conditions for the same organism or a timecourse)\ntapply(growth_data$Rootlength, INDEX = list(growth_data$Nutrient, growth_data$Condition),FUN = mean, na.rm = TRUE)\n##         MgCl Strain101 Strain230  Strain28\n## P   9.853457 12.729133 11.814678 12.007390\n## noP 5.805198  7.094616  7.172883  6.200309\n```\n:::\n\n\n\n### Linear models \n\n### Basics\n\nIt is very simple to investigate linear relationships among variables in R. We want to estimate how a quantitative dependent variable changes according to the levels of one or more categorical independent variables. In the command below, the linear relationship between Rootlength (the **dependent** variable, i.e. the one we<e2><80><99>re trying to predict) and FW_shoot_mg (the **independent** variable or the predictor) is calculated.\n\nWe need to use the function summary to see the results of that command; coef extracts the best-fit coefficients, anova performs an analysis of variance; there are many other extractor functions.\n\nIn this case lets work with the data were we do not have to deal with the different time points to simplify things.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read in data were we have several measurements\ngrowth_data <- read.table(\"../data/Growth_Data.txt\", sep=\"\\t\", header=T, fill=TRUE, quote = \"\")\n\n#is there a correlation between freshweight and root length?\nlinearmodel <- lm(Rootlength ~ FW_shoot_mg, data = growth_data)\nlinearmodel\n## \n## Call:\n## lm(formula = Rootlength ~ FW_shoot_mg, data = growth_data)\n## \n## Coefficients:\n## (Intercept)  FW_shoot_mg  \n##      5.2912       0.2465\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#let's extract the entire t-table\nsummary(linearmodel) \n## \n## Call:\n## lm(formula = Rootlength ~ FW_shoot_mg, data = growth_data)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -4.5263 -0.9978 -0.0181  1.0094  3.9292 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  5.29124    0.30469   17.37   <2e-16 ***\n## FW_shoot_mg  0.24648    0.01712   14.40   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1.615 on 103 degrees of freedom\n## Multiple R-squared:  0.6681,\tAdjusted R-squared:  0.6649 \n## F-statistic: 207.4 on 1 and 103 DF,  p-value: < 2.2e-16\n```\n:::\n\n\nHere one of the values is the model p-Value (bottom last line) and the p-Value of individual predictor variables (extreme right column under <e2><80><98>Coefficients<e2><80><99>). The p-Values are very important because, we can consider a linear model to be statistically significant only when both these p-Values are less that the pre-determined statistical significance level, which is ideally 0.05. This is visually interpreted by the significance stars at the end of the row. The more the stars beside the variable<e2><80><99>s p-Value, the more significant the variable.\n\n* Residuals: The section summarizes the residuals, the error between the prediction of the model and the actual results.  Smaller residuals are better.\n* Coefficients: For each variable and the intercept, a weight is produced and that weight has other attributes like the standard error, a t-test value and significance.\n* Estimate: This is the weight given to the variable.  In the simple regression case (one variable plus the intercept), for every increase in root length, the model predicts an increase of 0.24.\n* Std. Error: Tells you how precisely was the estimate measured.  It<e2><80><99>s really only useful for calculating the t-value.\n* t-value and Pr(>[t]): The t-value is calculated by taking the coefficient divided by the Std. Error.  It is then used to test whether or not the coefficient is significantly different from zero.  If it isn<e2><80><99>t significant, then the coefficient really isn<e2><80><99>t adding anything to the model and could be dropped or investigated further.  Pr(>|t|) is the significance level.\n\nPerformance Measures: \n\nThree sets of measurements are provided.\n\n* Residual Standard Error: This is the standard deviation of the residuals.  Smaller is better.\n* Multiple / Adjusted R-Square: For one variable, the distinction doesn<e2><80><99>t really matter.  R-squared shows the amount of variance explained by the model.  Adjusted R-Square takes into account the number of variables and is most useful for multiple-regression.\n* F-Statistic: The F-test checks if at least one variable<e2><80><99>s weight is significantly different than zero.  This is a global test to help asses a model.  If the p-value is not significant (e.g. greater than 0.05) than your model is essentially not doing anything.\n\nWe also can just print parts of the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#print only the coefficients \ncoef(summary(linearmodel))\n##              Estimate Std. Error  t value     Pr(>|t|)\n## (Intercept) 5.2912436 0.30469198 17.36588 2.278273e-32\n## FW_shoot_mg 0.2464783 0.01711628 14.40023 2.039703e-26\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#print only the anova stats\nanova(linearmodel)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Df\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Sum Sq\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mean Sq\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"F value\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pr(>F)\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"540.9865\",\"3\":\"540.986514\",\"4\":\"207.3665\",\"5\":\"2.039703e-26\",\"_rn_\":\"FW_shoot_mg\"},{\"1\":\"103\",\"2\":\"268.7108\",\"3\":\"2.608842\",\"4\":\"NA\",\"5\":\"NA\",\"_rn_\":\"Residuals\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot add the best line to a plot\nwith(growth_data, plot(Rootlength ~ FW_shoot_mg, col = 2))\nabline(linearmodel)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-121-1.png){width=672}\n:::\n:::\n\n\nIf we look at the stats and the p value we see a nice correlation but also that we have two distinct clusters as well as more spread in the cluster that is more to the right. These clusters likely are the two different nutrient conditions and sometimes it might make sense to separate data to get a clearer picture. Something else to consider is to ask whether the data is normally distributed and based on that what statistical test to choose.\n\n\n#### Analysing residuals\n\nAnyone can fit a linear model in R. The real test is analyzing the residuals (the error or the difference between actual and predicted results).\n\nThere are four things we are looking for when analyzing residuals.\n\n- The mean of the errors is zero (and the sum of the errors is zero)\n- The distribution of the errors are normal.\n- All of the errors are independent.\n- Variance of errors is constant (Homoscedastic)\n\nIn R, you pull out the residuals by referencing the model and then the resid variable inside the model.  Using the simple linear regression model (simple.fit) we<e2><80><99>ll plot a few graphs to help illustrate any problems with the model.\n\nBelow some examples:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimple.fit <- linearmodel\n\nlayout(matrix(c(1,1,2,3),2,2,byrow=T))\n\n#Rootlength x Residuals Plot\nplot(simple.fit$resid~growth_data$Rootlength[order(growth_data$Rootlength)],\n main=\"Rootlength x Residuals\\nfor Simple Regression\",\n xlab=\"Marketing Rootlength\", ylab=\"Residuals\")\nabline(h=0,lty=2)\n\n#Histogram of Residuals\nhist(simple.fit$resid, main=\"Histogram of Residuals\",\n ylab=\"Residuals\")\n\n#Q-Q Plot\nqqnorm(simple.fit$resid)\nqqline(simple.fit$resid)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-122-1.png){width=672}\n:::\n:::\n\n\n\nThe histogram and QQ-plot are the ways to visually evaluate if the residual fit a normal distribution.\n\n- If the histogram looks like a bell-curve it might be normally distributed.\n- If the QQ-plot has the vast majority of points on or very near the line, the residuals may be normally distributed.\n\n\n### Normal distribution\n\n\n##### Visualize our data via density plots\n\nThere are different ways to visualize this, one example is ggdensity of the ggpubr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggpubr\")\n## \n## Attaching package: 'ggpubr'\n## The following object is masked from 'package:plyr':\n## \n##     mutate\n\n#is the data for my different variables normally distributed\nggdensity(growth_data$Rootlength)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-123-1.png){width=672}\n:::\n:::\n\n\nWe see nicely that we have two tails that likely represent the two nutrient conditions. To test this, we can simply subset the data as we have done before.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdensity(growth_data, x = \"Rootlength\",\n   add = \"mean\", rug = TRUE,\n   color = \"Nutrient\", palette = c(\"#00AFBB\", \"#E7B800\"))\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-124-1.png){width=672}\n:::\n:::\n\n\nNo we see that indeed the tool tails we see are seem to be due to our two nutrient conditions.\n\n\n#### Visualize our data via Q-Q plots\n\nAnother way to represent data is in  a Q-Q plot: Q-Q plot (or quantile-quantile plot) draws the correlation between a given sample and the normal distribution. A 45-degree reference line is also plotted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot all data\nggqqplot(growth_data$Rootlength)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-125-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot by group\nggqqplot(growth_data, x = \"Rootlength\",\n         color = \"Nutrient\",  palette = c(\"#00AFBB\", \"#E7B800\"))\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-126-1.png){width=672}\n:::\n:::\n\n\nAgain, here we see that our data for the indivdual growth conditions fit quite nicely into normal distribution.\n\n\n#### Test for normality\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#for all data\nshapiro.test(growth_data$Rootlength)\n## \n## \tShapiro-Wilk normality test\n## \n## data:  growth_data$Rootlength\n## W = 0.91773, p-value = 6.744e-06\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#separate nutrient conditions\nnoP_data <- growth_data[growth_data$Nutrient == \"noP\", ]\n\n#test for noP only\nshapiro.test(noP_data$Rootlength)\n## \n## \tShapiro-Wilk normality test\n## \n## data:  noP_data$Rootlength\n## W = 0.96403, p-value = 0.1171\n```\n:::\n\n\nWe can use ddplyr and the dlookr package for doing a group-wise comparison\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(dlookr)\n## \n## Attaching package: 'dlookr'\n## The following object is masked from 'package:tidyr':\n## \n##     extract\n## The following object is masked from 'package:base':\n## \n##     transform\n\ngrowth_data %>%\n  group_by(Nutrient) %>%\n  normality()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"variable\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"statistic\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p_value\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sample\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"FW_shoot_mg\",\"2\":\"P\",\"3\":\"0.9681759\",\"4\":\"0.16818081\",\"5\":\"53\"},{\"1\":\"FW_shoot_mg\",\"2\":\"noP\",\"3\":\"0.9831431\",\"4\":\"0.66649085\",\"5\":\"52\"},{\"1\":\"Rootlength\",\"2\":\"P\",\"3\":\"0.9515682\",\"4\":\"0.03144205\",\"5\":\"53\"},{\"1\":\"Rootlength\",\"2\":\"noP\",\"3\":\"0.9640334\",\"4\":\"0.11709068\",\"5\":\"52\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nThe shapiro.test tests the NULL hypothesis that the samples came from a Normal distribution. This means that if your p-value <= 0.05, then you would reject the NULL hypothesis that the samples came from a normal distribution.\n\nFrom the output, the p-value < 0.05 for our complete dataset implies that the distribution of the data is significantly different from normal distribution. In other words, we can not assume the normality. However, we expect quite some differences dependent on the growth pattern and once we only look at our low P data we see that our indeed is normally distributed.\n\nNotice: Shapiro works only for sample sizes between 3-5000 numbers since when you feed it more data, the chances of the null hypothesis being rejected becomes larger. An alternative is the Anderson-Darling test that however has a similar problem with the Shapiro Wilk test. For large samples, you are most likely to reject the null hypothesis, so be aware of this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nortest)\nad.test(noP_data$Rootlength)\n## \n## \tAnderson-Darling normality test\n## \n## data:  noP_data$Rootlength\n## A = 0.58838, p-value = 0.1187\n```\n:::\n\n\n\n\n\n### ANOVA\n\nWhen we visualize the data, we see that there is a difference between the nutrient conditions but we want to know whether it is significant and more importantly, whether there is also a difference based on our treatments with different strains of microbes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets visually compare our data with ggpubr again\nlibrary(\"ggpubr\")\n\nggboxplot(growth_data, x = \"Condition\", y = \"Rootlength\", color = \"Nutrient\",\n          palette = c(\"#00AFBB\", \"#E7B800\"))\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-131-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# We want to know whether root length depends on nutrient treatment\naov <- aov(Rootlength ~ Nutrient, data = growth_data)\nsummary(aov)\n##              Df Sum Sq Mean Sq F value Pr(>F)    \n## Nutrient      1  651.8   651.8     425 <2e-16 ***\n## Residuals   103  157.9     1.5                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n\nHere, we see that there are significant differences based on our nutrient treatments. Now lets see how we can look at both the nutrient treatment and growth conditions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# We want to know if root length depends on condition and nutrient\naov <- aov(Rootlength ~ Nutrient + Condition, data = growth_data)\nsummary(aov)\n##              Df Sum Sq Mean Sq F value   Pr(>F)    \n## Nutrient      1  651.8   651.8  712.58  < 2e-16 ***\n## Condition     3   66.5    22.2   24.23 7.27e-12 ***\n## Residuals   100   91.5     0.9                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n\nFrom the ANOVA table we can conclude that both nutrient condition and treatment are statistically significant. Nutrient treatment is the most significant factor variable. \n\nNot the above fitted model is called additive model. It makes an assumption that the two factor variables are independent. If you think that these two variables might interact to create an synergistic effect, replace the plus symbol (+) by an asterisk (*), as follows.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Two-way ANOVA with interaction effect\n\n# These two calls are equivalent\naov <- aov(Rootlength ~ Nutrient * Condition, data = growth_data)\naov <- aov(Rootlength ~ Nutrient + Condition + Nutrient:Condition, data = growth_data)\n\n#summarize the aov\nsummary(aov)\n##                    Df Sum Sq Mean Sq F value   Pr(>F)    \n## Nutrient            1  651.8   651.8 817.131  < 2e-16 ***\n## Condition           3   66.5    22.2  27.780 4.72e-13 ***\n## Nutrient:Condition  3   14.1     4.7   5.891 0.000976 ***\n## Residuals          97   77.4     0.8                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n\nIt can be seen that the two main effects (Nutrient and Condition) are statistically significant, as well as their interaction.\n\n**Note that, in the situation where the interaction is not significant you should use the additive model.**\n\n\n\n### TUKEY\n\nIn ANOVA test, a significant p-value indicates that some of the group means are different, but we don<e2><80><99>t know which pairs of groups are different. It<e2><80><99>s possible to perform multiple pairwise-comparison, to determine if the mean difference between specific pairs of group are statistically significant.\n\nAs the ANOVA test is significant, we can compute Tukey HSD (Tukey Honest Significant Differences). Tukey test is a single-step multiple comparison procedure and statistical test. It is a post-hoc analysis, what means that it is used in conjunction with an ANOVA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#test with anova\naov <- aov(Rootlength ~ Nutrient * Condition, data = growth_data)\n\n#run tukey\nTukeyHSD(aov)\n##   Tukey multiple comparisons of means\n##     95% family-wise confidence level\n## \n## Fit: aov(formula = Rootlength ~ Nutrient * Condition, data = growth_data)\n## \n## $Nutrient\n##            diff       lwr       upr p adj\n## noP-P -4.983086 -5.329067 -4.637105     0\n## \n## $Condition\n##                           diff        lwr        upr     p adj\n## Strain101-MgCl       2.1029052  1.4604930  2.7453173 0.0000000\n## Strain230-MgCl       1.6836191  1.0341749  2.3330633 0.0000000\n## Strain28-MgCl        1.2784796  0.6545138  1.9024455 0.0000034\n## Strain230-Strain101 -0.4192861 -1.0864726  0.2479004 0.3597470\n## Strain28-Strain101  -0.8244256 -1.4668377 -0.1820134 0.0061445\n## Strain28-Strain230  -0.4051395 -1.0545837  0.2443048 0.3663501\n## \n## $`Nutrient:Condition`\n##                                   diff        lwr        upr     p adj\n## noP:MgCl-P:MgCl             -4.0482585 -5.0967311 -2.9997859 0.0000000\n## P:Strain101-P:MgCl           2.8756763  1.8040558  3.9472967 0.0000000\n## noP:Strain101-P:MgCl        -2.7588405 -3.8073131 -1.7103679 0.0000000\n## P:Strain230-P:MgCl           1.9612207  0.9127482  3.0096933 0.0000023\n## noP:Strain230-P:MgCl        -2.6805735 -3.7789218 -1.5822252 0.0000000\n## P:Strain28-P:MgCl            2.1539326  1.1054600  3.2024052 0.0000002\n## noP:Strain28-P:MgCl         -3.6531484 -4.6634819 -2.6428149 0.0000000\n## P:Strain101-noP:MgCl         6.9239348  5.8162834  8.0315861 0.0000000\n## noP:Strain101-noP:MgCl       1.2894180  0.2041458  2.3746903 0.0087961\n## P:Strain230-noP:MgCl         6.0094793  4.9242070  7.0947515 0.0000000\n## noP:Strain230-noP:MgCl       1.3676850  0.2341551  2.5012149 0.0073003\n## P:Strain28-noP:MgCl          6.2021911  5.1169189  7.2874633 0.0000000\n## noP:Strain28-noP:MgCl        0.3951101 -0.6533625  1.4435827 0.9391499\n## noP:Strain101-P:Strain101   -5.6345168 -6.7421681 -4.5268654 0.0000000\n## P:Strain230-P:Strain101     -0.9144555 -2.0221069  0.1931958 0.1845494\n## noP:Strain230-P:Strain101   -5.5562498 -6.7112241 -4.4012755 0.0000000\n## P:Strain28-P:Strain101      -0.7217437 -1.8293950  0.3859077 0.4749256\n## noP:Strain28-P:Strain101    -6.5288247 -7.6004451 -5.4572042 0.0000000\n## P:Strain230-noP:Strain101    4.7200613  3.6347890  5.8053335 0.0000000\n## noP:Strain230-noP:Strain101  0.0782670 -1.0552629  1.2117969 0.9999989\n## P:Strain28-noP:Strain101     4.9127731  3.8275008  5.9980453 0.0000000\n## noP:Strain28-noP:Strain101  -0.8943079 -1.9427805  0.1541647 0.1537008\n## noP:Strain230-P:Strain230   -4.6417943 -5.7753242 -3.5082644 0.0000000\n## P:Strain28-P:Strain230       0.1927118 -0.8925604  1.2779841 0.9993212\n## noP:Strain28-P:Strain230    -5.6143692 -6.6628417 -4.5658966 0.0000000\n## P:Strain28-noP:Strain230     4.8345061  3.7009762  5.9680360 0.0000000\n## noP:Strain28-noP:Strain230  -0.9725749 -2.0709232  0.1257734 0.1223122\n## noP:Strain28-P:Strain28     -5.8070810 -6.8555536 -4.7586084 0.0000000\n```\n:::\n\n\nWe can see that most differences are significant, with the exception of Strain28, which in most cases does not show an effect.\n\nFor some representations it is useful to plot significant letters. We can do this using some extra packages as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load library\nlibrary(agricolae)\n## \n## Attaching package: 'agricolae'\n## The following objects are masked from 'package:dlookr':\n## \n##     kurtosis, skewness\n\n#separate nutrient conditions\nnoP_data <- growth_data[growth_data$Nutrient == \"noP\", ]\n\n#run an anova\naov_noP <- aov(Rootlength ~ Condition, data = noP_data)\n\n#run test\nHSD.test(aov_noP,\"Condition\", group=TRUE,console=TRUE)\n## \n## Study: aov_noP ~ \"Condition\"\n## \n## HSD Test for Rootlength \n## \n## Mean Square Error:  0.606883 \n## \n## Condition,  means\n## \n##           Rootlength       std  r      Min      Max\n## MgCl        5.805198 0.7738124 13 4.236348 6.834720\n## Strain101   7.094616 0.5939804 13 5.947965 7.973207\n## Strain230   7.172883 0.6117203 11 6.120089 8.197116\n## Strain28    6.200309 0.9988989 15 4.384756 7.428674\n## \n## Alpha: 0.05 ; DF Error: 48 \n## Critical Value of Studentized Range: 3.763749 \n## \n## Groups according to probability of means differences and alpha level( 0.05 )\n## \n## Treatments with the same letter are not significantly different.\n## \n##           Rootlength groups\n## Strain230   7.172883      a\n## Strain101   7.094616      a\n## Strain28    6.200309      b\n## MgCl        5.805198      b\n```\n:::\n\n\n### Check the homogeneity of variances\n\nThe residuals versus fits plot is used to check the homogeneity of variances. In the plot below, there is no evident relationships between residuals and fitted values (the mean of each groups), which is good. So, we can assume the homogeneity of variances. Only a few points (41, 58 and 77 are detected as outliers, which can severely  normality and homogeneity of variance. It can be useful to remove outliers to meet the test assumptions.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check for homogeneity\nplot(aov, 1)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-137-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n#Use the Levene<e2><80><99>s test to check the homogeneity of variances. \nlibrary(car)\n## Loading required package: carData\n## \n## Attaching package: 'car'\n## The following object is masked from 'package:dplyr':\n## \n##     recode\n## The following object is masked from 'package:purrr':\n## \n##     some\nleveneTest(Rootlength ~ Nutrient * Condition, data = growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Df\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"F value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pr(>F)\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"7\",\"2\":\"1.862279\",\"3\":\"0.08411691\",\"_rn_\":\"group\"},{\"1\":\"97\",\"2\":\"NA\",\"3\":\"NA\",\"_rn_\":\"\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nFrom the output above we can see that the p-value is not less than the significance level of 0.05. This means that there is no evidence to suggest that the variance across groups is statistically significantly different. Therefore, we can assume the homogeneity of variances in the different treatment groups.\n\n\n### Check for normality v2\n\nNormality plot of the residuals. In the plot below, the quantiles of the residuals are plotted against the quantiles of the normal distribution. A 45-degree reference line is also plotted. The normal probability plot of residuals is used to verify the assumption that the residuals are normally distributed.\n\nThe normal probability plot of the residuals should approximately follow a straight line. which we can see below. Again, we see the points marked as potential outliers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## plot\nplot(aov, 2)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-138-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Control Structures\n\n### Loops\n\n\nSometimes it is necessary to repeat a calculation multiple times, e.g. calculate the sum of each row of a matrix. You can use for loops to do this.\n\nIn the first loop, we:\n\n- define that we want to loop through rows 1 to 5 (1:5)\n- for (i in 1:5)  --> we say that we want to run a for loop, in which we name our variable i\n- {} --> defines the operation we want to loop through \n- in our case we want to sum a specific row (rows 1 trhough 5)\n- so in i we store the numbers 1,2,3,4 and 5 and then run through the sum functions 5x\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#build a dataframe\nm <- matrix(1:15, 5)\nm\n##      [,1] [,2] [,3]\n## [1,]    1    6   11\n## [2,]    2    7   12\n## [3,]    3    8   13\n## [4,]    4    9   14\n## [5,]    5   10   15\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#sum rows without a loop --> sum row 1\nsum(m[1, ])\n## [1] 18\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#sum rows without a loop --> sum row 2, ...\nsum(m[2, ])\n## [1] 21\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#run a loop to get the sum for all five rows\nfor (i in 1:5) {\nprint(sum(m[i, ]))\n}\n## [1] 18\n## [1] 21\n## [1] 24\n## [1] 27\n## [1] 30\n```\n:::\n\n\nIn the second loop we store our results in a new dataframe and do not just print them to the screen. Therefore, we:\n\n- define a variable (named results) in which we store an empty vector\n- we need this empty vector to have something to store our results in\n- start the foor loop and define i as before\n- run the sum as before but now store the results for each interation in `results`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#store the results, Note that here, the variable results had to be created before as an empty vector.\nresults <- c()\nfor (i in 1:5) {\nresults[i] <- sum(m[i, ])\n}\n\nresults\n## [1] 18 21 24 27 30\n```\n:::\n\n\nVery often, there are some R packages or functions that are faster than loops. The ``apply()`` function is such an example.\n``apply()`` applies a function, i.e. sum, across a matrix. \n\nHowever, since loops are also a very useful feature in bash or python it is useful to understand their general concept.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#way to do the same using the apply function (faster than loops)\nresults2 <- apply(m, 1, sum)\nresults2\n## [1] 18 21 24 27 30\n```\n:::\n\n\nThe first argument of ``apply()`` has to be a matrix, the second argument specifies the dimension of the matrix (1 means rows and 2 means columns) on which the function should be applied, and the third argument has to be a function that takes a vector as argument. Here, the function sum is applied to each row of m. \n\nActually, there is a family of apply functions, depending on the object you pass as an input, and/or the object you want as output. You can read a brief tutorial under this [link](http://datascienceplus.com/using-the-apply-family-of-functions-in-r/).\n\nI.e.\napply(data, 1, mean) = apply mean on each row\napply(data, 2, mean) = apply mean on each column\n\nTwo other examples are sapply and lapply, which work on lists.\n\n\n### if-else\n\nOne can also create a decision making structure in R. A decision making structure has at least one condition to be evaluated together with a statement or statements to be evaluated if the condition is TRUE, and optionally, other statements to be executed if the condition is FALSE, as we can see in the figure.\n\nThe test_expression has to be logical, i.e., it has to be a expression that, when evaluated, is either TRUE or FALSE. The logical operators listed above can be used to construct them. For example, we can use an if-else statement to check if a number is positive or negative,\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#store a random number\nx <- -5\n\n#write a loop and ask if our number is positive or negative\nif (x > 0) {\nprint(\"Positive number\")\n} else if (x == 0) {\nprint(\"Number is zero\")\n} else {\nprint(\"Negative number\")\n}\n## [1] \"Negative number\"\n```\n:::\n\n\nNote that in the example there was an else if. In that way we can check more than 2 conditions.\n\nThis of course is a very simplistic example. But if-else statements can be useful if we want to deal with larger dataframes, i.e. our growth data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#apply ifelse\ngrowth_data$category <- ifelse(growth_data$Rootlength<=10.0, \"small\", \"large\")\n\n#check the structure of our data\nkable(growth_data) %>%\n  kable_styling() %>%\n  scroll_box(width = \"700px\", height = \"400px\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:700px; \"><table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> SampleID </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Nutrient </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Condition </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> FW_shoot_mg </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> Rootlength </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> category </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 10.26 </td>\n   <td style=\"text-align:right;\"> 5.931015 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 6.52 </td>\n   <td style=\"text-align:right;\"> 5.743447 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 12.17 </td>\n   <td style=\"text-align:right;\"> 6.834720 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 11.37 </td>\n   <td style=\"text-align:right;\"> 6.742735 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 9.80 </td>\n   <td style=\"text-align:right;\"> 6.736886 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 3.75 </td>\n   <td style=\"text-align:right;\"> 4.236349 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 5.38 </td>\n   <td style=\"text-align:right;\"> 4.753485 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 4.53 </td>\n   <td style=\"text-align:right;\"> 5.532333 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 7.75 </td>\n   <td style=\"text-align:right;\"> 5.484364 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 8.64 </td>\n   <td style=\"text-align:right;\"> 5.963254 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 10.36 </td>\n   <td style=\"text-align:right;\"> 5.359044 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 7.69 </td>\n   <td style=\"text-align:right;\"> 5.725348 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 8.57 </td>\n   <td style=\"text-align:right;\"> 6.424601 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 10.49 </td>\n   <td style=\"text-align:right;\"> 7.143667 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.91 </td>\n   <td style=\"text-align:right;\"> 7.669841 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 9.32 </td>\n   <td style=\"text-align:right;\"> 7.807710 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 6.76 </td>\n   <td style=\"text-align:right;\"> 7.508370 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 5.99 </td>\n   <td style=\"text-align:right;\"> 6.607630 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.26 </td>\n   <td style=\"text-align:right;\"> 7.269267 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 7.61 </td>\n   <td style=\"text-align:right;\"> 7.973207 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 7.56 </td>\n   <td style=\"text-align:right;\"> 7.399504 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 7.90 </td>\n   <td style=\"text-align:right;\"> 6.717792 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 6.69 </td>\n   <td style=\"text-align:right;\"> 6.721007 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.14 </td>\n   <td style=\"text-align:right;\"> 7.070333 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 6.07 </td>\n   <td style=\"text-align:right;\"> 5.947965 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.19 </td>\n   <td style=\"text-align:right;\"> 6.393722 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 4.96 </td>\n   <td style=\"text-align:right;\"> 7.166174 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 6.20 </td>\n   <td style=\"text-align:right;\"> 7.515659 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.97 </td>\n   <td style=\"text-align:right;\"> 7.250036 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.32 </td>\n   <td style=\"text-align:right;\"> 7.134681 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.45 </td>\n   <td style=\"text-align:right;\"> 6.917319 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 6.03 </td>\n   <td style=\"text-align:right;\"> 6.120089 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.70 </td>\n   <td style=\"text-align:right;\"> 7.665526 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 6.04 </td>\n   <td style=\"text-align:right;\"> 7.809111 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.22 </td>\n   <td style=\"text-align:right;\"> 6.601296 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 3.99 </td>\n   <td style=\"text-align:right;\"> 6.524710 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 4.85 </td>\n   <td style=\"text-align:right;\"> 8.197116 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 8.63 </td>\n   <td style=\"text-align:right;\"> 6.160052 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.27 </td>\n   <td style=\"text-align:right;\"> 4.720711 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.51 </td>\n   <td style=\"text-align:right;\"> 6.917185 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.46 </td>\n   <td style=\"text-align:right;\"> 4.384756 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.91 </td>\n   <td style=\"text-align:right;\"> 6.069185 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.40 </td>\n   <td style=\"text-align:right;\"> 7.113879 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.36 </td>\n   <td style=\"text-align:right;\"> 5.428766 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.74 </td>\n   <td style=\"text-align:right;\"> 6.694142 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 4.15 </td>\n   <td style=\"text-align:right;\"> 5.270298 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 8.60 </td>\n   <td style=\"text-align:right;\"> 6.811773 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 5.41 </td>\n   <td style=\"text-align:right;\"> 5.106644 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 8.30 </td>\n   <td style=\"text-align:right;\"> 7.413519 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.93 </td>\n   <td style=\"text-align:right;\"> 7.112385 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.44 </td>\n   <td style=\"text-align:right;\"> 7.428674 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.85 </td>\n   <td style=\"text-align:right;\"> 6.372659 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 32.42 </td>\n   <td style=\"text-align:right;\"> 11.286793 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.03 </td>\n   <td style=\"text-align:right;\"> 10.456630 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 18.35 </td>\n   <td style=\"text-align:right;\"> 11.106341 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.04 </td>\n   <td style=\"text-align:right;\"> 10.816896 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 16.61 </td>\n   <td style=\"text-align:right;\"> 10.608252 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 25.79 </td>\n   <td style=\"text-align:right;\"> 7.121587 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 31.00 </td>\n   <td style=\"text-align:right;\"> 9.165891 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 36.13 </td>\n   <td style=\"text-align:right;\"> 11.053978 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 17.50 </td>\n   <td style=\"text-align:right;\"> 8.271196 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.42 </td>\n   <td style=\"text-align:right;\"> 8.649225 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 19.60 </td>\n   <td style=\"text-align:right;\"> 10.313985 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 11.62 </td>\n   <td style=\"text-align:right;\"> 8.098859 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 18.76 </td>\n   <td style=\"text-align:right;\"> 10.061778 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.55 </td>\n   <td style=\"text-align:right;\"> 11.048822 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 19.05 </td>\n   <td style=\"text-align:right;\"> 9.741622 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 20.91 </td>\n   <td style=\"text-align:right;\"> 12.119304 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 23.48 </td>\n   <td style=\"text-align:right;\"> 12.057252 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 17.47 </td>\n   <td style=\"text-align:right;\"> 12.064659 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 24.49 </td>\n   <td style=\"text-align:right;\"> 13.576118 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 25.70 </td>\n   <td style=\"text-align:right;\"> 10.983965 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 28.24 </td>\n   <td style=\"text-align:right;\"> 12.935397 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 17.70 </td>\n   <td style=\"text-align:right;\"> 11.921333 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 32.90 </td>\n   <td style=\"text-align:right;\"> 13.030630 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 22.80 </td>\n   <td style=\"text-align:right;\"> 12.644756 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 32.47 </td>\n   <td style=\"text-align:right;\"> 14.715830 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 22.05 </td>\n   <td style=\"text-align:right;\"> 13.186593 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 23.47 </td>\n   <td style=\"text-align:right;\"> 13.513763 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 23.46 </td>\n   <td style=\"text-align:right;\"> 10.981978 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 22.93 </td>\n   <td style=\"text-align:right;\"> 12.563616 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 17.08 </td>\n   <td style=\"text-align:right;\"> 12.174456 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 15.95 </td>\n   <td style=\"text-align:right;\"> 13.151797 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 15.03 </td>\n   <td style=\"text-align:right;\"> 12.072456 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 13.00 </td>\n   <td style=\"text-align:right;\"> 10.692603 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 18.30 </td>\n   <td style=\"text-align:right;\"> 12.236482 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 17.80 </td>\n   <td style=\"text-align:right;\"> 11.792879 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 17.43 </td>\n   <td style=\"text-align:right;\"> 11.914695 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 14.93 </td>\n   <td style=\"text-align:right;\"> 11.281731 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 22.75 </td>\n   <td style=\"text-align:right;\"> 11.502507 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 37.90 </td>\n   <td style=\"text-align:right;\"> 13.170210 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 13.27 </td>\n   <td style=\"text-align:right;\"> 10.055399 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 37.14 </td>\n   <td style=\"text-align:right;\"> 11.908378 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 39.39 </td>\n   <td style=\"text-align:right;\"> 12.612785 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 28.27 </td>\n   <td style=\"text-align:right;\"> 12.434356 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 29.50 </td>\n   <td style=\"text-align:right;\"> 12.559904 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 27.29 </td>\n   <td style=\"text-align:right;\"> 11.585637 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 22.82 </td>\n   <td style=\"text-align:right;\"> 11.925326 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 25.05 </td>\n   <td style=\"text-align:right;\"> 12.831222 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 17.48 </td>\n   <td style=\"text-align:right;\"> 11.644037 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 15.85 </td>\n   <td style=\"text-align:right;\"> 11.900193 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.54 </td>\n   <td style=\"text-align:right;\"> 10.698752 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 27.91 </td>\n   <td style=\"text-align:right;\"> 11.668794 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 26.63 </td>\n   <td style=\"text-align:right;\"> 12.555404 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 29.96 </td>\n   <td style=\"text-align:right;\"> 11.771277 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\nHere, we:\n\n- Create a new column, with the name category\n- If a value in our Rootlength column is equal to or smaller than 10, we want to say this category is small.\n- If that is not the case, we want to say it is large\n\nSo the function works like this:\n\n**ifelse(our_test, value_to_return_if_test_is_true, value_to_return_if_test_is_false)**\n\nWe can also combine diffent statements with the & (AND) or | (OR) symbol. \nI.e. we only send things in the big category if the roots are longer than 10cm AND the shoot weight is larger than 15mg\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#apply ifelse\ngrowth_data$category <- ifelse(growth_data$Rootlength>10 & growth_data$FW_shoot_mg>15, \"large\", \"small\")\n\n#check the structure of our data\nkable(growth_data) %>%\n  kable_styling() %>%\n  scroll_box(width = \"700px\", height = \"400px\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:700px; \"><table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> SampleID </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Nutrient </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Condition </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> FW_shoot_mg </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> Rootlength </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> category </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 10.26 </td>\n   <td style=\"text-align:right;\"> 5.931015 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 6.52 </td>\n   <td style=\"text-align:right;\"> 5.743447 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 12.17 </td>\n   <td style=\"text-align:right;\"> 6.834720 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 11.37 </td>\n   <td style=\"text-align:right;\"> 6.742735 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 9.80 </td>\n   <td style=\"text-align:right;\"> 6.736886 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 3.75 </td>\n   <td style=\"text-align:right;\"> 4.236349 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 5.38 </td>\n   <td style=\"text-align:right;\"> 4.753485 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 4.53 </td>\n   <td style=\"text-align:right;\"> 5.532333 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 7.75 </td>\n   <td style=\"text-align:right;\"> 5.484364 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 8.64 </td>\n   <td style=\"text-align:right;\"> 5.963254 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 10.36 </td>\n   <td style=\"text-align:right;\"> 5.359044 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 7.69 </td>\n   <td style=\"text-align:right;\"> 5.725348 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 8.57 </td>\n   <td style=\"text-align:right;\"> 6.424601 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 10.49 </td>\n   <td style=\"text-align:right;\"> 7.143667 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.91 </td>\n   <td style=\"text-align:right;\"> 7.669841 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 9.32 </td>\n   <td style=\"text-align:right;\"> 7.807710 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 6.76 </td>\n   <td style=\"text-align:right;\"> 7.508370 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 5.99 </td>\n   <td style=\"text-align:right;\"> 6.607630 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.26 </td>\n   <td style=\"text-align:right;\"> 7.269267 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 7.61 </td>\n   <td style=\"text-align:right;\"> 7.973207 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 7.56 </td>\n   <td style=\"text-align:right;\"> 7.399504 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 7.90 </td>\n   <td style=\"text-align:right;\"> 6.717792 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 6.69 </td>\n   <td style=\"text-align:right;\"> 6.721007 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.14 </td>\n   <td style=\"text-align:right;\"> 7.070333 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 6.07 </td>\n   <td style=\"text-align:right;\"> 5.947965 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_101 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 8.19 </td>\n   <td style=\"text-align:right;\"> 6.393722 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 4.96 </td>\n   <td style=\"text-align:right;\"> 7.166174 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 6.20 </td>\n   <td style=\"text-align:right;\"> 7.515659 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.97 </td>\n   <td style=\"text-align:right;\"> 7.250036 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.32 </td>\n   <td style=\"text-align:right;\"> 7.134681 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.45 </td>\n   <td style=\"text-align:right;\"> 6.917319 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 6.03 </td>\n   <td style=\"text-align:right;\"> 6.120089 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.70 </td>\n   <td style=\"text-align:right;\"> 7.665526 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 6.04 </td>\n   <td style=\"text-align:right;\"> 7.809111 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 5.22 </td>\n   <td style=\"text-align:right;\"> 6.601296 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 3.99 </td>\n   <td style=\"text-align:right;\"> 6.524710 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_230 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 4.85 </td>\n   <td style=\"text-align:right;\"> 8.197116 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 8.63 </td>\n   <td style=\"text-align:right;\"> 6.160052 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.27 </td>\n   <td style=\"text-align:right;\"> 4.720711 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.51 </td>\n   <td style=\"text-align:right;\"> 6.917185 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.46 </td>\n   <td style=\"text-align:right;\"> 4.384756 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.91 </td>\n   <td style=\"text-align:right;\"> 6.069185 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.40 </td>\n   <td style=\"text-align:right;\"> 7.113879 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.36 </td>\n   <td style=\"text-align:right;\"> 5.428766 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.74 </td>\n   <td style=\"text-align:right;\"> 6.694142 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 4.15 </td>\n   <td style=\"text-align:right;\"> 5.270298 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 8.60 </td>\n   <td style=\"text-align:right;\"> 6.811773 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 5.41 </td>\n   <td style=\"text-align:right;\"> 5.106644 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 8.30 </td>\n   <td style=\"text-align:right;\"> 7.413519 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.93 </td>\n   <td style=\"text-align:right;\"> 7.112385 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.44 </td>\n   <td style=\"text-align:right;\"> 7.428674 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> noP_28 </td>\n   <td style=\"text-align:left;\"> noP </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 7.85 </td>\n   <td style=\"text-align:right;\"> 6.372659 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 32.42 </td>\n   <td style=\"text-align:right;\"> 11.286793 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.03 </td>\n   <td style=\"text-align:right;\"> 10.456630 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 18.35 </td>\n   <td style=\"text-align:right;\"> 11.106341 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.04 </td>\n   <td style=\"text-align:right;\"> 10.816896 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 16.61 </td>\n   <td style=\"text-align:right;\"> 10.608252 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 25.79 </td>\n   <td style=\"text-align:right;\"> 7.121587 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 31.00 </td>\n   <td style=\"text-align:right;\"> 9.165891 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 36.13 </td>\n   <td style=\"text-align:right;\"> 11.053978 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 17.50 </td>\n   <td style=\"text-align:right;\"> 8.271196 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.42 </td>\n   <td style=\"text-align:right;\"> 8.649225 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 19.60 </td>\n   <td style=\"text-align:right;\"> 10.313985 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 11.62 </td>\n   <td style=\"text-align:right;\"> 8.098859 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 18.76 </td>\n   <td style=\"text-align:right;\"> 10.061778 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 21.55 </td>\n   <td style=\"text-align:right;\"> 11.048822 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> MgCl </td>\n   <td style=\"text-align:right;\"> 19.05 </td>\n   <td style=\"text-align:right;\"> 9.741622 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 20.91 </td>\n   <td style=\"text-align:right;\"> 12.119304 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 23.48 </td>\n   <td style=\"text-align:right;\"> 12.057252 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 17.47 </td>\n   <td style=\"text-align:right;\"> 12.064659 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 24.49 </td>\n   <td style=\"text-align:right;\"> 13.576118 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 25.70 </td>\n   <td style=\"text-align:right;\"> 10.983965 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 28.24 </td>\n   <td style=\"text-align:right;\"> 12.935397 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 17.70 </td>\n   <td style=\"text-align:right;\"> 11.921333 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 32.90 </td>\n   <td style=\"text-align:right;\"> 13.030630 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 22.80 </td>\n   <td style=\"text-align:right;\"> 12.644756 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 32.47 </td>\n   <td style=\"text-align:right;\"> 14.715830 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 22.05 </td>\n   <td style=\"text-align:right;\"> 13.186593 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_101 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain101 </td>\n   <td style=\"text-align:right;\"> 23.47 </td>\n   <td style=\"text-align:right;\"> 13.513763 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 23.46 </td>\n   <td style=\"text-align:right;\"> 10.981978 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 22.93 </td>\n   <td style=\"text-align:right;\"> 12.563616 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 17.08 </td>\n   <td style=\"text-align:right;\"> 12.174456 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 15.95 </td>\n   <td style=\"text-align:right;\"> 13.151797 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 15.03 </td>\n   <td style=\"text-align:right;\"> 12.072456 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 13.00 </td>\n   <td style=\"text-align:right;\"> 10.692603 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 18.30 </td>\n   <td style=\"text-align:right;\"> 12.236482 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 17.80 </td>\n   <td style=\"text-align:right;\"> 11.792879 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 17.43 </td>\n   <td style=\"text-align:right;\"> 11.914695 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 14.93 </td>\n   <td style=\"text-align:right;\"> 11.281731 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 22.75 </td>\n   <td style=\"text-align:right;\"> 11.502507 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 37.90 </td>\n   <td style=\"text-align:right;\"> 13.170210 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_230 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain230 </td>\n   <td style=\"text-align:right;\"> 13.27 </td>\n   <td style=\"text-align:right;\"> 10.055399 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 37.14 </td>\n   <td style=\"text-align:right;\"> 11.908378 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 39.39 </td>\n   <td style=\"text-align:right;\"> 12.612785 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 28.27 </td>\n   <td style=\"text-align:right;\"> 12.434356 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 29.50 </td>\n   <td style=\"text-align:right;\"> 12.559904 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 27.29 </td>\n   <td style=\"text-align:right;\"> 11.585637 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 22.82 </td>\n   <td style=\"text-align:right;\"> 11.925326 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 25.05 </td>\n   <td style=\"text-align:right;\"> 12.831222 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 17.48 </td>\n   <td style=\"text-align:right;\"> 11.644037 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 15.85 </td>\n   <td style=\"text-align:right;\"> 11.900193 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 9.54 </td>\n   <td style=\"text-align:right;\"> 10.698752 </td>\n   <td style=\"text-align:left;\"> small </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 27.91 </td>\n   <td style=\"text-align:right;\"> 11.668794 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 26.63 </td>\n   <td style=\"text-align:right;\"> 12.555404 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P_28 </td>\n   <td style=\"text-align:left;\"> P </td>\n   <td style=\"text-align:left;\"> Strain28 </td>\n   <td style=\"text-align:right;\"> 29.96 </td>\n   <td style=\"text-align:right;\"> 11.771277 </td>\n   <td style=\"text-align:left;\"> large </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n\n\n\n\n## Plotting\n\n### Basic Plots\n\n#### Scatter plots\n\nThe examples below are part of base R, i.e. we can plot without using any packages.\nHowever, there are some nice packages that let you control a lot of parameters, which are good to learn for more sophisticates plots.\n\nPlotting in base R is simple, we just need to define, what we plot against the x- and y-axis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# lets plot our root length against our shoot weight\nx <- growth_data$FW_shoot_mg\ny <- growth_data$Rootlength\n\nplot(x, y)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-148-1.png){width=672}\n:::\n:::\n\n\nNow, lets add some more axis labels to make it more informative and lets startt the plot at 0:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# lets plot our root length against our shoot weight\nx <- growth_data$FW_shoot_mg\ny <- growth_data$Rootlength\n\nplot(x, y, xlab = \"Shoot_weight_mg\", ylab = \"Rootlength_cm\", ylim = c(0, 15), xlim = c(0, 50))\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-149-1.png){width=672}\n:::\n:::\n\n\nA useful thing to know is that you can add plots together, i.e. we can add a regression line:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets do the stats running a linear model (lm)\nlm(growth_data$Rootlength ~ growth_data$FW_shoot_mg)\n## \n## Call:\n## lm(formula = growth_data$Rootlength ~ growth_data$FW_shoot_mg)\n## \n## Coefficients:\n##             (Intercept)  growth_data$FW_shoot_mg  \n##                  5.2912                   0.2465\n```\n:::\n\n\nHere, the intercept is 5.2912 and the slope is 0.2465 .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# lets plot our root length against our shoot weight\nx <- growth_data$FW_shoot_mg\ny <- growth_data$Rootlength\n\n#plot\nplot(x, y, xlab = \"Shoot_weight_mg\", ylab = \"Rootlength_cm\", ylim = c(0, 15), xlim = c(0, 50))\n\n#add the info from ln (both lines of code do the same thing)\nabline(lm(growth_data$Rootlength ~ growth_data$FW_shoot_mg))\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-151-1.png){width=672}\n:::\n:::\n\n\nWe can even add the stats, but therefore we need to prepare the stats a bit better:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#to stats\nmodl = lm(growth_data$Rootlength ~ growth_data$FW_shoot_mg)\n\n#get summary\nmodsum = summary(modl)\n\n#get R2\nr2 = modsum$adj.r.squared\n\n#look at the coefficients\nmodsum$coefficients\n##                          Estimate Std. Error  t value     Pr(>|t|)\n## (Intercept)             5.2912436 0.30469198 17.36588 2.278273e-32\n## growth_data$FW_shoot_mg 0.2464783 0.01711628 14.40023 2.039703e-26\n\n#get the p-value (its in the coefficient table, in the 2nd row and 4th column)\nmy.p = modsum$coefficients[2,4]\n```\n:::\n\n\nNow we can plot this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#add a label, in which we store the text we want to add\nmylabel = bquote(italic(R)^2 == .(format(r2, digits = 3)))\n\n#plot\nplot(x, y, xlab = \"Shoot_weight_mg\", ylab = \"Rootlength_cm\", ylim = c(0, 15), xlim = c(0, 50))\n\n#add the info from ln (both lines of code do the same thing)\nabline(lm(growth_data$Rootlength ~ growth_data$FW_shoot_mg))\n\n#add the text\ntext(x = 45, y =14, labels = mylabel)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-153-1.png){width=672}\n:::\n:::\n\n\nIf we want to add the other value, it gets a bit more complicated esp. if we want to have first the R2 and then, in a new line, the p-value.\n\nFor this, lets first prepare a new label\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make an empty vecotr\nrp = vector('expression',2)\nrp\n## expression(NULL, NULL)\n\n#add our two values into the vector\nrp[1] = substitute(expression(italic(R)^2 == MYVALUE), \n\t\tlist(MYVALUE = format(r2,dig=3)))[2]\n\nrp[2] = substitute(expression(italic(p) == MYOTHERVALUE), \n\t\tlist(MYOTHERVALUE = format(my.p, digits = 2)))[2]\n\nrp\n## expression(italic(R)^2 == \"0.665\", italic(p) == \"2e-26\")\n```\n:::\n\n\nLets plot this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot\nplot(x, y, xlab = \"Shoot_weight_mg\", ylab = \"Rootlength_cm\", ylim = c(0, 15), xlim = c(0, 50))\n\n#add the info from ln (both lines of code do the same thing)\nabline(lm(growth_data$Rootlength ~ growth_data$FW_shoot_mg))\n\n#add the text as a legend and remove the border with bty\nlegend(\"topright\", legend = rp, bty = 'n')\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-155-1.png){width=672}\n:::\n:::\n\n\n\n#### Lineplots\n\nNow, lets work with our time course data to draw some line plots. I.e. lineplots are ideal if we have measurements over time. \n\nLets first summarize our time course data to make it easier to plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n#first filter to only print P data, then summarize the data by condition and timepoint and calculate the mean\ntimecourse_summary <- timecourse_noNA %>% \n    filter(Nutrient == \"P\")  %>% \n    group_by(Condition, Timepoint) %>%  \n    summarise(mean_root = mean(Rootlength))\n## `summarise()` has grouped output by 'Condition'. You can override using the\n## `.groups` argument.\n\nhead(timecourse_summary)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Condition\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Timepoint\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean_root\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"350\",\"2\":\"t0\",\"3\":\"1.521533\"},{\"1\":\"350\",\"2\":\"t1\",\"3\":\"2.328333\"},{\"1\":\"350\",\"2\":\"t2\",\"3\":\"3.851552\"},{\"1\":\"350\",\"2\":\"t3\",\"3\":\"5.717783\"},{\"1\":\"350\",\"2\":\"t4\",\"3\":\"9.387750\"},{\"1\":\"350\",\"2\":\"t5\",\"3\":\"11.221909\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n\n#split the data into our two categories\ntimecourse_summary_Control <- timecourse_summary[timecourse_summary$Condition == 'MgCl',]\ntimecourse_summary_350 <- timecourse_summary[timecourse_summary$Condition == '350',]\n```\n:::\n\n\nUseful comments:\n\n* type= It controls the type (p for points, l for lines, b for both,<e2><80><a6>).\n* pch= integer [0,25]. Controls the plot symbol.\n* log= It causes the x axis x, y axis y or both xy to be logarithmic.\n* xlab=, ylab= string, labels for the x and y axis, respectively.\n* xlim=, ylim= length 2 vector, x-axis, y-axis limits.\n* main= string, title of the plot.\n* col = hexadecimal or string, colour of the points/lines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 0:5\ny <- timecourse_summary_Control$mean_root\n\nplot(x, y, type = \"b\", pch = 19, xlab = \"Timepoints\", ylab = \"Rootlength (cm)\", col = \"#7700BB\", main = \"Growth measurements\")\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-157-1.png){width=672}\n:::\n:::\n\n\nplot() always overwrites the content for the current graphics window. \n\nTo add elements to an existing plot, one can use points, lines, abline, text, <e2><80><a6>\nWe can also add a legend to the plot. \n\nIn the previous graph eith out growth measurements let us add the root growth of our microbe treatment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 0:5\ny <- timecourse_summary_Control$mean_root\nz <- timecourse_summary_350$mean_root\n\nplot(x, y, type = \"b\", pch = 19, xlab = \"Timepoints\", ylab = \"Rootlength (cm)\",col = \"#7700BB\", ylim = c(0, 15), main = \"Growth measurements\")\nlines(x, z, type = \"b\", col = \"#5555DD\")\nlegend(\"topright\", c(\"control\", \"microbe\"), col = c(\"#7700BB\", \"#5555DD\"),pch = c(19, 1))\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-158-1.png){width=672}\n:::\n:::\n\n\nWe can see nicely, that our roots grow longer past the 3rd timepoint.\n\n### info on using par\n\nTo change graphical parameters globally you can use par. R allows for n <c3><97> m figures in a single page, by adjusting the parameter mfrow:\n\n- mfrow = c(3, 1) --> we have 3 plots distributed across 3 rows and one column\n- par(mai = c(2, 0.82, 0.82, 0.42)) --> sets the bottom, left, top and right margins respectively of the plot region in number of lines of text. If we change the margins it is recommended to reset them to the default after plotting with ``par(mai = c(1.02, 0.82, 0.82, 0.42))``. \n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(n, m)) # n: number of figures in rows, m: ... in columns.\nplot(x1, y1)\nplot(x1, y2)\n...\nplot(xn, ym)\n\n#save a file\npng(\"../output_examples/filename.png\")\nplot(x, y)\ndev.off()\n```\n:::\n\n\nIn the above code chunk, you first open a png file, then plot directly to that file, and finally explicitly close\nthe plotting device with dev.off(). Thus, you do not see the plot on the graphics window. The Cairo\npackage is supposed to be superior to these basic plotting functions, but it does not come with the base\ninstallation of R, therefore you will have to install it to try it out (if you are interested, or at a later time).\n\n\n#### Printing our results using par\n\nNow lets generate a png file plot.png containing three plots in three different rows.\n\n- The data for our control treatment\n- The data for our microbe treatment\n- The data combined in one plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nx <- 0:5\ncontrol <- timecourse_summary_Control$mean_root\nMicrobe <- timecourse_summary_350$mean_root\n\n#define what we want to print\npng(\"../output_examples/filename2.png\", width = 240, height = 480)\n\n#define how we want to order our 3 plots into rows and columns\npar(mfrow = c(3, 1)) \n\n#build plot1\nplot(x, control, type = \"b\", pch = 19, xlab = \"Timepoints\", ylab = \"Rootlength (cm)\",col = \"#7700BB\", main = \"Growth measurements\")\n\n#build plot2\nplot(x, Microbe, type = \"b\", pch = 19, xlab = \"Timepoints\", ylab = \"Rootlength (cm)\",col = \"#5555DD\", main = \"Growth measurements\")\n\n#build plot3\nplot(x, control, type = \"b\", pch = 19, xlab = \"Timepoints\", ylab = \"Rootlength (cm)\",col = \"#7700BB\", ylim = c(0, 15), main = \"Growth measurements\")\nlines(x, Microbe, type = \"b\", col = \"#5555DD\")\nlegend(\"topright\", c(\"control\", \"microbe\"), col = c(\"#7700BB\", \"#5555DD\"),pch = c(19, 1))\n\n#closes the specified plot\ndev.off()\n\n```\n:::\n\n\n\n\n### Histograms\n\nA histogram shows the frequency of data values in equally sized intervals. Density plots are an alternative, but because of the\nsmoothing between data points, histograms provide a more <e2><80><98>natural<e2><80><99> look at your data. If you are interested\nin how to make a density plot, look at the help page of density.\n\nAs an example, lets plot the distribution of our root length measurements across our data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(growth_data[, \"Rootlength\"], cex = 0.6, main = \"Data distribution\", breaks = 10, density = 100, col = \"lightblue\", border = \"darkblue\", xlab = \"Rootlength\", labels =T)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-161-1.png){width=672}\n:::\n:::\n\n\n### Boxplots\n\nBoxplots represent a compact summary of a data vector in graphical form. \n\nAs we<e2><80><99>ve already seen above, the function summary returns summary statistics on the command line: the minimum, first quartile, mean,\nmedian, third quartile and the maximum. \n\nThe boxplot displays these values graphically (except the mean) as follows:\n\n- the thick line in the middle of the box represents the median, \n- the lower bound of the box the first quartile and the upper bound the third quartile. Thus, 50% of the data are within the range of the box. \n- The whiskers (thin lines below and above the box) represent the minimum and maximum. \n- Points more extreme than the min. and max. are considered outliers and the help page describes how they are defined. \n\nWe will first make a boxplot of all measurements and then check for differences between the two nutrient conditions.. Play around with the parameters and add colors and labels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# all data\nboxplot(growth_data$Rootlength, cex = 0.8,  ylab = \"Root length (cm)\")\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-162-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# data by nutrient condition\nboxplot(growth_data$Rootlength ~ growth_data$Nutrient, las = 2, cex = 0.8, ylab = \"Root length (cm)\")\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-163-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# data by nutrient and growth condition\nboxplot(growth_data$Rootlength ~ growth_data$Nutrient * growth_data$Condition, las = 2, cex = 0.8, ylab = \"Root length (cm)\")\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-164-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Ggplot2\n\nGplot2 is a system for declaratively creating graphics, based on The Grammar of Graphics. You provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.\n\nDetailed info can be found here: https://ggplot2.tidyverse.org\n\nOne important difference to basic plots is that argument can be given in separate blocks that are separated by a ``+``\n\n#### Start with a basic bargraph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n#make a bargraph\nmyplot <-\n  ggplot(growth_data, aes(x =Nutrient, y = Rootlength)) +  #here we provide the dimensions of our plot\n  geom_bar(stat=\"identity\")                                   #here, we say what kind of plot we want \n\nmyplot\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-165-1.png){width=672}\n:::\n:::\n\n\nWe see that the default behavior is to sum everything, which is not what we want. Luckily switching different graph types is very quick\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make a boxplot instead of bargrpah\nmyplot <-\n  ggplot(growth_data, aes(x =Nutrient, y = Rootlength)) +  \n  geom_boxplot()                                   \n\nmyplot\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-166-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#do a histogram\nmyplot <-\n  ggplot(growth_data, aes(Rootlength)) +  \n  geom_histogram()                                   \n\nmyplot\n## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-167-1.png){width=672}\n:::\n:::\n\n\nThe only thing we might want to watch out for is that depending on what data we plot the astethics might need to be adopted. I.e. for a histogram there is no need to provide a x and y value, but we only need to define for what data we want to plot a histogram.\n\nAnother useful feature is to add colors by groupings, i.e. nutrient conditions, using the fill option.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyplot <-\n  ggplot(growth_data, aes(x =Nutrient, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot()                                   \n\nmyplot\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-168-1.png){width=672}\n:::\n:::\n\n\n#### Prettify\n\nBy default the basic design of a ggplot2 is not ready for publication but we can control every aspects to make it look nicer. A cheat sheet for all the options can be found [here](http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyplot <-\n  ggplot(growth_data, aes(x =Nutrient, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot()  +                                 \n  scale_fill_manual(values=c(\"black\", \"grey\")) +                                          #add some other colors\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 16)) +                               #make the axis start at 0 \n  theme_bw() +                                                                            #remove the grey background\n  ylab(\"Root length (cm)\") +                                                              #change the label for the y-axis\n  xlab(\"\") +                                                                              #remove the label for the x axis\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),           #modify the grid lines\n        panel.background = element_blank(), axis.line = element_line(colour = \"black\")) +\n  theme(legend.position=\"right\",                                                          #move the legend around\n        axis.text.x=element_text(angle=45,hjust = 1, size=12))                            #control size and orientation of the axis labels\n\nmyplot\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-169-1.png){width=672}\n:::\n:::\n\n\n#### Sort data\n\nBy default most programs sort alpha in an alphabetical way. We can reorder this using vectors (which we can write ourselves or use a mapping file to create them)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#reorder the nutrient levels in our factors\ngrowth_data$Nutrient2 <-  factor(growth_data$Nutrient, levels = c(\"P\", \"noP\")) \n\n#plot in our new order\nmyplot <-\n  ggplot(growth_data, aes(x =Nutrient2, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot()\n\nmyplot\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-170-1.png){width=672}\n:::\n:::\n\n\n\n#### Printing data\n\nWith ``pdf()`` we tell R that we want to print something to our computer. Inside the function we can define the name of the pdf to generate, the size and other things. After adding the plot we want to print it is important to run ``dev.off()`` in order to tell R to stop the \"printing mode\" and go back to the default mode.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets first generate two plots\nmyplot_root <-\n  ggplot(growth_data, aes(x =Nutrient2, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot()\n\nmyplot_shoot <-\n  ggplot(growth_data, aes(x =Nutrient2, y = FW_shoot_mg, fill = Nutrient)) +  \n  geom_boxplot()\n\n#plot one graph\npdf(\"../output_examples/Plot_root_length.pdf\", width=3, height=3, family  = \"Times\")\nmyplot_root\ndev.off()\n## quartz_off_screen \n##                 2\n```\n:::\n\n\n\n#### Combining and printing multiple plots\n\nThe ggpubr package is nice to combine multiple plots onto one plot. \nSome more information on this package can be found [here](https://rpkgs.datanovia.com/ggpubr/index.html)\n\nHow it works:\n\n- First list the plots we want to print\n- the labels argument allows us to add labels\n- the ncol and nrow arguments allow us to control how many plots go into a row and a column\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load package\nlibrary(ggpubr)\n\n#view how ggarrange deals with two plots\nggarrange(myplot_root, myplot_shoot, \n          labels = c(\"A\", \"B\"),\n          ncol = 2, nrow = 1)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-172-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#we can also plot two graphs and print them in one pdf\npdf(\"../output_examples/Two_plots.pdf\", width=3, height=3, family  = \"Times\")\nggarrange(myplot_root, myplot_shoot, \n          labels = c(\"A\", \"B\"),\n          ncol = 2, nrow = 1)\ndev.off()\n## quartz_off_screen \n##                 2\n```\n:::\n\n\n\n\n#### Sorting data v2\n\nIf we have multiple conditions, i.e. nutrient conditions and other treatments there are several ways to plot these\n\n1. Plot them side by side and color by nutrient conditions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#pdf(\"Plot_root_length.pdf\", width=3, height=3, family  = \"Times\")\n  ggplot(growth_data, aes(x =SampleID, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-174-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#dev.off()\n```\n:::\n\n\n2. Change the order.\n\nNow, here the order is not nice, but as mentioned we can use mapping files to sort our data. Lets try.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets check how our mapping file looked like\nkable((mapping_file), format='markdown')\n```\n\n::: {.cell-output-display}\n|   |SampleID |Nutrient |Condition |Comment         |\n|:--|:--------|:--------|:---------|:---------------|\n|1  |noP      |noP      |MgCl      |FirstExperiment |\n|14 |noP_101  |noP      |Strain101 |FirstExperiment |\n|27 |noP_230  |noP      |Strain230 |FirstExperiment |\n|38 |noP_28   |noP      |Strain28  |FirstExperiment |\n|53 |P        |P        |MgCl      |FirstExperiment |\n|68 |P_101    |P        |Strain101 |FirstExperiment |\n|80 |P_230    |P        |Strain230 |FirstExperiment |\n|93 |P_28     |P        |Strain28  |FirstExperiment |\n:::\n:::\n\n\nWe can use this simpler table to define how we want to resort our growth data. First, lets reorder the metadata first by nutrient and then condition:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets sort the file first conditon an the nutrient (in reverse order, by using the rev() function )\nmapping_file <- mapping_file[with(mapping_file, order(Condition, rev(Nutrient))), ]\n\n#check whether we like how things are ordered (look at the order of the first line)\nmapping_file$SampleID\n## [1] \"noP\"     \"P\"       \"noP_101\" \"P_101\"   \"noP_230\" \"P_230\"   \"noP_28\" \n## [8] \"P_28\"\n```\n:::\n\n\nNow, we can use the order of this file to re-order our larger dataframe with the growth data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#reorder the levels of our growth data using the mapping file\ngrowth_data$SampleID2 <-  factor(growth_data$SampleID, levels = as.character(mapping_file$SampleID)) \nhead(growth_data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"SampleID\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Condition\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"FW_shoot_mg\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rootlength\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"category\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Nutrient2\"],\"name\":[7],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"SampleID2\"],\"name\":[8],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"10.26\",\"5\":\"5.931015\",\"6\":\"small\",\"7\":\"noP\",\"8\":\"noP\",\"_rn_\":\"1\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"6.52\",\"5\":\"5.743447\",\"6\":\"small\",\"7\":\"noP\",\"8\":\"noP\",\"_rn_\":\"2\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"12.17\",\"5\":\"6.834720\",\"6\":\"small\",\"7\":\"noP\",\"8\":\"noP\",\"_rn_\":\"3\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"11.37\",\"5\":\"6.742735\",\"6\":\"small\",\"7\":\"noP\",\"8\":\"noP\",\"_rn_\":\"4\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"9.80\",\"5\":\"6.736886\",\"6\":\"small\",\"7\":\"noP\",\"8\":\"noP\",\"_rn_\":\"5\"},{\"1\":\"noP\",\"2\":\"noP\",\"3\":\"MgCl\",\"4\":\"3.75\",\"5\":\"4.236348\",\"6\":\"small\",\"7\":\"noP\",\"8\":\"noP\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n\n#plot (for now lets do this side by side)\n  ggplot(growth_data, aes(x =SampleID2, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-177-1.png){width=672}\n:::\n:::\n\n\n#### Bargraphs with error bars\n\nFor bargraphs we can also make them nice looking with errorbars, however, the values for the mean, sd and so one ideally should be listed in a summary table. \n\nLuckily we have learned before how we can use ddply to create such a table again and then blot it:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#summarize\ngrowth_data_summarized <- ddply(growth_data, .(SampleID, Nutrient), summarize, RootLength = mean(Rootlength), sd = sd (Rootlength), se = sd(Rootlength) / sqrt((length(Rootlength))))\n\n#order levels\ngrowth_data_summarized$SampleID2 <-  factor(growth_data_summarized$SampleID, levels = as.character(mapping_file$SampleID)) \n\n#plot\n  ggplot(growth_data_summarized, aes(x=SampleID2, y=RootLength, fill=Nutrient)) + \n  geom_bar(stat=\"identity\", color=\"black\", \n           position=position_dodge()) +\n  geom_errorbar(aes(ymin=RootLength-sd, ymax=RootLength+sd), width=.2,\n                 position=position_dodge(.9)) \n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-178-1.png){width=672}\n:::\n:::\n\n\n\n#### Faceting data\n\nSometimes, we might to plot data into separate plots. This can be done in ggplot with one extra command. Facetting can do this for you.\n\nOptions:\n- Scales \"free\" tells ggplot that the scales can be different between plots. I.e. axis height.\n- ncol = allows to control the dimensions of the plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot horizontal\n  ggplot(growth_data, aes(x =SampleID2, y = Rootlength, fill = Nutrient)) +  \n  geom_boxplot() +\n  facet_wrap(. ~ Nutrient, scales = \"free\", ncol = 2)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-179-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Working with annotation data\n\n\nAs mentioned in the beginning section, if working with genomes we often have large lists of proteins and their annotations, often from different databases.\n\nHere, we might be interested in condensing this information for each genome or for each phylum etc . OR we want to merge our data with other tables that are ordered differently. \nWe might also want to plot the data to compare the presence absence levels of different genomes. This section with discuss how to do this in a step by step manner.\n\n\n### Load essential packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# | warning: false\nlibrary(\"ggplot2\")\nlibrary(\"plyr\")\nlibrary(\"dplyr\")\nlibrary(\"grid\")\nlibrary(\"gplots\")\n## \n## Attaching package: 'gplots'\n## The following object is masked from 'package:stats':\n## \n##     lowess\nlibrary(\"gridExtra\")\n## \n## Attaching package: 'gridExtra'\n## The following object is masked from 'package:dplyr':\n## \n##     combine\nlibrary(\"multcomp\")\n## Loading required package: mvtnorm\n## Loading required package: survival\n## Loading required package: TH.data\n## Loading required package: MASS\n## \n## Attaching package: 'MASS'\n## The following object is masked from 'package:dplyr':\n## \n##     select\n## \n## Attaching package: 'TH.data'\n## The following object is masked from 'package:MASS':\n## \n##     geyser\nlibrary(\"reshape2\")\n## \n## Attaching package: 'reshape2'\n## The following object is masked from 'package:tidyr':\n## \n##     smiths\nlibrary(\"RColorBrewer\")\nlibrary('tidyr')\nlibrary('tidyverse')\nlibrary(data.table)\n## \n## Attaching package: 'data.table'\n## The following objects are masked from 'package:reshape2':\n## \n##     dcast, melt\n## The following objects are masked from 'package:dplyr':\n## \n##     between, first, last\n## The following object is masked from 'package:purrr':\n## \n##     transpose\n```\n:::\n\n\n\n### Deal with the mapping file for our genomes\n\n#### Load mapping file\n\nmapping file = a table that has the metadata for our genomes. \nIn this specific example it lists our 46 DPANN genomes into clusters based on their phylogenetic placement. \n\nWe later want to summarize our data by individual bins and the phylogenetic clusters defined in the mapping file.\n\nNotice: We can also sort our mapping file beforehand and use this order to order our tables, graph, etc...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#read in the mapping file\ndesign <- read.table(\"../data/mapping.txt\", sep=\"\\t\", header=T, fill=TRUE, quote = \"\")\n\n#check the structure of the mapping file\nkable(head(design), format='markdown')\n```\n\n::: {.cell-output-display}\n|BinID              |Cluster |\n|:------------------|:-------|\n|NIOZ132_cc_b51_2   |Basal   |\n|NIOZ134_mx_b281_2  |Basal   |\n|SRR2090153_bin1042 |Aquifer |\n|SRR2090153_bin461  |Aquifer |\n|SRR2090159_bin1129 |Aquifer |\n|SRR2090159_bin1288 |Aquifer |\n:::\n:::\n\n\n### Clean mapping file\n\nHere, we want to add an extra column that summarizes how many genomes are in each phylogenetic cluster.\n\nFirst lets summarize how many bins we hav for each cluster:\n\n- ``ddply()`` = summarize our data by counting the number of bins we have in each cluster\n- ``order()`` = next, we order our data based on the clusters with the greated number of bins\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#add a new column that links the BinID and the taxonomic cluster\ndesign$NewName2 <-paste(design$BinID, design$Cluster, sep = \"-\")\nkable((design), format='markdown')\n```\n\n::: {.cell-output-display}\n|BinID              |Cluster |NewName2                   |\n|:------------------|:-------|:--------------------------|\n|NIOZ132_cc_b51_2   |Basal   |NIOZ132_cc_b51_2-Basal     |\n|NIOZ134_mx_b281_2  |Basal   |NIOZ134_mx_b281_2-Basal    |\n|SRR2090153_bin1042 |Aquifer |SRR2090153_bin1042-Aquifer |\n|SRR2090153_bin461  |Aquifer |SRR2090153_bin461-Aquifer  |\n|SRR2090159_bin1129 |Aquifer |SRR2090159_bin1129-Aquifer |\n|SRR2090159_bin1288 |Aquifer |SRR2090159_bin1288-Aquifer |\n|GCA_002494525      |Marine  |GCA_002494525-Marine       |\n|GCA_002495465      |Marine  |GCA_002495465-Marine       |\n|GCA_002501985      |Marine  |GCA_002501985-Marine       |\n|SRR4028224_bin17   |Marine  |SRR4028224_bin17-Marine    |\n|SRR5007147_bin71   |Marine  |SRR5007147_bin71-Marine    |\n|U_76725            |Marine  |U_76725-Marine             |\n|NIOZ124_cc_b247_2  |Clade1  |NIOZ124_cc_b247_2-Clade1   |\n|NIOZ125_mb_b254_2  |Clade1  |NIOZ125_mb_b254_2-Clade1   |\n|NIOZ129_mb_b262_2  |Clade1  |NIOZ129_mb_b262_2-Clade1   |\n|NIOZ126_mb_b401_2  |Clade1  |NIOZ126_mb_b401_2-Clade1   |\n|NIOZ122_mb_b319_2  |Clade1  |NIOZ122_mb_b319_2-Clade1   |\n|NIOZ134_mb_b41_2   |Clade1  |NIOZ134_mb_b41_2-Clade1    |\n|NIOZ132_mb_b282_2  |Clade1  |NIOZ132_mb_b282_2-Clade1   |\n|NIOZ127_mb_b161_2  |Clade1  |NIOZ127_mb_b161_2-Clade1   |\n|NIOZ123_bs_b5_2    |Clade1  |NIOZ123_bs_b5_2-Clade1     |\n|NIOZ121_cc_b94_2   |Clade1  |NIOZ121_cc_b94_2-Clade1    |\n|NIOZ136_cc_b15_2   |Clade1  |NIOZ136_cc_b15_2-Clade1    |\n|GCA_002502135      |Clade2  |GCA_002502135-Clade2       |\n|NIOZ134_mb_b293_2  |Clade2  |NIOZ134_mb_b293_2-Clade2   |\n|NIOZ132_mb_b260_2  |Clade2  |NIOZ132_mb_b260_2-Clade2   |\n|NIOZ126_mb_b137_2  |Clade2  |NIOZ126_mb_b137_2-Clade2   |\n|NIOZ129_mb_b254_2  |Clade2  |NIOZ129_mb_b254_2-Clade2   |\n|NIOZ127_mb_b282_2  |Clade2  |NIOZ127_mb_b282_2-Clade2   |\n|NIOZ122_mb_b305_2  |Clade2  |NIOZ122_mb_b305_2-Clade2   |\n|NIOZ136_mb_b335_2  |Clade2  |NIOZ136_mb_b335_2-Clade2   |\n|NIOZ132_mb_b198_2  |Clade2  |NIOZ132_mb_b198_2-Clade2   |\n|NIOZ136_mb_b104_2  |Clade2  |NIOZ136_mb_b104_2-Clade2   |\n|NIOZ125_mb_b178_2  |Clade2  |NIOZ125_mb_b178_2-Clade2   |\n|NIOZ121_mb_b48_2   |Clade2  |NIOZ121_mb_b48_2-Clade2    |\n|NIOZ134_cc_b149_2  |Clade2  |NIOZ134_cc_b149_2-Clade2   |\n|NIOZ134_mb_b361_2  |Clade2  |NIOZ134_mb_b361_2-Clade2   |\n|NIOZ136_mb_b226_2  |Clade2  |NIOZ136_mb_b226_2-Clade2   |\n|NIOZ123_bs_b392_2  |Clade2  |NIOZ123_bs_b392_2-Clade2   |\n|NIOZ124_mb_b130_2  |Clade2  |NIOZ124_mb_b130_2-Clade2   |\n|NIOZ132_cc_b149_2  |Clade2  |NIOZ132_cc_b149_2-Clade2   |\n|NIOZ125_cc_b75_2   |Clade2  |NIOZ125_cc_b75_2-Clade2    |\n|NIOZ132_mx_b314_2  |Clade2  |NIOZ132_mx_b314_2-Clade2   |\n|NIOZ120_mb_b229_2  |Clade2  |NIOZ120_mb_b229_2-Clade2   |\n|NIOZ126_mb_b304_2  |Clade2  |NIOZ126_mb_b304_2-Clade2   |\n|NIOZ119_mb_b5_2    |Clade2  |NIOZ119_mb_b5_2-Clade2     |\n:::\n\n```{.r .cell-code}\n\n#transform mapping file and summarize how many genomes we have/cluster\nNumber_of_taxa <- ddply(design, .(Cluster), summarize, NrGenomes = length(Cluster))\n\n#order our data\nNumber_of_taxa <- Number_of_taxa[order(Number_of_taxa$NrGenomes, decreasing = TRUE),] \n\n#view data\nkable((Number_of_taxa), format='markdown')\n```\n\n::: {.cell-output-display}\n|   |Cluster | NrGenomes|\n|:--|:-------|---------:|\n|4  |Clade2  |        23|\n|3  |Clade1  |        11|\n|5  |Marine  |         6|\n|1  |Aquifer |         4|\n|2  |Basal   |         2|\n:::\n:::\n\n\nNext, add this information into our original mapping file:\n\n- ``paste()`` = paste together different columns. With sep we can control what delimiter we want to use when combining info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#add a new column with the cluster count info into mapping file (then it can be added as a label into figures)\ndesign_2 <- merge(design, Number_of_taxa, by = \"Cluster\" )\n\n#view wheter all went fine\nkable(head(design_2), format='markdown')\n```\n\n::: {.cell-output-display}\n|Cluster |BinID              |NewName2                   | NrGenomes|\n|:-------|:------------------|:--------------------------|---------:|\n|Aquifer |SRR2090153_bin1042 |SRR2090153_bin1042-Aquifer |         4|\n|Aquifer |SRR2090153_bin461  |SRR2090153_bin461-Aquifer  |         4|\n|Aquifer |SRR2090159_bin1129 |SRR2090159_bin1129-Aquifer |         4|\n|Aquifer |SRR2090159_bin1288 |SRR2090159_bin1288-Aquifer |         4|\n|Basal   |NIOZ132_cc_b51_2   |NIOZ132_cc_b51_2-Basal     |         2|\n|Basal   |NIOZ134_mx_b281_2  |NIOZ134_mx_b281_2-Basal    |         2|\n:::\n:::\n\n\nNext, let's merge all relevant into one column using ``paste()`` again:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#generate a new column into the mapping file that links the cluster name with the number of genomes of clusters in each cluster\ndesign_2$ClusterName <- paste(design_2$Cluster, \" (\", design_2$NrGenomes, \")\", sep = \"\")\n\n#view data\nkable(head(design_2), format='markdown')\n```\n\n::: {.cell-output-display}\n|Cluster |BinID              |NewName2                   | NrGenomes|ClusterName |\n|:-------|:------------------|:--------------------------|---------:|:-----------|\n|Aquifer |SRR2090153_bin1042 |SRR2090153_bin1042-Aquifer |         4|Aquifer (4) |\n|Aquifer |SRR2090153_bin461  |SRR2090153_bin461-Aquifer  |         4|Aquifer (4) |\n|Aquifer |SRR2090159_bin1129 |SRR2090159_bin1129-Aquifer |         4|Aquifer (4) |\n|Aquifer |SRR2090159_bin1288 |SRR2090159_bin1288-Aquifer |         4|Aquifer (4) |\n|Basal   |NIOZ132_cc_b51_2   |NIOZ132_cc_b51_2-Basal     |         2|Basal (2)   |\n|Basal   |NIOZ134_mx_b281_2  |NIOZ134_mx_b281_2-Basal    |         2|Basal (2)   |\n:::\n:::\n\n\n### Generate lists to order dataframes\n\nThe default behaviour of a lot of R functions is to order data alphabetically but this is not what we might want. \nI.e. we want to order by different columns or simply order by the initial order in our mapping file. \nTo do this it is useful to have vectors that are order our bins, clusters, etc... like we want them.\n\nIn this example the mapping file was ordered like this\n\n- The basal group\n- Groups from an older dataset (marine and aquifer)\n- two black sea clades\n\nLets first check, whether our new mapping file still has that order\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check the old data\ndesign$Cluster\n##  [1] \"Basal\"   \"Basal\"   \"Aquifer\" \"Aquifer\" \"Aquifer\" \"Aquifer\" \"Marine\" \n##  [8] \"Marine\"  \"Marine\"  \"Marine\"  \"Marine\"  \"Marine\"  \"Clade1\"  \"Clade1\" \n## [15] \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\" \n## [22] \"Clade1\"  \"Clade1\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [29] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [36] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [43] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"\n\n#check the new data\ndesign_2$Cluster\n##  [1] \"Aquifer\" \"Aquifer\" \"Aquifer\" \"Aquifer\" \"Basal\"   \"Basal\"   \"Clade1\" \n##  [8] \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\" \n## [15] \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [22] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [29] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [36] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Marine\"  \"Marine\" \n## [43] \"Marine\"  \"Marine\"  \"Marine\"  \"Marine\"\n```\n:::\n\n\nIf we check the individual factors, we can see that the new dataframe is order by alphabet. Since this is not what we want, lets correct this\n\n- ``match(design_2$BinID, design$BinID)`` = We check what positions in design_2 match with design. Here, the first argument are the values to be matched and the second are the values to be matched against.\n- ``order()`` = we reorder our dataframe based on the results from ``match()``\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#reorder our old dataframe by the original one\ndesign_2 <- design_2[ order(match(design_2$BinID, design$BinID)), ]\n\n#check, if the basal clade is now in the correct order\ndesign_2$Cluster\n##  [1] \"Basal\"   \"Basal\"   \"Aquifer\" \"Aquifer\" \"Aquifer\" \"Aquifer\" \"Marine\" \n##  [8] \"Marine\"  \"Marine\"  \"Marine\"  \"Marine\"  \"Marine\"  \"Clade1\"  \"Clade1\" \n## [15] \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\"  \"Clade1\" \n## [22] \"Clade1\"  \"Clade1\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [29] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [36] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\" \n## [43] \"Clade2\"  \"Clade2\"  \"Clade2\"  \"Clade2\"\n```\n:::\n\n\nNow, that the basal clade is in the first position, lets make vectors of the bins and clusters in order this we use:\n\n- ``unique()`` = we use unique on all ClusterNames in our mapping file. That way instead of having repeated names, we only have the unique ones\n- ``as.character()`` = we make sure that our R object we generated is a character (so has words).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make a list to order our bins\nBin_order <- as.character(unique(design_2$BinID))\nBin_order\n##  [1] \"NIOZ132_cc_b51_2\"   \"NIOZ134_mx_b281_2\"  \"SRR2090153_bin1042\"\n##  [4] \"SRR2090153_bin461\"  \"SRR2090159_bin1129\" \"SRR2090159_bin1288\"\n##  [7] \"GCA_002494525\"      \"GCA_002495465\"      \"GCA_002501985\"     \n## [10] \"SRR4028224_bin17\"   \"SRR5007147_bin71\"   \"U_76725\"           \n## [13] \"NIOZ124_cc_b247_2\"  \"NIOZ125_mb_b254_2\"  \"NIOZ129_mb_b262_2\" \n## [16] \"NIOZ126_mb_b401_2\"  \"NIOZ122_mb_b319_2\"  \"NIOZ134_mb_b41_2\"  \n## [19] \"NIOZ132_mb_b282_2\"  \"NIOZ127_mb_b161_2\"  \"NIOZ123_bs_b5_2\"   \n## [22] \"NIOZ121_cc_b94_2\"   \"NIOZ136_cc_b15_2\"   \"GCA_002502135\"     \n## [25] \"NIOZ134_mb_b293_2\"  \"NIOZ132_mb_b260_2\"  \"NIOZ126_mb_b137_2\" \n## [28] \"NIOZ129_mb_b254_2\"  \"NIOZ127_mb_b282_2\"  \"NIOZ122_mb_b305_2\" \n## [31] \"NIOZ136_mb_b335_2\"  \"NIOZ132_mb_b198_2\"  \"NIOZ136_mb_b104_2\" \n## [34] \"NIOZ125_mb_b178_2\"  \"NIOZ121_mb_b48_2\"   \"NIOZ134_cc_b149_2\" \n## [37] \"NIOZ134_mb_b361_2\"  \"NIOZ136_mb_b226_2\"  \"NIOZ123_bs_b392_2\" \n## [40] \"NIOZ124_mb_b130_2\"  \"NIOZ132_cc_b149_2\"  \"NIOZ125_cc_b75_2\"  \n## [43] \"NIOZ132_mx_b314_2\"  \"NIOZ120_mb_b229_2\"  \"NIOZ126_mb_b304_2\" \n## [46] \"NIOZ119_mb_b5_2\"\n\n#make cluster order\nCluster_order <- as.character(unique(design_2$ClusterName))\nCluster_order\n## [1] \"Basal (2)\"   \"Aquifer (4)\" \"Marine (6)\"  \"Clade1 (11)\" \"Clade2 (23)\"\n```\n:::\n\n\n\n## Deal with mapping files for the annotations\n\nThe mapping files (Arcog_mapping and Metabolism_file_KEGG) that are provided with this tutorial give extra information and order our KO and arCOG annotations.\nGenes_of_interest is a list of key metabolic genes we want to look at more closely.\n\n### Load and view the tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#general mapping file for arcog IDs\nArcog_mapping <- read.table(\"../data/ar14_arCOGdef19.txt\", sep=\"\\t\", header=T, fill=TRUE, quote = \"\")\nkable((head(Arcog_mapping)), format='markdown')\n```\n\n::: {.cell-output-display}\n|arcog      |Pathway |GeneID |Gene                                     |COG      |PFAM      |CD |TIGR      |\n|:----------|:-------|:------|:----------------------------------------|:--------|:---------|:--|:---------|\n|arCOG00001 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00002 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |TIGR03433 |\n|arCOG00004 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00005 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00006 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00007 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |          |   |          |\n:::\n\n```{.r .cell-code}\n\n#pathway mapping file\nMetabolism_file_KEGG <- read.table(\"../data/Metabolism_Table_KO_Apr2020.txt\", sep=\"\\t\", header=T, fill=TRUE, quote = \"\")\nkable((head(Metabolism_file_KEGG)), format='markdown')\n```\n\n::: {.cell-output-display}\n|IDs |KO        |pathway_A  |order |Gene                                                   |Comment.Uniprot.comment |\n|:---|:---------|:----------|:-----|:------------------------------------------------------|:-----------------------|\n|ID1 |          |Nitrogen   |      |                                                       |                        |\n|ID2 |K02567    |Nitrogen   |N1    |napA; periplasmic nitrate reductase NapA [EC:1.7.99.4] |Dissimilatory           |\n|ID3 |TIGR01706 |Nitrogen   |N1    |\"napA,  periplasmic nitrate reductase\"                 |Dissimilatory           |\n|ID4 |K02573    |no_pathway |      |napG; ferredoxin-type protein NapG                     |                        |\n|ID5 |K02574    |no_pathway |      |                                                       |                        |\n|ID6 |K00367    |Nitrogen   |N1    |narB; ferredoxin-nitrate reductase [EC:1.7.7.2]        |Assimilatory            |\n:::\n\n```{.r .cell-code}\n\n#load the genes of interest\nGenes_of_interest <- read.table(\"../data/Genes_of_interest.txt\", sep=\"\\t\", header=T, fill=TRUE, quote = \"\")\nkable((head(Arcog_mapping)), format='markdown')\n```\n\n::: {.cell-output-display}\n|arcog      |Pathway |GeneID |Gene                                     |COG      |PFAM      |CD |TIGR      |\n|:----------|:-------|:------|:----------------------------------------|:--------|:---------|:--|:---------|\n|arCOG00001 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00002 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |TIGR03433 |\n|arCOG00004 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00005 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00006 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |pfam03551 |   |          |\n|arCOG00007 |K       |-      |\"Transcriptional regulator, PadR family\" |COG01695 |          |   |          |\n:::\n:::\n\n\n\n### Make a vector to order our genes of interest\n\n- We use ``unique()`` to remove any duplicate gene names\n- ``arrange()`` can be used to order our dataframe by more than one column.\n\nYou notice here that the syntax for ``arrange()`` is a bit unusual and we use the `` %>%`` symbol (a so-called forward pipe operator).\nThis symbol is commonly used in the **dplyr** and **tidyr** packages which are extremely useful to summarize data.\nThis function passes the left hand side of the operator to the first argument of the right hand side of the operator. \nIn the following example, the data frame Genes_of_interest gets passed to ``arrange()``\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#order metabolic genes\nGenes_Metabolism_order_temp <- Genes_of_interest %>% arrange(Order, Order2)\n\n#make a unique vector for our genes of interest\nGenes_Metabolism_order <- as.character(unique(Genes_Metabolism_order_temp$Gene))\nGenes_Metabolism_order\n##   [1] \"HmgB\"                     \"HmgA\"                    \n##   [3] \"MvK\"                      \"M3k\"                     \n##   [5] \"M3P5K\"                    \"mvaD\"                    \n##   [7] \"Ipk\"                      \"GFPS\"                    \n##   [9] \"EgsA\"                     \"GGGP_synthase\"           \n##  [11] \"UbiA\"                     \"GGR\"                     \n##  [13] \"CarS\"                     \"PgsA\"                    \n##  [15] \"ASS\"                      \"Asd\"                     \n##  [17] \"Pol-B1\"                   \"Pol-B2\"                  \n##  [19] \"Pol-B3\"                   \"PolB-casposon-associated\"\n##  [21] \"PolD_small\"               \"PolD_large\"              \n##  [23] \"Pol4\"                     \"PolX\"                    \n##  [25] \"Orc1\"                     \"SSB/RPA1\"                \n##  [27] \"RPA2\"                     \"RPA3\"                    \n##  [29] \"GinS\"                     \"PriS\"                    \n##  [31] \"PriL\"                     \"DnaG\"                    \n##  [33] \"Lig \"                     \"LigN\"                    \n##  [35] \"Pcn1\"                     \"RfcS\"                    \n##  [37] \"RfcL\"                     \"FEN1\"                    \n##  [39] \"RnhA\"                     \"RnhB\"                    \n##  [41] \"MCM2\"                     \"MPH1\"                    \n##  [43] \"BRR2\"                     \"MUS81\"                   \n##  [45] \"SrmB\"                     \"Dna2\"                    \n##  [47] \"TopA\"                     \"GyrA\"                    \n##  [49] \"GyrB\"                     \"Rgy\"                     \n##  [51] \"TopB\"                     \"Top6A\"                   \n##  [53] \"Top6B\"                    \"RecJ/Cdc45\"              \n##  [55] \"SbcC\"                     \"SbcD\"                    \n##  [57] \"NurA\"                     \"Nth\"                     \n##  [59] \"Nfo\"                      \"Nfi\"                     \n##  [61] \"NucS\"                     \"XthA\"                    \n##  [63] \"DinG\"                     \"SSO0112\"                 \n##  [65] \"HerA\"                     \"RadA\"                    \n##  [67] \"RadB\"                     \"Udg1 \"                   \n##  [69] \"AlkD\"                     \"Ogt\"                     \n##  [71] \"Ogg\"                      \"hjc\"                     \n##  [73] \"UvrA\"                     \"UvrB\"                    \n##  [75] \"UvrC\"                     \"MthTI\"                   \n##  [77] \"MthZI\"                    \"MjaII\"                   \n##  [79] \"MjaIII\"                   \"MjaV\"                    \n##  [81] \"Dcm\"                      \"DNA_met\"                 \n##  [83] \"HmfAB\"                    \"HmvA\"                    \n##  [85] \"ScpA\"                     \"ScpB\"                    \n##  [87] \"MC1\"                      \"Smc\"                     \n##  [89] \"Alba1\"                    \"ELP3\"                    \n##  [91] \"FtsZ\"                     \"MinD\"                    \n##  [93] \"Cren-1\"                   \"actin_like\"              \n##  [95] \"Rkd1\"                     \"Rkd2\"                    \n##  [97] \"CetZ1\"                    \"CdvA\"                    \n##  [99] \"CdvB\"                     \"Vps4\"                    \n## [101] \"RpoC/Rpo3\"                \"RpoC/Rpo11\"              \n## [103] \"RpoB/Rpo2\"                \"RpoA/Rpo1\"               \n## [105] \"Rpo6/RpoZ\"                \"RPB11\"                   \n## [107] \"Rpo4\"                     \"RPB5\"                    \n## [109] \"RPB7\"                     \"RPB8\"                    \n## [111] \"RPB10\"                    \"RPC12\"                   \n## [113] \"Rpo13\"                    \"TBP\"                     \n## [115] \"TFB\"                      \"TFE\"                     \n## [117] \"TFS\"                      \"LysM\"                    \n## [119] \"Spt4\"                     \"NusG\"                    \n## [121] \"NusA\"                     \"EGD2\"                    \n## [123] \"L1\"                       \"L2\"                      \n## [125] \"L3\"                       \"L4\"                      \n## [127] \"L5\"                       \"L6P\"                     \n## [129] \"L7AE\"                     \"L10\"                     \n## [131] \"L10AE/L16\"                \"L11\"                     \n## [133] \"L12E/L44/L45/RPP1/RPP2\"   \"L13\"                     \n## [135] \"L13E\"                     \"L14\"                     \n## [137] \"L14E/L6E/L27E\"            \"L15\"                     \n## [139] \"L15E\"                     \"L18\"                     \n## [141] \"L18E\"                     \"L19E\"                    \n## [143] \"L20A\"                     \"L21E\"                    \n## [145] \"L22\"                      \"L23\"                     \n## [147] \"L24\"                      \"L24E\"                    \n## [149] \"L29\"                      \"L30\"                     \n## [151] \"L30E\"                     \"L31E\"                    \n## [153] \"L32E\"                     \"L34E\"                    \n## [155] \"L35AE/L33A\"               \"L37AE/L43A\"              \n## [157] \"L37E\"                     \"L38E\"                    \n## [159] \"L39E\"                     \"L40E\"                    \n## [161] \"L41E\"                     \"L44E\"                    \n## [163] \"S2\"                       \"S3\"                      \n## [165] \"S3AE\"                     \"S4\"                      \n## [167] \"S4E\"                      \"S5\"                      \n## [169] \"S6E/S10\"                  \"S7\"                      \n## [171] \"S8\"                       \"S8E\"                     \n## [173] \"S9\"                       \"S10\"                     \n## [175] \"S11\"                      \"S12\"                     \n## [177] \"S13\"                      \"S14\"                     \n## [179] \"S15P\"                     \"S17\"                     \n## [181] \"S17E\"                     \"S19\"                     \n## [183] \"S19E\"                     \"S24E\"                    \n## [185] \"S25\"                      \"S26\"                     \n## [187] \"S27AE\"                    \"S27E\"                    \n## [189] \"S28E/S33\"                 \"S30\"                     \n## [191] \"PelA\"                     \"RsgA\"                    \n## [193] \"HflX\"                     \"AlaS\"                    \n## [195] \"ArgS\"                     \"AsnS\"                    \n## [197] \"CysS\"                     \"GlnS\"                    \n## [199] \"GRS1\"                     \"HisS\"                    \n## [201] \"IleS\"                     \"LeuS\"                    \n## [203] \"LysS\"                     \"LysU\"                    \n## [205] \"MetG\"                     \"PheS\"                    \n## [207] \"SerS\"                     \"ProS\"                    \n## [209] \"ThrS\"                     \"TrpS\"                    \n## [211] \"TyrS\"                     \"ValS\"                    \n## [213] \"EIF1A\"                    \"InfB\"                    \n## [215] \"SUI1\"                     \"EIF2A\"                   \n## [217] \"EIF2B \"                   \"EIF2B-like\"              \n## [219] \"EIF2G\"                    \"EIF4A\"                   \n## [221] \"EIF5a\"                    \"EIF6\"                    \n## [223] \"Tuf\"                      \"EFB1\"                    \n## [225] \"FusA\"                     \"eRF1\"                    \n## [227] \"Rli1\"                     \"Csl4\"                    \n## [229] \"Rrp4\"                     \"Rrp41\"                   \n## [231] \"Rrp42\"                    \"Dph2\"                    \n## [233] \"Dph5\"                     \"Dph6\"                    \n## [235] \"Trm5\"                     \"TYW1\"                    \n## [237] \"TYW2\"                     \"TYW3\"                    \n## [239] \"EndA\"                     \"Fau1\"                    \n## [241] \"LigT\"                     \"Nob1\"                    \n## [243] \"RtcB\"                     \"Archaease\"               \n## [245] \"RCL1\"                     \"RnjA\"                    \n## [247] \"Rnz\"                      \"Rnp1\"                    \n## [249] \"Rnp2\"                     \"Rnp3\"                    \n## [251] \"Rnp4\"                     \"TgtA\"                    \n## [253] \"DnaJ\"                     \"DnaK\"                    \n## [255] \"GrpE\"                     \"GroL\"                    \n## [257] \"HtpX\"                     \"Hsp16\"                   \n## [259] \"Hsp19\"                    \"PsmA\"                    \n## [261] \"PRE1\"                     \"Pan1\"                    \n## [263] \"Pcm\"                      \"ThsA\"\n\n#define a order for metabolic pathways\nPathway_order <- as.character(unique(Genes_of_interest$pathway_2))\nPathway_order\n##  [1] \"DNA_Polymerase\"       \"RFs\"                  \"Helicase\"            \n##  [4] \"Topoisomerase\"        \"Repair_Recombination\" \"Methylase\"           \n##  [7] \"Chromatin\"            \"Cell_cycle\"           \"RNA_Polymerase\"      \n## [10] \"TFs\"                  \"Transcription\"        \"Ribosome\"            \n## [13] \"tRNA_synthetase\"      \"Exosome\"              \"Diphthamide_BS\"      \n## [16] \"Wybutosine_BS\"        \"Translation\"          \"Posttranslation\"     \n## [19] \"Mevalonate\"           \"Lipids\"\n```\n:::\n\n\n## Deal with annotation file\n\n### Read in table \n\nYou already here notice that this takes a bit longer and we just work with 46 bins. \nThis is a good reason to keep python in mind as depending on your computer the more memory heavy operations might get challenging. \nAnother alternative would be to run R on the clusters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#read in data and view it\nInput <- read.table(\"../data/UAP2_Annotation_table_u.txt\", sep=\"\\t\", header=T, fill=TRUE, quote = \"\")\nkable((head(Input)), format='markdown')\n```\n\n::: {.cell-output-display}\n|accession                      |BinID           |TaxString |NewContigID |OldContigId         |ContigIdMerge            | ContigNewLength|    GC|ProteinID      | ProteinGC| ProteinLength|Prokka                                                 |arcogs     |arcogs_geneID |arcogs_Description                                        |Pathway |arcogs_evalue |KO_hmm |e_value   |bit_score |bit_score_cutoff |Definition                                                                |confidence |PFAM_hmm |PFAM_description                        |Pfam_Evalue |TIRGR     |TIGR_description                                 |EC       |TIGR_Evalue |CAZy |CAZy_evalue |Description |TDBD_ID |TPDB_evalue |HydDB |Description.1 |HydDB_evalue |PFAM                                                                        |PFAMdescription                                                                                                                                                                                   |IPR              |IPRdescription                          |TopHit                                                                                        |E_value  |PecID |TaxID   |TaxString.1                                                                                                                     |\n|:------------------------------|:---------------|:---------|:-----------|:-------------------|:------------------------|---------------:|-----:|:--------------|---------:|-------------:|:------------------------------------------------------|:----------|:-------------|:---------------------------------------------------------|:-------|:-------------|:------|:---------|:---------|:----------------|:-------------------------------------------------------------------------|:----------|:--------|:---------------------------------------|:-----------|:---------|:------------------------------------------------|:--------|:-----------|:----|:-----------|:-----------|:-------|:-----------|:-----|:-------------|:------------|:---------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------|:---------------------------------------|:---------------------------------------------------------------------------------------------|:--------|:-----|:-------|:-------------------------------------------------------------------------------------------------------------------------------|\n|NIOZ119_mb_b5_2-PJFDGLDN_00010 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_1  |NIOZ119_sc1610046_1 |NIOZ119_mb_b5_2_contig_1 |            2539| 0.432|PJFDGLDN_00010 |     0.094|           350|Digeranylgeranylglycerophospholipid reductase          |arCOG00570 |-             |\"Geranylgeranyl_reductase,_flavoprotein\"                  |I       |2.80E-75      |K17830 |2.10E-69  |243.3     |246.87           |digeranylgeranylglycerophospholipid_reductase_[EC:1.3.1.101_1.3.7.11]     |-          |PF01494  |FAD_binding_domain                      |5.90E-09    |TIGR02032 |geranylgeranyl_reductase_family                  |1.3.1.-  |1.40E-49    |-    |-           |-           |-       |-           |-     |-             |-            |IPR036188;_IPR002938                                                        |FAD/NAD(P)-binding_domain_superfamily;_FAD-binding_domain                                                                                                                                         |PF01494          |FAD_binding_domain                      |KYK22416.1_hypothetical_protein_AYK24_02275_[Thermoplasmatales_archaeon_SG8-52-4]             |2.80E-58 |36.5  |1803819 |\"Archaea,Euryarchaeota,Thermoplasmata,Thermoplasmatales,none,none,Thermoplasmatales_archaeon_SG8-52-4\"                          |\n|NIOZ119_mb_b5_2-PJFDGLDN_00020 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_1  |NIOZ119_sc1610046_1 |NIOZ119_mb_b5_2_contig_1 |            2539| 0.432|PJFDGLDN_00020 |     0.057|           105|hypothetical protein                                   |-          |-             |-                                                         |-       |-             |-      |-         |-         |-                |-                                                                         |-          |-        |-                                       |-           |-         |-                                                |-        |-           |-    |-           |-           |-       |-           |-     |-             |-            |-                                                                           |-                                                                                                                                                                                                 |-                |-                                       |-                                                                                             |-        |-     |-       |-                                                                                                                               |\n|NIOZ119_mb_b5_2-PJFDGLDN_00030 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_1  |NIOZ119_sc1610046_1 |NIOZ119_mb_b5_2_contig_1 |            2539| 0.432|PJFDGLDN_00030 |     0.092|           304|tRNA-2-methylthio-N(6)-dimethylallyladenosine synthase |arCOG01358 |MiaB          |2-methylthioadenine_synthetase                            |J       |5.80E-90      |K15865 |1.20E-109 |375.8     |343.7            |threonylcarbamoyladenosine_tRNA_methylthiotransferase_CDKAL1_[EC:2.8.4.5] |high_score |PF04055  |Radical_SAM_superfamily                 |2.60E-21    |TIGR01578 |\"MiaB-like_tRNA_modifying_enzyme,_archaeal-type\" |-        |1.70E-104   |-    |-           |-           |-       |-           |-     |-             |-            |IPR005839;_IPR002792;_IPR006466;_IPR006638;_IPR007197;_IPR020612;_IPR023404 |\"Methylthiotransferase;_TRAM_domain;_MiaB-like_tRNA_modifying_enzyme,_archaeal-type;_Elp3/MiaB/NifB;_Radical_SAM;_Methylthiotransferase,_conserved_site;_Radical_SAM,_alpha/beta_horseshoe\"       |PF01938;_PF04055 |TRAM_domain;_Radical_SAM_superfamily    |OIO63284.1_hypothetical_protein_AUJ83_01460_[Candidatus_Woesearchaeota_archaeon_CG1_02_33_12] |8.20E-91 |55.6  |1805422 |\"Archaea,Candidatus_Woesearchaeota,none,none,none,none,Candidatus_Woesearchaeota_archaeon_CG1_02_33_12\"                         |\n|NIOZ119_mb_b5_2-PJFDGLDN_00040 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_2  |NIOZ119_sc560284_1  |NIOZ119_mb_b5_2_contig_2 |            4191| 0.456|PJFDGLDN_00040 |     0.065|            92|Enolase                                                |arCOG01169 |Eno           |Enolase                                                   |G       |4.00E-26      |K01689 |5.10E-20  |81        |48.73            |enolase_[EC:4.2.1.11]                                                     |high_score |PF00113  |\"Enolase,_C-terminal_TIM_barrel_domain\" |1.20E-20    |TIGR01060 |phosphopyruvate_hydratase                        |4.2.1.11 |1.10E-25    |-    |-           |-           |-       |-           |-     |-             |-            |IPR020810;_IPR036849;_IPR000941;_IPR020809                                  |\"Enolase,_C-terminal_TIM_barrel_domain;_Enolase-like,_C-terminal_domain_superfamily;_Enolase;_Enolase,_conserved_site\"                                                                            |PF00113          |\"Enolase,_C-terminal_TIM_barrel_domain\" |BAW30993.1_2-phosphoglycerate_dehydratase_[Methanothermobacter_sp._MT-2]                      |3.80E-23 |70.7  |1898379 |\"Archaea,Euryarchaeota,Methanobacteria,Methanobacteriales,Methanobacteriaceae,Methanothermobacter,Methanothermobacter_sp._MT-2\" |\n|NIOZ119_mb_b5_2-PJFDGLDN_00050 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_2  |NIOZ119_sc560284_1  |NIOZ119_mb_b5_2_contig_2 |            4191| 0.456|PJFDGLDN_00050 |     0.059|           218|30S ribosomal protein S2                               |arCOG04245 |RpsB          |Ribosomal_protein_S2                                      |J       |8.90E-64      |K02998 |1.60E-46  |167.8     |210.97           |small_subunit_ribosomal_protein_SAe                                       |-          |PF00318  |Ribosomal_protein_S2                    |7.00E-24    |TIGR01012 |ribosomal_protein_uS2                            |-        |1.00E-72    |-    |-           |-           |-       |-           |-     |-             |-            |IPR005707;_IPR023454;_IPR023591;_IPR018130;_IPR001865                       |\"Ribosomal_protein_S2,_eukaryotic/archaeal;_Ribosomal_protein_S2,_archaeal;_Ribosomal_protein_S2,_flavodoxin-like_domain_superfamily;_Ribosomal_protein_S2,_conserved_site;_Ribosomal_protein_S2\" |PF00318          |Ribosomal_protein_S2                    |A0B6E5.1_RecName:_Full=30S_ribosomal_protein_S2                                               |1.20E-56 |52.8  |349307  |\"Archaea,Euryarchaeota,Methanomicrobia,Methanosarcinales,Methanotrichaceae,Methanothrix,Methanothrix_thermoacetophila\"          |\n|NIOZ119_mb_b5_2-PJFDGLDN_00060 |NIOZ119_mb_b5_2 |UAP2      |PJFDGLDN_2  |NIOZ119_sc560284_1  |NIOZ119_mb_b5_2_contig_2 |            4191| 0.456|PJFDGLDN_00060 |     0.100|           280|hypothetical protein                                   |arCOG01728 |Mho1          |\"Predicted_class_III_extradiol_dioxygenase,_MEMO1_family\" |R       |8.80E-74      |K06990 |1.40E-72  |253.3     |47               |MEMO1_family_protein                                                      |high_score |PF01875  |Memo-like_protein                       |4.50E-77    |TIGR04336 |AmmeMemoRadiSam_system_protein_B                 |-        |5.30E-91    |-    |-           |-           |-       |-           |-     |-             |-            |IPR002737                                                                   |MEMO1_family                                                                                                                                                                                      |PF01875          |Memo-like_protein                       |OYT50994.1_AmmeMemoRadiSam_system_protein_B_[Candidatus_Bathyarchaeota_archaeon_ex4484_135]   |1.30E-66 |47    |2012509 |\"Archaea,Candidatus_Bathyarchaeota,none,none,none,none,Candidatus_Bathyarchaeota_archaeon_ex4484_135\"                           |\n:::\n:::\n\n\n### Make a mapping file that links all annotation IDs to their descriptions \n\nWhat we do:\n\n- separate columns we are interested in for each Database of interest, i.e. arCOGs, and remove duplicate rows by using ``unique()``\n- change the column names using ``colnames()``. Here, we want to make sure that all the 6 new objects we generate have the same columns\n- combine our 6 dataframes using ``rbind()``. For this to work we need the same number of columns.\n\nIn theory that would be a nice example for a loop as well, since we do exactly the same thing for 6x.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#generate Description table for all DBs of interest\nArcogs_Description <- unique(Input[,c(\"arcogs\",\"arcogs_Description\" )])\ncolnames(Arcogs_Description) <- c(\"Gene\", \"Description\")\nkable((head(Arcogs_Description)), format='markdown')\n```\n\n::: {.cell-output-display}\n|Gene       |Description                                               |\n|:----------|:---------------------------------------------------------|\n|arCOG00570 |\"Geranylgeranyl_reductase,_flavoprotein\"                  |\n|-          |-                                                         |\n|arCOG01358 |2-methylthioadenine_synthetase                            |\n|arCOG01169 |Enolase                                                   |\n|arCOG04245 |Ribosomal_protein_S2                                      |\n|arCOG01728 |\"Predicted_class_III_extradiol_dioxygenase,_MEMO1_family\" |\n:::\n\n```{.r .cell-code}\n\nKOs_Description <- Input[,c(\"KO_hmm\",\"Definition\" )]\ncolnames(KOs_Description) <- c(\"Gene\", \"Description\")\nkable((head(KOs_Description)), format='markdown')\n```\n\n::: {.cell-output-display}\n|Gene   |Description                                                               |\n|:------|:-------------------------------------------------------------------------|\n|K17830 |digeranylgeranylglycerophospholipid_reductase_[EC:1.3.1.101_1.3.7.11]     |\n|-      |-                                                                         |\n|K15865 |threonylcarbamoyladenosine_tRNA_methylthiotransferase_CDKAL1_[EC:2.8.4.5] |\n|K01689 |enolase_[EC:4.2.1.11]                                                     |\n|K02998 |small_subunit_ribosomal_protein_SAe                                       |\n|K06990 |MEMO1_family_protein                                                      |\n:::\n\n```{.r .cell-code}\n\nPfam_Description <- unique(Input[,c(\"PFAM_hmm\",\"PFAM_description\" )])\ncolnames(Pfam_Description) <- c(\"Gene\", \"Description\")\nkable((head(Pfam_Description)), format='markdown')\n```\n\n::: {.cell-output-display}\n|Gene    |Description                             |\n|:-------|:---------------------------------------|\n|PF01494 |FAD_binding_domain                      |\n|-       |-                                       |\n|PF04055 |Radical_SAM_superfamily                 |\n|PF00113 |\"Enolase,_C-terminal_TIM_barrel_domain\" |\n|PF00318 |Ribosomal_protein_S2                    |\n|PF01875 |Memo-like_protein                       |\n:::\n\n```{.r .cell-code}\n\nTIRGR_Description <- unique(Input[,c(\"TIRGR\",\"TIGR_description\" )])\ncolnames(TIRGR_Description) <- c(\"Gene\", \"Description\")\nkable((head(TIRGR_Description)), format='markdown')\n```\n\n::: {.cell-output-display}\n|Gene      |Description                                      |\n|:---------|:------------------------------------------------|\n|TIGR02032 |geranylgeranyl_reductase_family                  |\n|-         |-                                                |\n|TIGR01578 |\"MiaB-like_tRNA_modifying_enzyme,_archaeal-type\" |\n|TIGR01060 |phosphopyruvate_hydratase                        |\n|TIGR01012 |ribosomal_protein_uS2                            |\n|TIGR04336 |AmmeMemoRadiSam_system_protein_B                 |\n:::\n\n```{.r .cell-code}\n\nCazy_Description <- unique(Input[,c(\"CAZy\",\"Description\" )])\ncolnames(Cazy_Description) <- c(\"Gene\", \"Description\")\nkable((head(Cazy_Description)), format='markdown')\n```\n\n::: {.cell-output-display}\n|     |Gene                |Description|\n|:----|:-------------------||\n|1    |-                   ||\n|81   |GH119               |__alpha-amylase|\n|245  |GT4                 |\"__sucrose_synthase_(EC_2.4.1.13);_sucrose-phosphate_synthase_(EC_2.4.1.14);_alpha-glucosyltransferase_(EC_2.4.1.52);_lipopolysaccharide_N-acetylglucosaminyltransferase_(EC_2.4.1.56);_phosphatidylinositol_alpha-mannosyltransferase_(EC_2.4.1.57);_GDP-Man:_Man1GlcNAc2-PP-dolichol_alpha-1,3-mannosyltransferase_(EC_2.4.1.132);_GDP-Man:_Man3GlcNAc2-PP-dolichol/Man4GlcNAc2-PP-dolichol_alpha-1,2-mannosyltransferase_(EC_2.4.1.131);_digalactosyldiacylglycerol_synthase_(EC_2.4.1.141);_1,2-diacylglycerol_3-glucosyltransferase_(EC_2.4.1.157);__diglucosyl_diacylglycerol_synthase_(EC_2.4.1.208);_trehalose_phosphorylase_(EC_2.4.1.231);_NDP-Glc:_alpha-glucose_alpha-glucosyltransferase_/_alpha,alpha-trehalose_synthase_(EC_2.4.1.245);_GDP-Man:_Man2GlcNAc2-PP-dolichol_alpha-1,6-mannosyltransferase_(EC_2.4.1.257);_UDP-GlcNAc:_2-deoxystreptamine_alpha-N-acetylglucosaminyltransferase_(EC_2.4.1.283);_UDP-GlcNAc:_ribostamycin_alpha-N-acetylglucosaminyltransferase_(EC_2.4.1.285);_UDP-Gal_alpha-galactosyltransferase_(EC_2.4.1.-);_UDP-Xyl_alpha-xylosyltransferase_(EC_2.4.2.-);_UDP-GlcA_alpha-glucuronyltransferase_(EC_2.4.1.-);_UDP-Glc_alpha-glucosyltransferase_(EC_2.4.1.-);_UDP-GalNAc:_GalNAc-PP-Und_alpha-1,3-N-acetylgalactosaminyltransferase_(EC_2.4.1.306);_UDP-GalNAc:_N,N'-diacetylbacillosaminyl-PP-Und_alpha-1,3-N-acetylgalactosaminyltransferase_(EC_2.4.1.290);_ADP-dependent_alpha-maltose-1-phosphate_synthase_(2.4.1.342)\" |\n|291  |GT2_Glycos_transf_2 ||\n|613  |GT83                |__undecaprenyl_phosphate-alpha-L-Ara4N:_4-amino-4-deoxy-beta-L-arabinosyltransferase_(EC_2.4.2.43);_dodecaprenyl_phosphate-beta-galacturonic_acid:_lipopolysaccharide_core_alpha-galacturonosyl_transferase|\n|1357 |GT66                |__dolichyl-diphosphooligosaccharide<c3><83><c2><a2><c3><a2><e2><80><9a><c2><ac><c3><a2><e2><82><ac><c2><9d>protein_glycotransferase_(EC_2.4.99.18);_undecaprenyl-diphosphooligosaccharide<c3><83><c2><a2><c3><a2><e2><80><9a><c2><ac><c3><a2><e2><82><ac><c2><9d>protein_glycotransferase|\n:::\n\n```{.r .cell-code}\n\nHydDB_Description <- unique(Input[,c(\"Description.1\",\"Description.1\" )])\ncolnames(HydDB_Description) <- c(\"Gene\", \"Description\")\nkable((head(HydDB_Description)), format='markdown')\n```\n\n::: {.cell-output-display}\n|      |Gene            |Description     |\n|:-----|:---------------|:---------------|\n|1     |-               |-               |\n|4787  |[FeFe]_Group_A1 |[FeFe]_Group_A1 |\n|18935 |[NiFe]_Group_4g |[NiFe]_Group_4g |\n|19355 |[NiFe]_Group_3b |[NiFe]_Group_3b |\n|37081 |[FeFe]_Group_C3 |[FeFe]_Group_C3 |\n:::\n\n```{.r .cell-code}\n\n#make a file with a description of all the ids for each search\nAll_Genes_Description <- rbind(Arcogs_Description,KOs_Description,Pfam_Description,TIRGR_Description, Cazy_Description, HydDB_Description)\n```\n:::\n\n\n\n### Parse table to make it easier to work with it\n\nHere we:\n\n- Subset the data for the columns we are interested in. Esp. for larger dataframes this will make the operations a bit quicker. For very large dataframes, i.e. 5000 genomes, it might be better to switch to python\n- Convert data from wide to long format\n- Clean factors. After subsetting often factors are not removed, we clean them up in that step\n\nInfo:\n\n**Converting a wide to a long dataframe**\n\n- Wide dataframe: The Input data in this example is considered as a wide dataframe. I.e. all the gene IDs we are interested in are spread out into different columns\n- Long dataframe: The gene IDs we are interested in are found all in the same column. Important, most R functions work with long dataframes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#print the column names to subset our datatable\ncolnames(Input)\n##  [1] \"accession\"          \"BinID\"              \"TaxString\"         \n##  [4] \"NewContigID\"        \"OldContigId\"        \"ContigIdMerge\"     \n##  [7] \"ContigNewLength\"    \"GC\"                 \"ProteinID\"         \n## [10] \"ProteinGC\"          \"ProteinLength\"      \"Prokka\"            \n## [13] \"arcogs\"             \"arcogs_geneID\"      \"arcogs_Description\"\n## [16] \"Pathway\"            \"arcogs_evalue\"      \"KO_hmm\"            \n## [19] \"e_value\"            \"bit_score\"          \"bit_score_cutoff\"  \n## [22] \"Definition\"         \"confidence\"         \"PFAM_hmm\"          \n## [25] \"PFAM_description\"   \"Pfam_Evalue\"        \"TIRGR\"             \n## [28] \"TIGR_description\"   \"EC\"                 \"TIGR_Evalue\"       \n## [31] \"CAZy\"               \"CAZy_evalue\"        \"Description\"       \n## [34] \"TDBD_ID\"            \"TPDB_evalue\"        \"HydDB\"             \n## [37] \"Description.1\"      \"HydDB_evalue\"       \"PFAM\"              \n## [40] \"PFAMdescription\"    \"IPR\"                \"IPRdescription\"    \n## [43] \"TopHit\"             \"E_value\"            \"PecID\"             \n## [46] \"TaxID\"              \"TaxString.1\"\n\n#only keep the columns we actually want to work with\nInput_subset = Input[,c('BinID','accession','arcogs','KO_hmm','PFAM_hmm','TIRGR','CAZy','Description.1' )]\nkable((head(Input_subset)), format='markdown')\n```\n\n::: {.cell-output-display}\n|BinID           |accession                      |arcogs     |KO_hmm |PFAM_hmm |TIRGR     |CAZy |Description.1 |\n|:---------------|:------------------------------|:----------|:------|:--------|:---------|:----|:-------------|\n|NIOZ119_mb_b5_2 |NIOZ119_mb_b5_2-PJFDGLDN_00010 |arCOG00570 |K17830 |PF01494  |TIGR02032 |-    |-             |\n|NIOZ119_mb_b5_2 |NIOZ119_mb_b5_2-PJFDGLDN_00020 |-          |-      |-        |-         |-    |-             |\n|NIOZ119_mb_b5_2 |NIOZ119_mb_b5_2-PJFDGLDN_00030 |arCOG01358 |K15865 |PF04055  |TIGR01578 |-    |-             |\n|NIOZ119_mb_b5_2 |NIOZ119_mb_b5_2-PJFDGLDN_00040 |arCOG01169 |K01689 |PF00113  |TIGR01060 |-    |-             |\n|NIOZ119_mb_b5_2 |NIOZ119_mb_b5_2-PJFDGLDN_00050 |arCOG04245 |K02998 |PF00318  |TIGR01012 |-    |-             |\n|NIOZ119_mb_b5_2 |NIOZ119_mb_b5_2-PJFDGLDN_00060 |arCOG01728 |K06990 |PF01875  |TIGR04336 |-    |-             |\n:::\n\n```{.r .cell-code}\n\n#convert dataframe from wide to long\nInput_long <- reshape2::melt(Input_subset,  id=c(\"accession\",\"BinID\"))\n\n#give informative headers\ncolnames(Input_long) <- c(\"accession\", \"BinID\", \"DB\", \"gene\")\n\n#clean factors, to remove issues when counting\nInput_long$gene <- as.factor(Input_long$gene)\nkable((head(Input_long)), format='markdown')\n```\n\n::: {.cell-output-display}\n|accession                      |BinID           |DB     |gene       |\n|:------------------------------|:---------------|:------|:----------|\n|NIOZ119_mb_b5_2-PJFDGLDN_00010 |NIOZ119_mb_b5_2 |arcogs |arCOG00570 |\n|NIOZ119_mb_b5_2-PJFDGLDN_00020 |NIOZ119_mb_b5_2 |arcogs |-          |\n|NIOZ119_mb_b5_2-PJFDGLDN_00030 |NIOZ119_mb_b5_2 |arcogs |arCOG01358 |\n|NIOZ119_mb_b5_2-PJFDGLDN_00040 |NIOZ119_mb_b5_2 |arcogs |arCOG01169 |\n|NIOZ119_mb_b5_2-PJFDGLDN_00050 |NIOZ119_mb_b5_2 |arcogs |arCOG04245 |\n|NIOZ119_mb_b5_2-PJFDGLDN_00060 |NIOZ119_mb_b5_2 |arcogs |arCOG01728 |\n:::\n:::\n\n\n## Make count tables\n\n### Generate a count table for our genomes of interest\n\nNow we want to count, how often does a genome (i.e. NIOZ134_mb_b41_2) have a gene. I.e. how often do we want arCOG00570, arCOG01358, ...\n\n##### Do this via  a loop (not executed, just an example)\n\nNotice: \n\nSince we run this chunk with ``, eval = FALSE`` we can still see the code but it is not executed.\nThis is done because some computations take some time, which we do not want to spend, but I still want to show the code to give some alternative examples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#count the number of proteins for each genome of interest\ny <- c()\nfor (i in Bin_order) {\n  x <-  table(subset(Input_long, BinID %in% paste(i))$gene)\n  y <- cbind (y,x)\n}\n\n#clean-up the table\nCounts_Table_loop <- y\ncolnames(Counts_Table_loop) <- Bin_order\nCounts_Table_loop <- as.data.frame(Counts_Table_loop)\nkable((head(Counts_Table_loop)), format='markdown')\n\n#the '-' (=not identified genes) is also counted and listed in the first column and removed at this step\nCounts_Table_loop <- Counts_Table_loop[-1,]\nkable((head(Counts_Table_loop)), format='markdown')\n\n```\n:::\n\n\n##### Do this via ddply ((not executed, just an example))\n\nNew functions:\n\n- ``spread()`` = converts our long to a wide dataframe by using the BinIDs as new column names, the count table as values to populate our dataframe and with missing values we print a 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#count data and clean header\nCounts_Table_long <- ddply(Input_long, .(BinID, gene), summarize, GeneCount = length(gene))\ncolnames(Counts_Table_long) <- c(\"BinID\", \"geneID\", \"count\")\nkable((head(Counts_Table_long)), format='markdown')\n\n#transform to wide format, with fill = 0 instead of a NA we add a 0\nCounts_Table_wide <- spread(Counts_Table_long, BinID, count, fill = 0 )\n\n#view data\nkable((head(Counts_Table_wide)), format='markdown')\n\n```\n:::\n\n\n\n##### Do this via tidyr (usually a bit faster than ddplyr, which is why we use this way)\n\nHere, we use the `` %>%`` symbol again:\nIn the following example, the a subset of the Input_long data (only 3 columns, not the whole dataframe) gets passed to ``count()``\n\nNew functions:\n\n- ``count()`` = A function of the dplyr package. Here, we count the unique protein IDs grouped by BinID and gene (i.e. roughly equivalent to the columns we want to keep)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#count data and clean header\nCounts_Table_long <- Input_long[,c('accession', 'BinID','gene')] %>% count(BinID, gene, sort = FALSE)\ncolnames(Counts_Table_long) <- c(\"BinID\", \"geneID\", \"count\")\nkable((head(Counts_Table_long)), format='markdown')\n```\n\n::: {.cell-output-display}\n|BinID         |geneID              | count|\n|:-------------|:-------------------|-----:|\n|GCA_002494525 |-                   |  2350|\n|GCA_002494525 |GT2_Glyco_tranf_2_3 |     1|\n|GCA_002494525 |GT2_Glycos_transf_2 |     2|\n|GCA_002494525 |GT4                 |     2|\n|GCA_002494525 |GT66                |     1|\n|GCA_002494525 |GT83                |     1|\n:::\n:::\n\n\n\nWhen viewing the data we also see that proteins with no annotations are counted (the minus symbol), since we do not care about this at this stage, lets remove everything with a minus symbol\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#delete rows with a minus symbol\nCounts_Table_long <- Counts_Table_long[Counts_Table_long$geneID!= \"-\", ]\n\n#clean factors\nCounts_Table_long$geneID <- factor(Counts_Table_long$geneID)\n\n#view data\nkable((head(Counts_Table_long)), format='markdown')\n```\n\n::: {.cell-output-display}\n|   |BinID         |geneID              | count|\n|:--|:-------------|:-------------------|-----:|\n|2  |GCA_002494525 |GT2_Glyco_tranf_2_3 |     1|\n|3  |GCA_002494525 |GT2_Glycos_transf_2 |     2|\n|4  |GCA_002494525 |GT4                 |     2|\n|5  |GCA_002494525 |GT66                |     1|\n|6  |GCA_002494525 |GT83                |     1|\n|7  |GCA_002494525 |K00012              |     1|\n:::\n:::\n\n\nNow, we can convert the long to a wide table, since this format is a bit easier to read in excel later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#transform to wide format, with fill = 0 instead of a NA we add a 0\nCounts_Table_wide <- spread(Counts_Table_long, BinID, count, fill = 0 )\nkable((head(Counts_Table_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|geneID              | GCA_002494525| GCA_002495465| GCA_002501985| GCA_002502135| NIOZ119_mb_b5_2| NIOZ120_mb_b229_2| NIOZ121_cc_b94_2| NIOZ121_mb_b48_2| NIOZ122_mb_b305_2| NIOZ122_mb_b319_2| NIOZ123_bs_b392_2| NIOZ123_bs_b5_2| NIOZ124_cc_b247_2| NIOZ124_mb_b130_2| NIOZ125_cc_b75_2| NIOZ125_mb_b178_2| NIOZ125_mb_b254_2| NIOZ126_mb_b137_2| NIOZ126_mb_b304_2| NIOZ126_mb_b401_2| NIOZ127_mb_b161_2| NIOZ127_mb_b282_2| NIOZ129_mb_b254_2| NIOZ129_mb_b262_2| NIOZ132_cc_b149_2| NIOZ132_cc_b51_2| NIOZ132_mb_b198_2| NIOZ132_mb_b260_2| NIOZ132_mb_b282_2| NIOZ132_mx_b314_2| NIOZ134_cc_b149_2| NIOZ134_mb_b293_2| NIOZ134_mb_b361_2| NIOZ134_mb_b41_2| NIOZ134_mx_b281_2| NIOZ136_cc_b15_2| NIOZ136_mb_b104_2| NIOZ136_mb_b226_2| NIOZ136_mb_b335_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| SRR4028224_bin17| SRR5007147_bin71| U_76725|\n|:-------------------|-------------:|-------------:|-------------:|-------------:|---------------:|-----------------:|----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|----------------:|----------------:|-------:|\n|CBM44               |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 1|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 1|                 0|                 0|                 0|                 0|                0|                 0|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|CE4                 |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 2|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH119               |             0|             0|             0|             1|               1|                 1|                0|                1|                 0|                 0|                 1|               0|                 0|                 0|                1|                 1|                 0|                 0|                 0|                 0|                 0|                 1|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 1|                 0|                 1|                 0|                0|                 0|                0|                 0|                 1|                 1|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH130               |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH95                |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GT2_Glyco_tranf_2_3 |             1|             1|             1|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                1|                0|       1|\n:::\n:::\n\n\nAlso, we want our geneIDs to be the new rownames and we do this by using the ``rownames()`` functions.\nWe do this since some functions do not like to have characters in their dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#change the rownames\nrownames(Counts_Table_wide) <- Counts_Table_wide$geneID\n\n#view data\nkable((head(Counts_Table_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    |geneID              | GCA_002494525| GCA_002495465| GCA_002501985| GCA_002502135| NIOZ119_mb_b5_2| NIOZ120_mb_b229_2| NIOZ121_cc_b94_2| NIOZ121_mb_b48_2| NIOZ122_mb_b305_2| NIOZ122_mb_b319_2| NIOZ123_bs_b392_2| NIOZ123_bs_b5_2| NIOZ124_cc_b247_2| NIOZ124_mb_b130_2| NIOZ125_cc_b75_2| NIOZ125_mb_b178_2| NIOZ125_mb_b254_2| NIOZ126_mb_b137_2| NIOZ126_mb_b304_2| NIOZ126_mb_b401_2| NIOZ127_mb_b161_2| NIOZ127_mb_b282_2| NIOZ129_mb_b254_2| NIOZ129_mb_b262_2| NIOZ132_cc_b149_2| NIOZ132_cc_b51_2| NIOZ132_mb_b198_2| NIOZ132_mb_b260_2| NIOZ132_mb_b282_2| NIOZ132_mx_b314_2| NIOZ134_cc_b149_2| NIOZ134_mb_b293_2| NIOZ134_mb_b361_2| NIOZ134_mb_b41_2| NIOZ134_mx_b281_2| NIOZ136_cc_b15_2| NIOZ136_mb_b104_2| NIOZ136_mb_b226_2| NIOZ136_mb_b335_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| SRR4028224_bin17| SRR5007147_bin71| U_76725|\n|:-------------------|:-------------------|-------------:|-------------:|-------------:|-------------:|---------------:|-----------------:|----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|----------------:|----------------:|-------:|\n|CBM44               |CBM44               |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 1|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 1|                 0|                 0|                 0|                 0|                0|                 0|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|CE4                 |CE4                 |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 2|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH119               |GH119               |             0|             0|             0|             1|               1|                 1|                0|                1|                 0|                 0|                 1|               0|                 0|                 0|                1|                 1|                 0|                 0|                 0|                 0|                 0|                 1|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 1|                 0|                 1|                 0|                0|                 0|                0|                 0|                 1|                 1|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH130               |GH130               |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH95                |GH95                |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GT2_Glyco_tranf_2_3 |GT2_Glyco_tranf_2_3 |             1|             1|             1|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                1|                0|       1|\n:::\n:::\n\n\n\nWhen we change the rownames and view the data, we see that the geneID is now both in the rownames as well as the first column. \nSince that is a bit messy, we next remove the first column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#delete the first column\nCounts_Table_wide <- Counts_Table_wide[,-1]\nkable((head(Counts_Table_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    | GCA_002494525| GCA_002495465| GCA_002501985| GCA_002502135| NIOZ119_mb_b5_2| NIOZ120_mb_b229_2| NIOZ121_cc_b94_2| NIOZ121_mb_b48_2| NIOZ122_mb_b305_2| NIOZ122_mb_b319_2| NIOZ123_bs_b392_2| NIOZ123_bs_b5_2| NIOZ124_cc_b247_2| NIOZ124_mb_b130_2| NIOZ125_cc_b75_2| NIOZ125_mb_b178_2| NIOZ125_mb_b254_2| NIOZ126_mb_b137_2| NIOZ126_mb_b304_2| NIOZ126_mb_b401_2| NIOZ127_mb_b161_2| NIOZ127_mb_b282_2| NIOZ129_mb_b254_2| NIOZ129_mb_b262_2| NIOZ132_cc_b149_2| NIOZ132_cc_b51_2| NIOZ132_mb_b198_2| NIOZ132_mb_b260_2| NIOZ132_mb_b282_2| NIOZ132_mx_b314_2| NIOZ134_cc_b149_2| NIOZ134_mb_b293_2| NIOZ134_mb_b361_2| NIOZ134_mb_b41_2| NIOZ134_mx_b281_2| NIOZ136_cc_b15_2| NIOZ136_mb_b104_2| NIOZ136_mb_b226_2| NIOZ136_mb_b335_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| SRR4028224_bin17| SRR5007147_bin71| U_76725|\n|:-------------------|-------------:|-------------:|-------------:|-------------:|---------------:|-----------------:|----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|----------------:|----------------:|-------:|\n|CBM44               |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 1|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 1|                 0|                 0|                 0|                 0|                0|                 0|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|CE4                 |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 2|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH119               |             0|             0|             0|             1|               1|                 1|                0|                1|                 0|                 0|                 1|               0|                 0|                 0|                1|                 1|                 0|                 0|                 0|                 0|                 0|                 1|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 1|                 0|                 1|                 0|                0|                 0|                0|                 0|                 1|                 1|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH130               |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GH95                |             0|             0|             0|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                0|                0|       0|\n|GT2_Glyco_tranf_2_3 |             1|             1|             1|             0|               0|                 0|                0|                0|                 0|                 0|                 0|               0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                0|                 0|                 0|                 0|                  0|                 0|                  0|                  0|                1|                0|       1|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#order our data so that the bins start first with the bins from the basal group\nCounts_Table_wide <- Counts_Table_wide[,Bin_order]\n\n#view data\nkable((head(Counts_Table_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    | NIOZ132_cc_b51_2| NIOZ134_mx_b281_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| GCA_002494525| GCA_002495465| GCA_002501985| SRR4028224_bin17| SRR5007147_bin71| U_76725| NIOZ124_cc_b247_2| NIOZ125_mb_b254_2| NIOZ129_mb_b262_2| NIOZ126_mb_b401_2| NIOZ122_mb_b319_2| NIOZ134_mb_b41_2| NIOZ132_mb_b282_2| NIOZ127_mb_b161_2| NIOZ123_bs_b5_2| NIOZ121_cc_b94_2| NIOZ136_cc_b15_2| GCA_002502135| NIOZ134_mb_b293_2| NIOZ132_mb_b260_2| NIOZ126_mb_b137_2| NIOZ129_mb_b254_2| NIOZ127_mb_b282_2| NIOZ122_mb_b305_2| NIOZ136_mb_b335_2| NIOZ132_mb_b198_2| NIOZ136_mb_b104_2| NIOZ125_mb_b178_2| NIOZ121_mb_b48_2| NIOZ134_cc_b149_2| NIOZ134_mb_b361_2| NIOZ136_mb_b226_2| NIOZ123_bs_b392_2| NIOZ124_mb_b130_2| NIOZ132_cc_b149_2| NIOZ125_cc_b75_2| NIOZ132_mx_b314_2| NIOZ120_mb_b229_2| NIOZ126_mb_b304_2| NIOZ119_mb_b5_2|\n|:-------------------|----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|-------------:|-------------:|-------------:|----------------:|----------------:|-------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|---------------:|----------------:|----------------:|-------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|\n|CBM44               |                0|                 0|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 1|                0|                 1|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|CE4                 |                0|                 2|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|GH119               |                0|                 0|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             1|                 1|                 0|                 0|                 0|                 1|                 0|                 1|                 0|                 0|                 1|                1|                 0|                 0|                 1|                 1|                 0|                 0|                1|                 1|                 1|                 0|               1|\n|GH130               |                0|                 1|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|GH95                |                0|                 1|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|GT2_Glyco_tranf_2_3 |                0|                 0|                  0|                 0|                  0|                  0|             1|             1|             1|                1|                0|       1|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n:::\n:::\n\n\nIf you run these three examples yourself, take not how different the speed is.\n\n\n### Generate a count table for our clusters of interest\n\nSame as above, but now we want to know for our 4 aquifer genomes, how many have Gene Xx and show this as percent. I.e. if 1/4 genomes have a gene, then 25% have it.\n\nFirst, lets merge in our taxa info into our count table, we need this to summarize our data by clusters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#merge the count table with mapping file to add in the taxa info (might take a while depending on size)\nCounts_Table_long_Tax <- merge(Counts_Table_long, design_2[,c(\"BinID\", \"ClusterName\", \"NrGenomes\")], by = \"BinID\")\nkable((head(Counts_Table_long_Tax)), format='markdown')\n```\n\n::: {.cell-output-display}\n|BinID         |geneID              | count|ClusterName | NrGenomes|\n|:-------------|:-------------------|-----:|:-----------|---------:|\n|GCA_002494525 |GT2_Glyco_tranf_2_3 |     1|Marine (6)  |         6|\n|GCA_002494525 |GT2_Glycos_transf_2 |     2|Marine (6)  |         6|\n|GCA_002494525 |GT4                 |     2|Marine (6)  |         6|\n|GCA_002494525 |GT66                |     1|Marine (6)  |         6|\n|GCA_002494525 |GT83                |     1|Marine (6)  |         6|\n|GCA_002494525 |K00012              |     1|Marine (6)  |         6|\n:::\n:::\n\n\nNext, whenever we have a value higher than one, we replace it with 1. \nThat way we deal with our data like it is a presence/absence data.\nI.e. 0 = no genes present & 1 = gene present\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#convert counts to presence/absence matrix (just using 0/1) (this is needed to calculate the percentage across clusters)\nCounts_Table_long_Tax$count[Counts_Table_long_Tax$count > 1] <- 1\nkable((head(Counts_Table_long_Tax)), format='markdown')\n```\n\n::: {.cell-output-display}\n|BinID         |geneID              | count|ClusterName | NrGenomes|\n|:-------------|:-------------------|-----:|:-----------|---------:|\n|GCA_002494525 |GT2_Glyco_tranf_2_3 |     1|Marine (6)  |         6|\n|GCA_002494525 |GT2_Glycos_transf_2 |     1|Marine (6)  |         6|\n|GCA_002494525 |GT4                 |     1|Marine (6)  |         6|\n|GCA_002494525 |GT66                |     1|Marine (6)  |         6|\n|GCA_002494525 |GT83                |     1|Marine (6)  |         6|\n|GCA_002494525 |K00012              |     1|Marine (6)  |         6|\n:::\n:::\n\n\nNow, we can use tidyr to count of how many genomes in a cluster have a gene. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#count data and clean header\nCounts_Table_long_Tax_sum <- Counts_Table_long_Tax[,c('ClusterName', 'geneID','NrGenomes', 'count')] %>% count(ClusterName, geneID, NrGenomes, sort = FALSE)\ncolnames(Counts_Table_long_Tax_sum) <- c(\"ClusterName\", \"geneID\", \"NrGenomes\", \"quantity\")\nkable((head(Counts_Table_long_Tax_sum)), format='markdown')\n```\n\n::: {.cell-output-display}\n|ClusterName |geneID              | NrGenomes| quantity|\n|:-----------|:-------------------|---------:|--------:|\n|Aquifer (4) |GT2_Glycos_transf_2 |         4|        4|\n|Aquifer (4) |GT4                 |         4|        3|\n|Aquifer (4) |GT66                |         4|        2|\n|Aquifer (4) |GT83                |         4|        3|\n|Aquifer (4) |K00003              |         4|        2|\n|Aquifer (4) |K00008              |         4|        3|\n:::\n:::\n\n\nNext, we want to calculate the percentage.\nI.e. in the first example, we have 4 aquifer genomes, two of which [FeFe]_Group_C3 (=50%).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#calculate of the percentage to answer of the total genomes per cluster how many have a certain gene\n#notice: if running for your own data check here that your percentage makes sense. I.e. we do not want values above 100\nCounts_Table_long_Tax_sum$percentage <- round(Counts_Table_long_Tax_sum$quantity/Counts_Table_long_Tax_sum$NrGenomes*100, digits = 0)\nkable((head(Counts_Table_long_Tax_sum)), format='markdown')\n```\n\n::: {.cell-output-display}\n|ClusterName |geneID              | NrGenomes| quantity| percentage|\n|:-----------|:-------------------|---------:|--------:|----------:|\n|Aquifer (4) |GT2_Glycos_transf_2 |         4|        4|        100|\n|Aquifer (4) |GT4                 |         4|        3|         75|\n|Aquifer (4) |GT66                |         4|        2|         50|\n|Aquifer (4) |GT83                |         4|        3|         75|\n|Aquifer (4) |K00003              |         4|        2|         50|\n|Aquifer (4) |K00008              |         4|        3|         75|\n:::\n:::\n\n\nFor printing this, we want to convert our long to a wide table by using ``spread()``.\nAlso, we want our geneIDs to be the new rownames and we do this by using the ``rownames()`` functions.\nWe do this since some functions do not like to have characters in their dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#convert long to wide format and clean table (i.e. place the rownames)\nCounts_Table_long_Tax_sum_wide <- spread(Counts_Table_long_Tax_sum[,c(\"geneID\", \"ClusterName\", \"percentage\")], ClusterName, percentage)\n\n#change the rownames\nrownames(Counts_Table_long_Tax_sum_wide) <- Counts_Table_long_Tax_sum_wide$geneID\n\n#view data\nkable((head(Counts_Table_long_Tax_sum_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    |geneID              | Aquifer (4)| Basal (2)| Clade1 (11)| Clade2 (23)| Marine (6)|\n|:-------------------|:-------------------|-----------:|---------:|-----------:|-----------:|----------:|\n|CBM44               |CBM44               |          NA|        NA|          18|          NA|         NA|\n|CE4                 |CE4                 |          NA|        50|          NA|          NA|         NA|\n|GH119               |GH119               |          NA|        NA|          NA|          52|         NA|\n|GH130               |GH130               |          NA|        50|          NA|          NA|         NA|\n|GH95                |GH95                |          NA|        50|          NA|          NA|         NA|\n|GT2_Glyco_tranf_2_3 |GT2_Glyco_tranf_2_3 |          NA|        NA|          NA|          NA|         83|\n:::\n:::\n\n\nWhen we change the rownames and view the data, we see that the geneID is now both in the rownames as well as the first column. \nSince that is a bit messy, we next remove the first column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#delete the first column\nCounts_Table_long_Tax_sum_wide <- Counts_Table_long_Tax_sum_wide[,-1]\nkable((head(Counts_Table_long_Tax_sum_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    | Aquifer (4)| Basal (2)| Clade1 (11)| Clade2 (23)| Marine (6)|\n|:-------------------|-----------:|---------:|-----------:|-----------:|----------:|\n|CBM44               |          NA|        NA|          18|          NA|         NA|\n|CE4                 |          NA|        50|          NA|          NA|         NA|\n|GH119               |          NA|        NA|          NA|          52|         NA|\n|GH130               |          NA|        50|          NA|          NA|         NA|\n|GH95                |          NA|        50|          NA|          NA|         NA|\n|GT2_Glyco_tranf_2_3 |          NA|        NA|          NA|          NA|         83|\n:::\n:::\n\n\nNow we see that we have NAs for genes that are not present in some of our clades.\nIf we want to do more math then NAs are not helpful and we instead want to have a 0 there instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#replace NAs with 0\nCounts_Table_long_Tax_sum_wide[is.na(Counts_Table_long_Tax_sum_wide)] <- 0\nkable((head(Counts_Table_long_Tax_sum_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    | Aquifer (4)| Basal (2)| Clade1 (11)| Clade2 (23)| Marine (6)|\n|:-------------------|-----------:|---------:|-----------:|-----------:|----------:|\n|CBM44               |           0|         0|          18|           0|          0|\n|CE4                 |           0|        50|           0|           0|          0|\n|GH119               |           0|         0|           0|          52|          0|\n|GH130               |           0|        50|           0|           0|          0|\n|GH95                |           0|        50|           0|           0|          0|\n|GT2_Glyco_tranf_2_3 |           0|         0|           0|           0|         83|\n:::\n:::\n\n\nFinally, we want to sort our data, starting with the Basal clade and ending with the Black Sea Clades\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#sort by cluster order (defined by the order of the mapping file)\nCounts_Table_long_Tax_sum_wide <- Counts_Table_long_Tax_sum_wide[,Cluster_order]\nkable((head(Counts_Table_long_Tax_sum_wide)), format='markdown')\n```\n\n::: {.cell-output-display}\n|                    | Basal (2)| Aquifer (4)| Marine (6)| Clade1 (11)| Clade2 (23)|\n|:-------------------|---------:|-----------:|----------:|-----------:|-----------:|\n|CBM44               |         0|           0|          0|          18|           0|\n|CE4                 |        50|           0|          0|           0|           0|\n|GH119               |         0|           0|          0|           0|          52|\n|GH130               |        50|           0|          0|           0|           0|\n|GH95                |        50|           0|          0|           0|           0|\n|GT2_Glyco_tranf_2_3 |         0|           0|         83|           0|           0|\n:::\n:::\n\n\n\n## Merge our tables with the mapping data we have\n\nNow, that we have our count tables both for the bins as well as for all the clusters, we now want to add some gene description and subset the data based on different categores.\n\n### For the bins\n\n#### Add gene descriptions\n\nRemember above, we made a list of descriptions that links all geneIDs with what is behind all the gene IDs? Now we want to add this info back in in order to print all the counts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#merge\nCounts_Table_final <- merge(All_Genes_Description, Counts_Table_wide, by.x=\"Gene\", by.y=\"row.names\", all.x = T, sort = F)\nkable((head(Counts_Table_final)), format='markdown')\n```\n\n::: {.cell-output-display}\n|Gene       |Description                                               | NIOZ132_cc_b51_2| NIOZ134_mx_b281_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| GCA_002494525| GCA_002495465| GCA_002501985| SRR4028224_bin17| SRR5007147_bin71| U_76725| NIOZ124_cc_b247_2| NIOZ125_mb_b254_2| NIOZ129_mb_b262_2| NIOZ126_mb_b401_2| NIOZ122_mb_b319_2| NIOZ134_mb_b41_2| NIOZ132_mb_b282_2| NIOZ127_mb_b161_2| NIOZ123_bs_b5_2| NIOZ121_cc_b94_2| NIOZ136_cc_b15_2| GCA_002502135| NIOZ134_mb_b293_2| NIOZ132_mb_b260_2| NIOZ126_mb_b137_2| NIOZ129_mb_b254_2| NIOZ127_mb_b282_2| NIOZ122_mb_b305_2| NIOZ136_mb_b335_2| NIOZ132_mb_b198_2| NIOZ136_mb_b104_2| NIOZ125_mb_b178_2| NIOZ121_mb_b48_2| NIOZ134_cc_b149_2| NIOZ134_mb_b361_2| NIOZ136_mb_b226_2| NIOZ123_bs_b392_2| NIOZ124_mb_b130_2| NIOZ132_cc_b149_2| NIOZ125_cc_b75_2| NIOZ132_mx_b314_2| NIOZ120_mb_b229_2| NIOZ126_mb_b304_2| NIOZ119_mb_b5_2|\n|:----------|:---------------------------------------------------------|----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|-------------:|-------------:|-------------:|----------------:|----------------:|-------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|---------------:|----------------:|----------------:|-------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|\n|arCOG00570 |\"Geranylgeranyl_reductase,_flavoprotein\"                  |                2|                 4|                  3|                 1|                  3|                  2|             1|             1|             1|                1|                1|       1|                 2|                 3|                 3|                 3|                 2|                3|                 3|                 3|               3|                2|                1|             1|                 2|                 1|                 1|                 0|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|                 2|                 1|                 1|                 2|                1|                 1|                 1|                 1|               1|\n|arCOG01358 |2-methylthioadenine_synthetase                            |                1|                 2|                  0|                 1|                  0|                  1|             0|             0|             0|                0|                0|       0|                 0|                 1|                 1|                 1|                 1|                1|                 1|                 1|               1|                1|                0|             1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 2|                 1|                 1|                 0|                 1|                 1|                1|                 1|                 1|                 1|               1|\n|arCOG01169 |Enolase                                                   |                1|                 1|                  0|                 1|                  1|                  1|             1|             1|             1|                1|                1|       0|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|               1|                0|                1|             1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                0|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|                 1|               1|\n|arCOG04245 |Ribosomal_protein_S2                                      |                1|                 0|                  0|                 1|                  1|                  1|             1|             1|             1|                1|                1|       0|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|               1|                0|                1|             1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                0|                 0|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|                 1|               1|\n|arCOG01728 |\"Predicted_class_III_extradiol_dioxygenase,_MEMO1_family\" |                2|                 0|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 1|                 1|                 1|                 1|                 1|                1|                 2|                 1|               1|                0|                0|             1|                 1|                 1|                 0|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                0|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|                 0|               1|\n|arCOG00546 |mRNA_degradation_ribonuclease_J1/J2                       |                1|                 0|                  0|                 0|                  1|                  0|             1|             0|             1|                1|                1|       1|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|               1|                1|                1|             1|                 0|                 0|                 0|                 0|                 0|                 0|                 1|                 0|                 0|                 1|                0|                 2|                 0|                 1|                 0|                 1|                 1|                0|                 1|                 1|                 0|               1|\n:::\n\n```{.r .cell-code}\n\n#print (and beautify elsewhere)\nwrite.table(Counts_Table_final, \"../output_examples/Counts_Table_final.txt\",  sep = \"\\t\", quote = F, row.names = T, na = \"\")\n```\n:::\n\n\n\n#### Merging with the arcog_table\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#merge\nArcog_Data <- merge(Arcog_mapping, Counts_Table_wide, by.x=\"arcog\", by.y=\"row.names\", all.x = T, sort = F)\nkable((head(Arcog_Data)), format='markdown')\n```\n\n::: {.cell-output-display}\n|arcog      |Pathway |GeneID |Gene                                                                      |COG      |PFAM                  |CD      |TIGR                  | NIOZ132_cc_b51_2| NIOZ134_mx_b281_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| GCA_002494525| GCA_002495465| GCA_002501985| SRR4028224_bin17| SRR5007147_bin71| U_76725| NIOZ124_cc_b247_2| NIOZ125_mb_b254_2| NIOZ129_mb_b262_2| NIOZ126_mb_b401_2| NIOZ122_mb_b319_2| NIOZ134_mb_b41_2| NIOZ132_mb_b282_2| NIOZ127_mb_b161_2| NIOZ123_bs_b5_2| NIOZ121_cc_b94_2| NIOZ136_cc_b15_2| GCA_002502135| NIOZ134_mb_b293_2| NIOZ132_mb_b260_2| NIOZ126_mb_b137_2| NIOZ129_mb_b254_2| NIOZ127_mb_b282_2| NIOZ122_mb_b305_2| NIOZ136_mb_b335_2| NIOZ132_mb_b198_2| NIOZ136_mb_b104_2| NIOZ125_mb_b178_2| NIOZ121_mb_b48_2| NIOZ134_cc_b149_2| NIOZ134_mb_b361_2| NIOZ136_mb_b226_2| NIOZ123_bs_b392_2| NIOZ124_mb_b130_2| NIOZ132_cc_b149_2| NIOZ125_cc_b75_2| NIOZ132_mx_b314_2| NIOZ120_mb_b229_2| NIOZ126_mb_b304_2| NIOZ119_mb_b5_2|\n|:----------|:-------|:------|:-------------------------------------------------------------------------|:--------|:---------------------|:-------|:---------------------|----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|-------------:|-------------:|-------------:|----------------:|----------------:|-------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|---------------:|----------------:|----------------:|-------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|\n|arCOG00009 |E       |PotE   |Amino acid transporter                                                    |COG00531 |pfam00324             |        |TIGR00909             |                2|                 4|                  1|                 1|                  1|                  1|             2|             1|             2|                1|                1|       1|                 3|                 3|                 2|                 1|                 3|                3|                 3|                 3|               2|                1|                0|             1|                 1|                 2|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|                 2|                 1|                 1|                 1|                1|                 0|                 1|                 1|               0|\n|arCOG00014 |G       |RbsK   |\"Sugar kinase, ribokinase family\"                                         |COG00524 |pfam00294             |cd01174 |TIGR02152             |                1|                 2|                  1|                 2|                  1|                  2|             2|             2|             2|                2|                2|       2|                 2|                 3|                 2|                 2|                 2|                3|                 2|                 2|               2|                2|                2|             3|                 1|                 2|                 2|                 3|                 2|                 4|                 2|                 2|                 2|                 2|                3|                 2|                 2|                 3|                 2|                 4|                 1|                2|                 2|                 2|                 2|               1|\n|arCOG00017 |R       |-      |Predicted transcriptional regulator                                       |COG02522 |                      |        |                      |                1|                 1|                  0|                 0|                  0|                  0|             1|             1|             1|                1|                1|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 1|                 0|                 0|               0|\n|arCOG00018 |F       |Nnr2   |\"NAD(P)H-hydrate repair enzyme Nnr, NAD(P)H-hydrate dehydratase domain\"   |COG00063 |\"pfam03853,pfam01256\" |cd01171 |\"TIGR00197,TIGR00196\" |                1|                 1|                  1|                 0|                  1|                  0|             1|             1|             1|                2|                2|       0|                 1|                 1|                 1|                 1|                 1|                1|                 0|                 2|               1|                2|                1|             2|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 0|                 1|                1|                 2|                 0|                 2|                 1|                 1|                 1|                0|                 0|                 1|                 0|               0|\n|arCOG00029 |F       |PyrE   |Orotate phosphoribosyltransferase                                         |COG00461 |pfam00156             |cd06223 |TIGR00336             |                1|                 0|                  1|                 0|                  1|                  0|             1|             1|             1|                1|                1|       1|                 1|                 1|                 0|                 0|                 0|                1|                 1|                 1|               1|                0|                0|             0|                 0|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 1|                 1|                 1|                 1|                 1|                 1|                1|                 0|                 0|                 0|               1|\n|arCOG00030 |F       |Apt    |Adenine/guanine phosphoribosyltransferase or related PRPP-binding protein |COG00503 |pfam00156             |cd06223 |TIGR01090             |                0|                 1|                  2|                 1|                  1|                  1|             1|             1|             1|                1|                1|       1|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             1|                 0|                 1|                 2|                 2|                 1|                 2|                 1|                 2|                 2|                 2|                2|                 1|                 2|                 0|                 2|                 2|                 1|                0|                 1|                 1|                 0|               1|\n:::\n\n```{.r .cell-code}\n\n#print (and beautify elsewhere)\nwrite.table(Arcog_Data, \"../output_examples/ArCOG_Data.txt\",  sep = \"\\t\", quote = F, row.names = T, na = \"\")\n```\n:::\n\n\n\n#### Merging with the metabolism metadata file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#merge\nKEGG_Metabolism <- merge(Metabolism_file_KEGG, Counts_Table_wide, by.x=\"KO\", by.y=\"row.names\", all.x = T, sort = F)\nkable((head(KEGG_Metabolism)), format='markdown')\n```\n\n::: {.cell-output-display}\n|KO        |IDs  |pathway_A  |order |Gene                                                       |Comment.Uniprot.comment | NIOZ132_cc_b51_2| NIOZ134_mx_b281_2| SRR2090153_bin1042| SRR2090153_bin461| SRR2090159_bin1129| SRR2090159_bin1288| GCA_002494525| GCA_002495465| GCA_002501985| SRR4028224_bin17| SRR5007147_bin71| U_76725| NIOZ124_cc_b247_2| NIOZ125_mb_b254_2| NIOZ129_mb_b262_2| NIOZ126_mb_b401_2| NIOZ122_mb_b319_2| NIOZ134_mb_b41_2| NIOZ132_mb_b282_2| NIOZ127_mb_b161_2| NIOZ123_bs_b5_2| NIOZ121_cc_b94_2| NIOZ136_cc_b15_2| GCA_002502135| NIOZ134_mb_b293_2| NIOZ132_mb_b260_2| NIOZ126_mb_b137_2| NIOZ129_mb_b254_2| NIOZ127_mb_b282_2| NIOZ122_mb_b305_2| NIOZ136_mb_b335_2| NIOZ132_mb_b198_2| NIOZ136_mb_b104_2| NIOZ125_mb_b178_2| NIOZ121_mb_b48_2| NIOZ134_cc_b149_2| NIOZ134_mb_b361_2| NIOZ136_mb_b226_2| NIOZ123_bs_b392_2| NIOZ124_mb_b130_2| NIOZ132_cc_b149_2| NIOZ125_cc_b75_2| NIOZ132_mx_b314_2| NIOZ120_mb_b229_2| NIOZ126_mb_b304_2| NIOZ119_mb_b5_2|\n|:---------|:----|:----------|:-----|:----------------------------------------------------------|:-----------------------|----------------:|-----------------:|------------------:|-----------------:|------------------:|------------------:|-------------:|-------------:|-------------:|----------------:|----------------:|-------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|---------------:|----------------:|----------------:|-------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|-----------------:|----------------:|-----------------:|-----------------:|-----------------:|---------------:|\n|K00362    |ID14 |Nitrogen   |N2    |nirB; nitrite reductase (NADH) large subunit [EC:1.7.1.15] |Dissimilatory           |                0|                 1|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|TIGR02374 |ID15 |Nitrogen   |N2    |\"NirB, nitrite reductase [NAD(P)H]\"                        |Dissimilatory           |                0|                 2|                  0|                 0|                  0|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|TIGR02378 |ID17 |Nitrogen   |N2    |\"NirD, nitrite reductase [NAD(P)H]\"                        |Dissimilatory           |                0|                 1|                  0|                 1|                  1|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|K04748    |ID31 |no_pathway |      |norQ; nitric oxide reductase NorQ protein                  |                        |                0|                 0|                  0|                 0|                  1|                  0|             0|             0|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|K00376    |ID36 |Nitrogen   |N5    |nosZ; nitrous-oxide reductase [EC:1.7.2.4]                 |                        |                0|                 0|                  0|                 0|                  0|                  0|             0|             1|             0|                0|                0|       0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n|TIGR04246 |ID37 |Nitrogen   |N5    |\"nosZ,  nitrous-oxide reductase, Sec-dependent\"            |                        |                0|                 0|                  0|                 0|                  0|                  0|             1|             1|             0|                1|                1|       1|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|               0|                0|                0|             0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|                 0|                 0|                 0|                0|                 0|                 0|                 0|               0|\n:::\n\n```{.r .cell-code}\n\n#print\nwrite.table(KEGG_Metabolism, \"../output_examples/KEGG_Metabolism.txt\",  sep = \"\\t\", quote = F, row.names = T, na = \"\")\n```\n:::\n\n\n\n### For the clusters\n\nThe process works exactly the same as above. So try by yourself if you can merge things ;-).\n\n\n\n\n## Plot the data for our genes of interest\n\nHere, we are not interested in plotting all genes but just want to plot things that are listed under the lipid pathway. \n\nSince we are only interested in the Lipid pathway for the genes of interest (the table, among others, also lists genes involved in informational processing),\nwe first need to make a gene list of just the genes we are interested in.\n\nNew functions:\n\n- ``subset()`` = subsets a dataframe. Syntax --> subset(dataframe, column, %in% pattern_we_look_for)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#subset genes of interest and clean factors\nGenes_Lipids <- subset(Genes_of_interest, Pathway_1 %in% \"Lipids\")\nGenes_Lipids$Gene <- factor(Genes_Lipids$Gene)\nGenes_Lipids$arcog <- factor(Genes_Lipids$arcog)\n\n#check how many genes we have\ndim(Genes_Lipids)\n## [1] 16 12\n\nkable((head(Genes_Lipids)), format='markdown')\n```\n\n::: {.cell-output-display}\n|    |Pathway_1 |pathway_2  |arcog      |xx |Pathway |Gene_short |Gene_name                                                            |Comment                                                                                                                                                          |Gene  |Order   | Order2|Other |\n|:---|:---------|:----------|:----------|:--|:-------|:----------|:--------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----|:-------|------:|:-----|\n|262 |Lipids    |Mevalonate |arCOG01767 |NA |I       |HmgB       |3-hydroxy-3-methylglutaryl CoA synthase                              |Catalyzes the condensation of acetyl-CoA with acetoacetyl-CoA to form 3-hydroxy-3-methylglutaryl-CoA (HMG-CoA). Functions in the mevalonate (MVA) pathway        |HmgB  |Lipid_1 |    262|      |\n|263 |Lipids    |Mevalonate |arCOG04260 |NA |I       |HmgA       |\"3-hydroxy-3-methylglutaryl-coenzyme A reductase, HMG-CoA reductase\" |Catalyzes the NADPH-dependent reductive deacylation of (S)-3-hydroxy-3-methylglutaryl-CoA (HMG-CoA) to (R)-mevalonate. Functions in the mevalonate (MVA) pathway |HmgA  |Lipid_1 |    263|      |\n|264 |Lipids    |Mevalonate |arCOG01028 |NA |I       |MvK        |Mevalonate kinase                                                    |Catalyzes the phosphorylation of (R)-mevalonate (MVA) to (R)-mevalonate 5-phosphate (MVAP).                                                                      |MvK   |Lipid_1 |    264|      |\n|265 |Lipids    |Mevalonate |K18689     |NA |I       |M3k        |Mevalonate 3-kinase                                                  |Catalyzes the phosphorylation of mevalonate (MVA) to yield mevalonate-3-phosphate. Functions in an alternative mevalonate pathway                                |M3k   |Lipid_1 |    265|      |\n|266 |Lipids    |Mevalonate |arCOG01967 |NA |I       |M3P5K      |Mevalonate-3-phosphate 5-kinase                                      |\"Phosphorylates mevalonate 3-phosphate to form mevalonate 3,5-bisphosphate. Functions in an alternative mevalonate pathway\"                                      |M3P5K |Lipid_1 |    266|      |\n|267 |Lipids    |Mevalonate |arCOG02937 |NA |I       |mvaD       |Diphosphomevalonate decarboxylase                                    |Catalyzes the decarboxylation of mevalonate 5-phosphate (MVAP) to isopentenyl phosphate (IP). Functions in the mevalonate (MVA) pathway leading to IPP           |mvaD  |Lipid_1 |    267|      |\n:::\n:::\n\n\nNext, we want to make sure that the order is ok. In this specific example, we manually defined two columns for ordering (Order and Order2). \nWe sort based on these columns and make a vector to order our genes of interest and our pathways of interest.\nFor the lipid genes we look at the mevalonate pathway and general lipid biosynthesis genes\n\n- ``length()``` - lets us check the length of a vector, here it allows us to see that we would expect 16 genes\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define an order (we arange the dataframe based on two columsn, Order and Order2)\nGenes_Lipids_order_temp <- Genes_Lipids %>% arrange(Order, Order2)\nGenes_Lipids_order <- as.character(unique(Genes_Lipids_order_temp$Gene))\nlength(Genes_Lipids_order)\n## [1] 16\n\nGenes_Lipids_order\n##  [1] \"HmgB\"          \"HmgA\"          \"MvK\"           \"M3k\"          \n##  [5] \"M3P5K\"         \"mvaD\"          \"Ipk\"           \"GFPS\"         \n##  [9] \"EgsA\"          \"GGGP_synthase\" \"UbiA\"          \"GGR\"          \n## [13] \"CarS\"          \"PgsA\"          \"ASS\"           \"Asd\"\n\n#The lipids belong to two different pathways, these 2 pathways we want to show in two separate heatmaps\nLipids_Pathway_order <- as.character(unique(Genes_Lipids$pathway_2))\nLipids_Pathway_order\n## [1] \"Mevalonate\" \"Lipids\"\n```\n:::\n\n\nNow that we know what genes we are interested in, lets subset our original count table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#subset our original count table for genes of interest and clean factors\nGenes_Lipids_counts <- subset(Counts_Table_long_Tax_sum, geneID %in% as.character(Genes_Lipids$arcog))\nGenes_Lipids_counts$geneID <- factor(Genes_Lipids_counts$geneID)\n\n#control that all went fine\nlength(unique(Genes_Lipids_counts$geneID))\n## [1] 15\n\ndim(Genes_Lipids_counts)\n## [1] 60  5\nkable((head(Genes_Lipids_counts)), format='markdown')\n```\n\n::: {.cell-output-display}\n|     |ClusterName |geneID     | NrGenomes| quantity| percentage|\n|:----|:-----------|:----------|---------:|--------:|----------:|\n|1924 |Aquifer (4) |arCOG00476 |         4|        4|        100|\n|1947 |Aquifer (4) |arCOG00570 |         4|        4|        100|\n|1967 |Aquifer (4) |arCOG00670 |         4|        3|         75|\n|1968 |Aquifer (4) |arCOG00671 |         4|        4|        100|\n|1997 |Aquifer (4) |arCOG00860 |         4|        3|         75|\n|2032 |Aquifer (4) |arCOG00982 |         4|        3|         75|\n:::\n:::\n\n\nWith length we see that now we just have 15 genes. How can we find out what gene is missing?\n\n- ``setdiff()`` = we compare two vectors and print the elements that differ.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nsetdiff(Genes_Lipids$arcog, Genes_Lipids_counts$geneID)\n## [1] \"K18689\"\n```\n:::\n\n\nWe can see that we miss K18689. If we check our original annotations input, we can see that K18689 does not exist in that table. So we can nout pull information because of that.\nThis gives a good example, why it is important to check your data as we do not know whether this is an issue with the code or what the problem could be.\n\n-------\n\nNow, since our count data does not know that we categorize our different genes into different pathways, lets add this info in with ``merge()`` \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#add in metadata (from the pathway info)\nKey_Lipids_genes_cluster <- merge(Genes_Lipids_counts, Genes_Lipids, by.x =\"geneID\", by.y = 'arcog' , all.x = T )\nkable((head(Key_Lipids_genes_cluster)), format='markdown')\n```\n\n::: {.cell-output-display}\n|geneID     |ClusterName | NrGenomes| quantity| percentage|Pathway_1 |pathway_2 |xx |Pathway |Gene_short |Gene_name                                                                |Comment                                                                                                                                       |Gene |Order   | Order2|Other |\n|:----------|:-----------|---------:|--------:|----------:|:---------|:---------|:--|:-------|:----------|:------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------|:----|:-------|------:|:-----|\n|arCOG00476 |Aquifer (4) |         4|        4|        100|Lipids    |Lipids    |NA |L       |UbiA       |geranylgeranylglycerol-phosphate geranylgeranyltransferase [EC:2.5.1.42] |Notice: only the homologs identified in the aquifer MAGs harbor the characteristic DGGGP synthase domain (IPR023547)                          |UbiA |Lipid_2 |    272|      |\n|arCOG00476 |Basal (2)   |         2|        2|        100|Lipids    |Lipids    |NA |L       |UbiA       |geranylgeranylglycerol-phosphate geranylgeranyltransferase [EC:2.5.1.42] |Notice: only the homologs identified in the aquifer MAGs harbor the characteristic DGGGP synthase domain (IPR023547)                          |UbiA |Lipid_2 |    272|      |\n|arCOG00476 |Clade1 (11) |        11|       11|        100|Lipids    |Lipids    |NA |L       |UbiA       |geranylgeranylglycerol-phosphate geranylgeranyltransferase [EC:2.5.1.42] |Notice: only the homologs identified in the aquifer MAGs harbor the characteristic DGGGP synthase domain (IPR023547)                          |UbiA |Lipid_2 |    272|      |\n|arCOG00476 |Marine (6)  |         6|        6|        100|Lipids    |Lipids    |NA |L       |UbiA       |geranylgeranylglycerol-phosphate geranylgeranyltransferase [EC:2.5.1.42] |Notice: only the homologs identified in the aquifer MAGs harbor the characteristic DGGGP synthase domain (IPR023547)                          |UbiA |Lipid_2 |    272|      |\n|arCOG00476 |Clade2 (23) |        23|       19|         83|Lipids    |Lipids    |NA |L       |UbiA       |geranylgeranylglycerol-phosphate geranylgeranyltransferase [EC:2.5.1.42] |Notice: only the homologs identified in the aquifer MAGs harbor the characteristic DGGGP synthase domain (IPR023547)                          |UbiA |Lipid_2 |    272|      |\n|arCOG00570 |Clade2 (23) |        23|       22|         96|Lipids    |Lipids    |NA |L       |GGR        |digeranylgeranylglycerophospholipid reductase [EC:1.3.1.101 1.3.7.11]    |\"reduction of 2,3-digeranylgeranylglycerophospholipids (unsaturated archaeols) into 2,3-diphytanylglycerophospholipids (saturated archaeols)\" |GGR  |Lipid_2 |    273|      |\n:::\n:::\n\n\n### Categorizing data\n\n There are different ways to color code data. By default the way we do it, we use a gradual color scale from 0-100%. \n However, we could also define categories with the ifelse statement we learned before.\n Here, we define 4 categories (100%, 75-100 and, 33-75 and 0-33%)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define color code (not used for the current figure, but can be changed)\n#here , we define 3 color levels, which sometimes is useful to show very clear cutoffs\nKey_Lipids_genes_cluster$category <- ifelse(Key_Lipids_genes_cluster$percentage == 100, \"1\",\n                                         ifelse(Key_Lipids_genes_cluster$percentage >= 75, \"0.75\",\n                                                ifelse(Key_Lipids_genes_cluster$percentage >= 33, \"0.33\", \"0\")))\n```\n:::\n\n\n### Order our data\n\nRemember the annoying thing that R sorts alphabetically? \nLet's make sure we ahve the order we want.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define order for the plot\nKey_Lipids_genes_cluster$ClusterName2 <-  factor(Key_Lipids_genes_cluster$ClusterName, levels = rev(Cluster_order))\nKey_Lipids_genes_cluster$Gene2 <-  factor(Key_Lipids_genes_cluster$Gene, levels = Genes_Lipids_order)\nKey_Lipids_genes_cluster$pathway_2b <-  factor(Key_Lipids_genes_cluster$pathway_2, levels = Lipids_Pathway_order)\n```\n:::\n\n\n### Plotting\n\nIn the example here, we use a gradual scale. If we would want to use our 4 categories we can use this code ``#scale_fill_manual(values= c(\"white\", \"blue\", \"blue\", \"dodgerblue\"))``\nand replacing the ``fill = percentage `` with ``fill = category ``. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n#plot\np1_Lipids <- \n  ggplot(Key_Lipids_genes_cluster, aes(x=Gene2, y=ClusterName2)) + \n  geom_tile(aes(fill = percentage)) +\n  geom_hline(yintercept=2.5) +\n  facet_wrap( ~ pathway_2b, nrow = 1, scales='free_x') +\n  scale_fill_distiller(palette = \"Blues\", direction = 1) +\n  theme_bw() +\n  #scale_fill_manual(values= c(\"white\", \"blue\", \"blue\", \"dodgerblue\")) +\n  labs(x=\"\", y=\"\", fill=\"Percentage\") + \n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        axis.line = element_line(colour = \"black\")) +\n  theme(legend.position=\"left\",\n        axis.text.x=element_text(angle=45,vjust = 1, hjust=1, size=8),\n        #axis.text.y=element_blank(),\n        axis.ticks=element_blank(),\n        axis.line=element_blank(),\n        plot.margin=unit(c(0, 0, 0, 0), \"mm\"))\n\np1_Lipids\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-218-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\nas.data.frame(levels(Key_Lipids_genes_cluster$ClusterName2))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"levels(Key_Lipids_genes_cluster$ClusterName2)\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Clade2 (23)\"},{\"1\":\"Clade1 (11)\"},{\"1\":\"Marine (6)\"},{\"1\":\"Aquifer (4)\"},{\"1\":\"Basal (2)\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n\np1_Lipids2 <- \n  ggplot(Key_Lipids_genes_cluster, aes(x=Gene2, y=ClusterName2)) + \n  geom_tile(aes(fill = percentage)) +\n  geom_hline(yintercept=2.5) +\n  facet_wrap( ~ pathway_2b, nrow = 1, scales='free_x') +\n  scale_fill_distiller(palette = \"Blues\", direction = 1) +\n  theme_bw() +\n  #scale_fill_manual(values= c(\"white\", \"blue\", \"blue\", \"dodgerblue\")) +\n  labs(x=\"\", y=\"\", fill=\"Percentage\") + \n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        axis.line = element_line(colour = \"black\")) +\n  theme(legend.position=\"left\",\n        axis.text.x=element_text(angle=45,vjust = 1, hjust=1, size=8),\n        #axis.text.y=element_blank(),\n        axis.ticks=element_blank(),\n        axis.line=element_blank(),\n        plot.margin=unit(c(0, 0, 0, 0), \"mm\"))\n\np1_Lipids2\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-218-2.png){width=672}\n:::\n:::\n\n\nIf we plot with facets we can sometimes have the problem that different genes have different widths.\nWe can correct this behaviour with ggplotGrob.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# convert ggplot object to grob object (used to rescale plot)\ngp_lipid <- ggplotGrob(p1_Lipids2)\n\n# optional: take a look at the grob object's layout\ngtable::gtable_show_layout(gp_lipid)\n\n# get gtable columns corresponding to the facets (5 & 9, in this case)\nfacet.columns <- gp_lipid$layout$l[grepl(\"panel\", gp_lipid$layout$name)]\n\n# get the number of unique x-axis values per facet (1 & 3, in this case)\nx.var <- sapply(ggplot_build(p1_Lipids)$layout$panel_scales_x,\n                function(l) length(l$range$range))\n\n# change the relative widths of the facet columns based on\n# how many unique x-axis values are in each facet\ngp_lipid$widths[facet.columns] <- gp_lipid$widths[facet.columns] * x.var\n\n# plot result\ngrid::grid.draw(gp_lipid)\n```\n\n::: {.cell-output-display}\n![](1_intro_files/figure-html/unnamed-chunk-219-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n#print\n#pdf(\"2_Output/Figure_S64.pdf\", paper=\"special\", family=\"sans\",width=8, height=7, useDingbats=FALSE)\n#grid::grid.draw(gp_lipid)\n#dev.off() \n```\n:::\n\n\nIn this example we see that only the aquifer and the basal clade have all required genes for the mevalonate pathway and the lipid pathway that is required to make a key archaeal lipid.\n\n",
    "supporting": [
      "1_intro_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}